{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}

<script type="x/template" id="vue-add-item-to-basket-overlay">

    {% set configItemName = config("Ceres.item.name") %}

    <div id="add-item-to-basket-overlay">
        <div class="modal fade">
            <div class="modal-dialog" role="document">
                <div class="modal-content">

                    <!-- MODAL HEADER -->
                    <div class="modal-header">
                        <button type="button" @click="closeOverlay()" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <span style="float: right; margin-right: 5px; color: lightgray;"><span class="timer">${ timeToClose }</span>s</span>
                        <div class="modal-title h5">{{ trans("Ceres::Template.basketItemAdded") }}</div>
                    </div>
                    <!-- ./MODAL HEADER -->

                    <!-- MODAL BODY -->
                    <div class="modal-body">
                        <div class="row is-table-row">
                            <div class="col-md-4" style="min-height: 80px;">
                                <img style="max-height: 140px;" class="img-fluid m-x-auto"
                                     :src="imageUrl" :alt="itemName"/>
                            </div>
                            <div class="col-md-8">
                                <p>
                                    <strong>${ itemName }</strong>
                                </p>
                                <p class="small">
                                    <strong>
                                        <span class="text-muted">${ latestBasketEntry.quantity } x</span>
                                        <span>${ price | currency }</span>
                                    </strong>
                                </p>

                                <p class="small" v-for="attribute in latestBasketEntry.item.attributes">
                                    <strong>${ attribute.attribute.names.name }</strong>:
                                    <span>${ attribute.value.names.name }</span>
                                </p>

                                <p class="small" v-for="property in latestBasketEntry.item.properties">
                                    <strong v-if="property.property.value">${property.property.names.name} (+ ${latestBasketEntry.item.properties | propertySurcharge(property.property.id) | currency }):</strong>
                                    <span v-if="property.property.value">${property.property.value}</span>
                                </p>
                            </div>
                        </div>
                    </div>
                    <!-- ./MODAL BODY -->

                    <!-- MODAL FOOTER -->
                    <div class="modal-footer">
                        <div class="row">
                            <div class="col-sm-8 offset-sm-2 item-confirm-special-case-close">
                                <a v-waiting-animation-infinite href="/basket" class="btn btn-primary btn-medium btn-m-r btn-outline-primary">
                                    {{ trans("Ceres::Template.basket") }} <i class="fa fa-shopping-cart"
                                                                             aria-hidden="true"></i>
                                </a>
                               <a v-waiting-animation-infinite href="/checkout" class="btn btn-primary btn-medium">
                                    {{ trans("Ceres::Template.orderCheckout") }} <i class="fa fa-arrow-right"
                                                                                    aria-hidden="true"></i>
                                </a>
                                {{ LayoutContainer.show("Ceres::Basket.ExtendOverlayButtons") }}
                            </div>
                        </div>
                    </div>
                    <!-- ./MODAL FOOTER -->

                </div>
            </div>
        </div>
    </div>

</script>