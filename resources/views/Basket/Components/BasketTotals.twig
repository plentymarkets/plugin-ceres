{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}

<script type="x/template" id="vue-basket-totals">
    <div class="cmp cmp-totals">
        <div class="h3">{{ trans("Ceres::Template.basketSum") }}</div>
        <div class="component-loading with-icon refreshing split-totals-height" :class="{ 'isLoading': isBasketLoading }">
            <dl>
                {{ LayoutContainer.show("Ceres::BasketTotals.BeforeItemSum") }}
                
                {# Basket value (net) #}
                <template v-if="visibleFields.includes('basketValueNet')">
                    <dt :class="{ 'font-weight-bold': showNetPrices }">
                        {{ trans("Ceres::Template.basketValue") }} ({{ trans("Ceres::Template.basketNet") }})
                    </dt><!--
                    --><dd :class="{ 'font-weight-bold': showNetPrices }">
                        ${ calculateBaseValue(basket.itemSumNet, basket.basketRebate) | currency }
                    </dd>
                </template>
                {# Basket value (net) #}

                {# Basket value (gross) #}
                <template v-if="visibleFields.includes('basketValueGross')">
                    <dt :class="{ 'font-weight-bold': !showNetPrices }">
                        {{ trans("Ceres::Template.basketValue") }} ({{ trans("Ceres::Template.basketGross") }})
                    </dt><!--
                    --><dd :class="{ 'font-weight-bold': !showNetPrices }">
                        ${ calculateBaseValue(basket.itemSum, basket.basketRebate)| currency  }
                    </dd>
                </template>
                {# Basket value (gross) #}

                {# Rebate #}
                <template v-if="visibleFields.includes('rebate') && basket.basketRebate">
                    <dt class="rebate-hint">
                        {{ trans("Ceres::Template.basketRebate") }}
                    </dt><!--
                --><dd class="rebate-hint" v-if="!showNetPrices">
                        ${ calculateBaseValue(basket.itemSum, basket.basketRebate) - basket.itemSum | currency  }
                    </dd><!--
                --><dd class="rebate-hint" v-else>
                        ${ calculateBaseValue(basket.itemSumNet, basket.basketRebate) - basket.itemSumNet | currency  }
                    </dd>
                    <dt :class="{ 'font-weight-bold': showNetPrices }">
                        {{ trans("Ceres::Template.basketSubTotal") }} ({{ trans("Ceres::Template.basketNet") }})
                    </dt><!--
                --><dd :class="{ 'font-weight-bold': showNetPrices }">
                        ${ basket.itemSumNet | currency }
                    </dd>
                    <dt :class="{ 'font-weight-bold': !showNetPrices }">
                        {{ trans("Ceres::Template.basketSubTotal") }} ({{ trans("Ceres::Template.basketGross") }})
                    </dt><!--
                --><dd :class="{ 'font-weight-bold': !showNetPrices }">
                        ${ basket.itemSum | currency }
                    </dd>
                </template>
                {# Rebate #}

                {{ LayoutContainer.show("Ceres::BasketTotals.AfterItemSum") }}
                {{ LayoutContainer.show("Ceres::BasketTotals.BeforeShippingCosts") }}

                {# Shipping (net) #}
                <template v-if="visibleFields.includes('shippingCostsNet')">
                    <dt :class="{ 'font-weight-bold': showNetPrices }">
                        {{ trans("Ceres::Template.basketShippingCosts") }} ({{ trans("Ceres::Template.basketNet") }})
                    </dt><!--
                    --><dd :class="{ 'font-weight-bold': showNetPrices }">
                        ${ basket.shippingAmountNet | currency }
                    </dd>
                </template>
                {# Shipping (net) #}

                {# Shipping (gross) #}
                <template v-if="visibleFields.includes('shippingCostsGross')">
                    <dt :class="{ 'font-weight-bold': !showNetPrices }">
                        {{ trans("Ceres::Template.basketShippingCosts") }} ({{ trans("Ceres::Template.basketGross") }})
                    </dt><!--
                    --><dd :class="{ 'font-weight-bold': !showNetPrices }">
                        ${ basket.shippingAmount | currency }
                    </dd>
                </template>
                {# Shipping (gross) #}

                {{ LayoutContainer.show("Ceres::BasketTotals.AfterShippingCosts") }}
                <hr>
                {{ LayoutContainer.show("Ceres::BasketTotals.BeforeTotalSum") }}

                {# Total sum (net) #}
                <template v-if="visibleFields.includes('totalSumNet')">
                    <dt :class="{ 'font-weight-bold': showNetPrices }">
                        {{ trans("Ceres::Template.basketTotalSum") }} ({{ trans("Ceres::Template.basketNet") }})
                    </dt><!--
                    --><dd :class="{ 'font-weight-bold': showNetPrices }">
                        ${ basket.basketAmountNet | currency }
                    </dd>
                </template>
                {# Total sum (net) #}

                {# Coupon #}
                <template v-if="visibleFields.includes('promotionCoupon') && basket.couponCode && basket.couponCampaignType === 'promotion'">
                    <dt class="font-weight-bold">
                        {{ trans("Ceres::Template.basketCoupon") }}
                    </dt><!--
                --><dd class="font-weight-bold">
                        ${ basket.couponDiscount | currency }
                    </dd>
                </template>
                {# Coupon #}

                {{ LayoutContainer.show("Ceres::BasketTotals.BeforeVat") }}

                {# VAT #}
                <div v-if="visibleFields.includes('vats')" class="vatTotals" v-for="totalVat in basket.totalVats">
                    <dt>
                        {{ trans("Ceres::Template.basketVAT") }} ${ totalVat.vatValue }%
                    </dt><!--
                    --><dd>
                        ${ totalVat.vatAmount | currency }
                    </dd>
                </div>
                {# VAT #}

                {{ LayoutContainer.show("Ceres::BasketTotals.AfterVat") }}

                <div class="totalSum">
                    <hr>
                    {# Total sum (gross) #}
                    <template v-if="visibleFields.includes('totalSumGross')">
                        <dt :class="{ 'font-weight-bold': !showNetPrices }">
                            {{ trans("Ceres::Template.basketTotalSum") }} ({{ trans("Ceres::Template.basketGross") }})
                        </dt><!--
                        --><dd :class="{ 'font-weight-bold': !showNetPrices }">
                            ${ basket.basketAmount | currency }
                        </dd>
                    </template>
                    {# Total sum (gross) #}

                    {# Coupon #}
                    <template v-if="visibleFields.includes('salesCoupon') && basket.couponCode && basket.couponCampaignType === 'sales'">
                        <dt class="font-weight-bold">
                            {{ trans("Ceres::Template.basketCoupon") }}</strong>
                        </dt><!--
                     --><dd class="font-weight-bold">
                            ${ basket.couponDiscount | currency }
                        </dd>
                    </template>
                    {# Coupon #}

                    {# Coupon open amount #}
                    <template v-if="visibleFields.includes('openAmount') && basket.couponCampaignType === 'sales'">
                        <dt class="font-weight-bold">
                            {{ trans("Ceres::Template.basketOpenAmount") }}
                        </dt><!--
                    --><dd class="font-weight-bold">
                            ${ basket.openAmount | currency }
                        </dd>
                    </template>
                    {# Coupon open amount #}
                </div>
                {{ LayoutContainer.show("Ceres::BasketTotals.AfterTotalSum") }}
            </dl>
        </div>

        {% set deliveryExportTranslation = trans("Ceres::Template.basketExportDeliveryWarning", { from: "${ shopCountry && shopCountry.currLangName }", to: "${ currentShippingCountry && currentShippingCountry.currLangName }" }) %}
        {% if deliveryExportTranslation | trim is not empty %}
            <div v-if="basket.isExportDelivery" class="alert alert-info w-100">
                {{ trans("Ceres::Template.basketExportDeliveryWarning", { from: "${ shopCountry && shopCountry.currLangName }", to: "${ currentShippingCountry && currentShippingCountry.currLangName }" }) }}
            </div>
        {% endif %}

    </div>
</script>