{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}
{% import "Ceres::Widgets.Helper.WidgetHelper" as WidgetHelper %}

{% set customClass = widget.settings.customClass.mobile %}
{% set headlineStyle   = widget.settings.headlineStyle.mobile  %}
{% set headline        = widget.settings.headline.mobile  %}
{% set listType        = widget.settings.listType.mobile %}
{% set itemSort        = widget.settings.itemSort.mobile %}
{% set maxItems        = widget.settings.maxItems.mobile %}
{% set categoryId      = widget.settings.categoryId.mobile %}
{% set itemListId      = widget.settings.tagId.mobile %}
{% set itemsPerPage    = widget.settings.itemsPerPage.mobile %}
{% set manufacturerId  = widget.settings.manufacturerId.mobile %}

{% set spacingSettings = widget.settings.spacing %}
{% set inlinePadding   = WidgetHelper.getInlineSpacings(spacingSettings, spacingSettings.customPadding.mobile, "") %}
{% set inlineMargin    = WidgetHelper.getInlineSpacings(spacingSettings, "", spacingSettings.customMargin.mobile) %}
{% set spacingPadding  = WidgetHelper.getSpacingClasses(spacingSettings, spacingSettings.customPadding.mobile, "") %}
{% set spacingMargin   = WidgetHelper.getSpacingClasses(spacingSettings, "", spacingSettings.customMargin.mobile) %}

{% if itemsPerPage is empty or itemsPerPage > 4 %}
    {% set itemsPerPage = 4 %}
{% elseif itemsPerPage < 1 %}
    {% set itemsPerPage = 1 %}
{% endif %}

{% if listType == "category" %}
    {% set itemListId = categoryId %}
    {{ Twig.set("category", Twig.call("services.category.get", [categoryId])) }}
    {{ Twig.set("categoryUrl", Twig.call("services.category.getURL", ["$category"])) }}
{% elseif listType == 'manufacturer' %}
    {% set itemListId = manufacturerId %}
{% endif %}

{% set requestedListType = listType %}
{% if listType == "last_seen" and isPreview %}
    {# request random items when rendering preview of last seen items. #}
    {% set requestedListType = "random" %}
{% endif %}

{% if listType != "last_seen" or not isPreview %}
    {# do not get item list for last seen items. Items will be loaded asynchronusly by vue component. #}
    {{ Twig.set("itemList", Twig.call("services.itemList.getItemList", [requestedListType, itemListId, itemSort, maxItems]) ) }}
{% endif %}

{{ Twig.set("title", trans("Ceres::Widget.itemListPlaceholderListHeader") | json_encode ) }}
{% if headlineStyle == "default-caption" or headlineStyle is empty %}
    {% if listType == "category" %}
        {{ Twig.if("category") }}
            {{ Twig.set("title", "category.details[0].name") }}
        {{ Twig.endif() }}
    {% elseif listType == "last_seen" %}
        {{ Twig.set("title", "trans('Ceres::Template.itemListLastSeen')" ) }}
    {% elseif listType == "tag_list" and itemListId is not empty %}
        {{ Twig.set("title", Twig.call("services.tag.getTagName", [itemListId])) }}
    {% else %}
        {{ Twig.set("title", trans("Ceres::Widget.itemListPlaceholderListHeader") | json_encode ) }}
    {% endif %}
{% endif %}

{{ Twig.component( "Ceres::Containers.Components.LastSeenItemList" ) }}
{{ Twig.component( "Ceres::ItemList.Components.CategoryItem" ) }}
{{ Twig.component( "Ceres::PageDesign.Components.Carousel" ) }}
{{ Twig.import("LayoutContainer", "Ceres::PageDesign.Macros.LayoutContainer") }}

<div class="widget widget-item-list widget-{{ widget.settings.appearance.mobile | default('primary') }}{% if customClass | length > 0 %} {{ customClass }}{% endif %}{% if spacingMargin | length > 0 %} {{ spacingMargin }}{% endif %}" {% if inlineMargin | length > 0 %} style="{{ inlineMargin }}"{% endif %}>
    <div class="widget-inner">
        {% if listType == "last_seen" and not isPreview %}
            {# render vue component for last seen items #}
            <last-seen-item-list
                :items-per-page="{{ itemsPerPage }}"
                :max-items="{{ maxItems }}"
                {% if spacingPadding | length > 0 %}padding-classes="{{ spacingPadding }}"{% endif %}
                {% if inlinePadding | length > 0 %}padding-inline-styles="{{ inlinePadding }}"{% endif %}
                v-cloak>
                <template #heading>
                    <div class="widget-caption bg-appearance widget-item-list-caption mb-3">
                        {% if headlineStyle == "custom-caption" %}
                            <div {{ WidgetHelper.makeEditable("headline", TOOLBAR_LAYOUT.INLINE, isPreview, "widget-item-list-caption") }}>
                                {{ headline | raw }}
                            </div>
                        {% else %}
                            <div>
                                <h2>{{ Twig.print("title") }}</h2>
                            </div>
                        {% endif %}
                    </div>
                </template>
            </last-seen-item-list>
        {% else %}
            {# render static item lists #}
            {% if headlineStyle == "default-caption" or headlineStyle == "custom-caption" or headlineStyle is empty %}
                <div class="widget-caption widget-item-list-caption mb-3 bg-appearance">
                    {% if headlineStyle == "custom-caption" %}
                        <div {{ WidgetHelper.makeEditable("headline", TOOLBAR_LAYOUT.INLINE, isPreview, "widget-item-list-caption") }}>
                            {{ headline | raw }}
                        </div>
                    {% else %}
                        <div>
                            <h2>{{ Twig.print("title") }}</h2>
                        </div>
                    {% endif %}

                    {{ Twig.if("category") }}
                        <a href="{{ Twig.print(Twig.call("services.category.getURL", [Twig.var("category")])) }}">
                            <i class="fa fa-angle-double-right" aria-hidden="true"></i> {{ Twig.trans("Ceres::Template.homepageShowAll") }}
                        </a>
                    {{ Twig.endif() }}
                </div>
            {% endif %}

            {{ Twig.if("itemList.documents is not empty") }}
                <carousel :items-per-page="{{ itemsPerPage }}">
                    {{ Twig.for("item", "itemList.documents") }}
                        <template slot="items">
                            <category-item
                                :item-data="{{ Twig.print("item.data | json_encode") }}"
                                :decimal-count="{{ Twig.print("ceresConfig.item.storeSpecial | default(0) | json_encode") }}"
                                :disable-carousel-on-mobile="{{ Twig.print("itemList.documents | length") }} > {{ itemsPerPage }}"
                                {% if spacingPadding | length > 0 %}padding-classes="{{ spacingPadding }}"{% endif %}
                                {% if inlinePadding | length > 0 %}padding-inline-styles="{{ inlinePadding }}"{% endif %}>
                                <template #before-prices>
                                    {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::CategoryItem.BeforePrices", Twig.var("item.data")])) }}
                                </template>
                                <template #after-prices>
                                    {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::CategoryItem.AfterPrices", Twig.var("item.data")])) }}
                                </template>

                                <a href="{{ Twig.print("item.data | itemURL") }}" class="small">
                                    <i class="fa fa-image"></i>
                                    <span>{{ Twig.print("item.data | itemName") }}</span>
                                </a>
                            </category-item>
                        </template>
                    {{ Twig.endfor() }}
                </carousel>
            {{ Twig.endif() }}
        {% endif %}
    </div>
</div>
