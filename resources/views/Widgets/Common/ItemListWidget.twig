{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}

{% set headlineStyle  = widget.settings.headlineStyle.mobile  %}
{% set headline       = widget.settings.headline.mobile  %}
{% set listType       = widget.settings.listType.mobile %}
{% set itemSort       = widget.settings.itemSort.mobile %}
{% set maxItems       = widget.settings.maxItems.mobile %}
{% set categoryId     = widget.settings.categoryId.mobile %}
{% set itemListId     = widget.settings.tagId.mobile %}
{% set itemsPerPage   = widget.settings.itemsPerPage.mobile %}
{% set manufacturerId = widget.settings.manufacturerId.mobile %}

{% if itemsPerPage is empty or itemsPerPage > 4 %}
    {% set itemsPerPage = 4 %}
{% elseif itemsPerPage < 1 %}
    {% set itemsPerPage = 1 %}
{% endif %}


{% if listType == "category" %}
    {% set itemListId = categoryId %}
    {{ Twig.set("category", Twig.call("services.category.get", [categoryId])) }}
    {{ Twig.set("categoryUrl", Twig.call("services.category.getURL", ["$category"])) }}
{% endif %}

{% set requestedListType = listType %}
{% if listType == "last_seen" and isPreview %}
    {# request random items when rendering preview of last seen items. #}
    {% set requestedListType = "random" %}
{% endif %}

{% if listType != "last_seen" or not isPreview %}
    {# do not get item list for last seen items. Items will be loaded asynchronusly by vue component. #}
    {{ Twig.set("itemList", Twig.call("services.itemList.getItemList", [requestedListType, itemListId, itemSort, maxItems]) ) }}
{% endif %}

{% if listType == "manufacturer" %}
    {{ Twig.set("itemList", Twig.call("services.itemList.getItemList", [requestedListType, manufacturerId, itemSort, maxItems]) ) }}
{% endif %}

{{ Twig.set("title", trans("Ceres::Widget.itemListPlaceholderListHeader") | json_encode ) }}
{% if headlineStyle == "default-caption" or headlineStyle is empty %}
    {% if listType == "category" %}
        {{ Twig.if("category") }}
            {{ Twig.set("title", "category.details[0].name") }}
        {{ Twig.endif() }}
    {% elseif listType == "last_seen" %}
        {{ Twig.set("title", "trans('Ceres::Template.itemListLastSeen')" ) }}
    {% elseif listType == "tag_list" and itemListId is not empty %}
        {{ Twig.set("title", Twig.call("services.tag.getTagName", [itemListId])) }}
    {% else %}
        {{ Twig.set("title", trans("Ceres::Widget.itemListPlaceholderListHeader") | json_encode ) }}
    {% endif %}
{% elseif headlineStyle == "custom-caption" and headline | trim is not empty %}
    {{ Twig.setEscaped("title", headline) }}
{% endif %}

{{ Twig.component( "Ceres::Containers.Components.LastSeenItemList" ) }}
{{ Twig.component( "Ceres::ItemList.Components.CategoryItem" ) }}
{{ Twig.component( "Ceres::PageDesign.Components.Carousel" ) }}
{{ Twig.import("LayoutContainer", "Ceres::PageDesign.Macros.LayoutContainer") }}

<div class="widget widget-item-list widget-{{ widget.settings.appearance.mobile | default('primary') }}">
    <div class="widget-inner">
        {% if listType == "last_seen" and not isPreview %}
            {# render vue component for last seen items #}
            <last-seen-item-list :items-per-page="{{ itemsPerPage }}" :max-items="{{ maxItems }}" v-cloak>
                <div class="widget-caption mb-3" slot="heading">
                    <h2>{{ Twig.print("title") }}</h2>
                </div>
            </last-seen-item-list>
        {% else %}
            {# render static item lists #}
            {% if headlineStyle == "default-caption" or headlineStyle == "custom-caption" or headlineStyle is empty %}
                <div class="widget-caption mb-3">
                    <h2>{{ Twig.print("title") }}</h2>

                    {{ Twig.if("category") }}
                        <a href="{{ Twig.print(Twig.call("services.category.getURL", [Twig.var("category")])) }}">
                            <i class="fa fa-angle-double-right" aria-hidden="true"></i> {{ Twig.trans("Ceres::Template.homepageShowAll") }}
                        </a>
                    {{ Twig.endif() }}
                </div>
            {% endif %}

            {{ Twig.if("itemList.documents is not empty") }}
                <carousel :items-per-page="{{ itemsPerPage }}">
                    {{ Twig.for("item", "itemList.documents") }}
                        <template slot="items">
                            <category-item
                                :item-data="{{ Twig.print("item.data | json_encode") }}"
                                :decimal-count="{{ Twig.print("ceresConfig.item.storeSpecial") }}"
                                :disable-carousel-on-mobile="{{ Twig.print("itemList.documents | length") }} > {{ itemsPerPage }}">
                                <template slot="BeforePrices">
                                    {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::CategoryItem.BeforePrices", Twig.var("item.data")])) }}
                                </template>
                                <template slot="AfterPrices">
                                    {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::CategoryItem.AfterPrices", Twig.var("item.data")])) }}
                                </template>
                            </category-item>
                        </template>
                    {{ Twig.endfor() }}
                </carousel>
            {{ Twig.endif() }}
        {% endif %}
    </div>
</div>
