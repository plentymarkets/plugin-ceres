{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}
{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}
{% import "Ceres::Widgets.Helper.WidgetHelper" as WidgetHelper %}

{% set uid = uid() %}

{% set customClass                  = widget.settings.TopBarContainer.customClass.mobile %}
{% set enableLogin                  = widget.settings.TopBarContainer.enableLogin.mobile %}
{% set enableRegistration           = widget.settings.TopBarContainer.enableRegistration.mobile %}
{% set enableLanguageSelect         = widget.settings.TopBarContainer.enableLanguageSelect.mobile %}
{% set enableShippingCountrySelect  = widget.settings.TopBarContainer.enableShippingCountrySelect.mobile %}
{% set enableCurrencySelect         = widget.settings.TopBarContainer.enableCurrencySelect.mobile %}
{% set searchStyle                  = widget.settings.TopBarContainer.searchStyle.mobile %}
{% set enableWishList               = widget.settings.TopBarContainer.enableWishList.mobile %}
{% set enableBasketPreview          = widget.settings.TopBarContainer.enableBasketPreview.mobile %}
{% set basketValues                 = widget.settings.TopBarContainer.basketValues.mobile %}

{{ Twig.import("LayoutContainer", "Ceres::PageDesign.Macros.LayoutContainer") }}
{{ Twig.set("currencyFormat", Twig.call("config", ["Ceres.currency.format"])) }}
{{ Twig.set("currencyFormatSelect", Twig.call("config", ["Ceres.currency.format_selection"])) }}
{{ Twig.set("currencyData", Twig.call("services.checkout.getCurrencyData") ~ "[currencyFormat]") }}
{{ Twig.set("activeCurrencies", Twig.call("config", ["Ceres.currency.available_currencies"]) ~ " | split(\", \")") }}
{{ Twig.set("defaultLanguage", "webstoreConfig.defaultLanguage" ) }}
{{ Twig.set("overrideSearchBar", Twig.call("LayoutContainer.show", ["Ceres::Search.SearchBar"])) }}
{{ Twig.set("visibleFields", "ceresConfig.basket.previewData") }}



{% set customClass = widget.settings.NavigationContainer.customClass.mobile %}
{% set spacingSettings = widget.settings.NavigationContainer.spacing %}
{% set inlineSpacings = WidgetHelper.getInlineSpacings(spacingSettings, spacingSettings.customPadding.mobile, spacingSettings.customMargin.mobile) %}
{% set spacingClasses = WidgetHelper.getSpacingClasses(spacingSettings, spacingSettings.customPadding.mobile, spacingSettings.customMargin.mobile) %}


{% set navigationStyle      = widget.settings.NavigationContainer.navigationStyle.mobile %}
{% set companyLogoUrl       = widget.settings.NavigationContainer.companyLogoUrl.mobile %}
{% set fallbackImagePath    = widget.settings.NavigationContainer.fallbackImagePath.mobile %}

{% set megaMenuMaxItems1    = widget.settings.NavigationContainer.megaMenuMaxItems.stage1.mobile | default(30) %}
{% set megaMenuMaxItems2    = widget.settings.NavigationContainer.megaMenuMaxItems.stage2.mobile | default(3) %}
{% set megaMenuMaxItems3    = widget.settings.NavigationContainer.megaMenuMaxItems.stage3.mobile | default(2) %}
{% set megaMenuMaxItems     = { "1": megaMenuMaxItems1, "2": megaMenuMaxItems2, "3": megaMenuMaxItems3 } %}

{% if navigationStyle == 'megaMenu' %}
    {% set megaMenuLevels       = widget.settings.NavigationContainer.megaMenuLevels.mobile | default(2) %}
{% else %}
    {% set megaMenuLevels = 2 %}
{% endif %}

{% if companyLogoUrl is empty %}
    {% set companyLogoUrl = ceresConfig.header.companyLogo %}
{% endif %}

{% if fallbackImagePath | trim is empty %}
    {% set fallbackImagePath = companyLogoUrl %}
{% endif %}

{{ Twig.set("logoUrl", companyLogoUrl | json_encode) }}
{{ Twig.print("add_asset(logoUrl,'image')") }}

{{ Twig.import("Tree", "Ceres::Category.Macros.CategoryTree") }}






{% set customClass           = widget.settings.BreadCrumbContainer.customClass.mobile %}
{% set isFixed               = widget.settings.BreadCrumbContainer.isFixed.mobile %}
{% set showOnHomepage        = widget.settings.BreadCrumbContainer.showOnHomepage.mobile %}
{% set showOnMyAccount       = widget.settings.BreadCrumbContainer.showOnMyAccount.mobile %}
{% set showOnCheckout        = widget.settings.BreadCrumbContainer.showOnCheckout.mobile %}
{% set showOnContentCategory = widget.settings.BreadCrumbContainer.showOnContentCategory.mobile %}
{% set showOnLegalPages      = widget.settings.BreadCrumbContainer.showOnLegalPages.mobile %}



<div class="parent-preset-container sticky-top">
<div class="top-bar header-fw{% if customClass | length > 0 %} {{ customClass }}{% endif %}">
    <div class="container-max px-0 pr-lg-3">
        <div class="row mx-0 flex-row-reverse position-relative">
            {% if isPreview and not
                enableLogin and not
                enableRegistration and not
                enableLanguageSelect and not
                enableShippingCountrySelect and not
                enableCurrencySelect and not
                enableWishList and not
                enableBasketPreview and
                searchStyle == "hidden"
            %}
                <div class="widget-placeholder p-0 w-100 text-dark">
                    <div>
                        <p class="title">{{ Twig.trans("Ceres::Widget.topBarPlaceholderTitle") }}</p>
                        <p class="description">{{ Twig.trans("Ceres::Widget.topBarPlaceholderDescription") }}</p>
                    </div>
                </div>
            {% endif %}
            {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::Header.LeftSide"])) }}
            <div class="top-bar-items {% if searchStyle == "permanent" %}search-permanent d-flex flex-grow-1 flex-column-reverse flex-md-row{% endif %}">
                {% if searchStyle == "permanent" %}
                    {{ Twig.if("overrideSearchBar | trim is empty") }}
                    <div class="always-visible-search flex-grow-1">
                        {% if not isPreview %}<lazy-hydrate when-idle>{% endif %}
                            <item-search>
                                <div class="position-relative d-flex flex-grow-1">
                                    <input type="search" class="search-input px-3 py-2 flex-grow-1" aria-label="{{ Twig.print('trans("Ceres::Template.headerSearchTerm", [], "de_DE")') }}">
                                    <button class="search-submit px-3" type="submit" aria-label="{{ Twig.print('trans("Ceres::Template.headerSearch")') }}">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </div>

                                {% if isPreview %}
                                    <template #search-button>
                                        <button class="search-submit px-3" type="submit" {{ WidgetHelper.makeClickable(isPreview) }} data-toggle="collapse" href="#search-suggestions_{{ uid }}" role="button">
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </template>
                                {% endif %}

                                {% if isPreview or children is defined and children.suggestions | trim is not empty %}
                                    <template #autocomplete-suggestions>
                                        <div class="autocomplete-suggestions shadow bg-white w-100{% if isPreview %} collapse position-relative mh-100{% endif %}"
                                                {% if isPreview %} data-builder-child-container="suggestions" id="search-suggestions_{{ uid }}"{% endif %}>
                                            {{ children.suggestions | raw }}
                                        </div>
                                    </template>
                                {% endif %}
                            </item-search>
                            {% if not isPreview %}</lazy-hydrate>{% endif %}
                    </div>
                    {{ Twig.else() }}
                    {{ Twig.print("overrideSearchBar | raw") }}
                    {{ Twig.endif() }}
                {% endif %}
                <div class="controls">
                    <ul id="controlsList" class="controls-list mb-0 d-flex list-inline pl-2 pl-sm-1 pl-md-0">
                        {% if enableLogin or enableRegistration %}
                            <li class="list-inline-item control-user">
                                <client-only>
                                    <user-login-handler
                                            :show-login="{{ enableLogin | json_encode }}"
                                            :show-registration="{{ enableRegistration | json_encode }}">
                                        {% if enableLogin %}
                                            <a class="nav-link" data-toggle="modal" aria-label="{{ Twig.print('trans("Ceres::Template.login")') }}">
                                                <i class="fa fa-user mr-0 mr-sm-1" aria-hidden="true"></i>
                                                <span class="d-none d-sm-inline">{{ Twig.print('trans("Ceres::Template.login")') }}</span>
                                            </a>
                                        {% endif %}
                                        {% if enableRegistration %}
                                            <a class="nav-link" data-toggle="modal" aria-label="{{ Twig.print('trans("Ceres::Template.loginRegister")') }}">
                                                <i class="fa fa-user-plus mr-0 mr-sm-1" aria-hidden="true"></i>
                                                <span class="d-none d-sm-inline">{{ Twig.print('trans("Ceres::Template.loginRegister")') }}</span>
                                            </a>
                                        {% endif %}
                                    </user-login-handler>
                                </client-only>
                            </li>
                        {% endif %}

                        {% if enableLanguageSelect or enableShippingCountrySelect %}
                            <li class="list-inline-item dropdown control-languages">
                                <a class="nav-link"
                                   data-toggle="collapse"
                                   data-testing="language-select"
                                   href="#countrySettings"
                                   aria-expanded="false"
                                   aria-controls="countrySettings"
                                   data-parent="#controlsList"
                                   aria-label="{{ Twig.print('trans("Ceres::Template.headerCountry")') }}">
                                    <i class="flag-icon flag-icon-{{ Twig.print('lang') }}"></i>
                                </a>
                            </li>
                        {% endif %}

                        {% if enableCurrencySelect %}
                            <li class="list-inline-item dropdown control-languages">
                                <a class="nav-link"
                                   data-toggle="collapse"
                                   href="#currencySelect"
                                   aria-expanded="false"
                                   aria-controls="currencySelect"
                                   data-parent="#controlsList"
                                   data-testing="currency-select"
                                   aria-label="{{ Twig.print('trans("Ceres::Template.headerCurrency")') }}">
                                    <span>{{ Twig.print("currencyData") }}</span>
                                </a>
                            </li>
                        {% endif %}

                        {% if searchStyle == "onDemand" %}
                            <li class="list-inline-item control-search">
                                <a class="anicon anicon-search-xcross nav-link"
                                        {{ WidgetHelper.makeClickable(isPreview) }}
                                   data-toggle="collapse"
                                   href="#searchBox"
                                   aria-expanded="false"
                                   aria-controls="searchBox"
                                   data-testing="searchbox-select"
                                   data-parent="#controlsList"
                                   aria-label="{{ Twig.print('trans("Ceres::Template.headerSearch")') }}"
                                   @mouseover.once="$store.dispatch('loadComponent', 'item-search')">
                                    <span class="anicon-search-item" aria-hidden="true"></span>
                                </a>
                            </li>
                        {% endif %}

                        {% if enableWishList %}
                            {{ Twig.if("services.url.isRouteEnabled(\"wish-list\")") }}
                            <li class="list-inline-item control-wish-list">
                                <lazy-hydrate when-idle>
                                    <wish-list-count>
                                        <a class="nav-link" aria-label="{{ Twig.print('trans("Ceres::Template.wishList")') }}">
                                            <span class="badge-right mr-1 d-none d-sm-inline">0</span>
                                            <i class="fa fa-heart-o" aria-hidden="true"></i>
                                        </a>
                                    </wish-list-count>
                                </lazy-hydrate>
                            </li>
                            {{ Twig.endif() }}
                        {% endif %}

                        {% if enableBasketPreview %}
                            <li class="list-inline-item control-basket position-relative">
                                <a v-toggle-basket-preview href="#" class="toggle-basket-preview nav-link" {{ Twig.print('set_testing_attr("data-testing", "basket-preview-button")') }}>
                                    {% if basketValues != "sum" %}
                                        <span class="mr-2" v-basket-item-quantity="$store.state.basket.data.itemQuantity">0</span>
                                    {% endif %}

                                    <icon icon="shopping-cart" class-loading="fa-refresh" :loading="$store.state.basket.isBasketLoading"></icon>
                                    {% if basketValues != "quantity" %}
                                        <span class="badge p-0 ml-2" v-if="!$store.state.basket.showNetPrices" v-basket-item-sum="$store.state.basket.data.itemSum">0,00 {{ Twig.print("currencyData") }}</span>
                                        <span class="badge p-0 ml-2" v-else v-cloak v-basket-item-sum="$store.state.basket.data.itemSumNet">0,00 {{ Twig.print("currencyData") }}</span>
                                    {% endif %}
                                </a>

                                <basket-preview v-if="$store.state.lazyComponent.components['basket-preview']" :show-net-prices="{{ Twig.print("showNetPrices | json_encode") }}" :visible-fields="{{ Twig.print("visibleFields | json_encode") }}">
                                    <template #before-basket-item>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketList.BeforeItem"])) }}
                                    </template>
                                    <template #after-basket-item>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketList.AfterItem"])) }}
                                    </template>
                                    <template #before-basket-totals>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketPreview.BeforeBasketTotals"])) }}
                                    </template>
                                    <template #before-item-sum>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketTotals.BeforeItemSum"])) }}
                                    </template>
                                    <template #after-item-sum>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketTotals.AfterItemSum"])) }}
                                    </template>
                                    <template #before-shipping-costs>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketTotals.BeforeShippingCosts"])) }}
                                    </template>
                                    <template #after-shipping-costs>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketTotals.AfterShippingCosts"])) }}
                                    </template>
                                    <template #before-total-sum>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketTotals.BeforeTotalSum"])) }}
                                    </template>
                                    <template #before-vat>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketTotals.BeforeVat"])) }}
                                    </template>
                                    <template #after-vat>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketTotals.AfterVat"])) }}
                                    </template>
                                    <template #after-total-sum>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketTotals.AfterTotalSum"])) }}
                                    </template>
                                    <template #after-basket-totals>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketPreview.AfterBasketTotals"])) }}
                                    </template>
                                    <template #before-checkout-button>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketPreview.BeforeCheckoutButton"])) }}
                                    </template>
                                    <template #after-checkout-button>
                                        {{ Twig.print(Twig.call("LayoutContainer.show", ["Ceres::BasketPreview.AfterCheckoutButton"])) }}
                                    </template>
                                </basket-preview>
                            </li>
                        {% endif %}
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="container-max px-0 px-lg-3">
        <div class="row mx-0 flex-row-reverse position-relative">
            {% if searchStyle == "onDemand" %}
                <div id="searchBox" class="cmp cmp-search-box collapse{% if isPreview %} position-relative{% endif %}">
                    {{ Twig.if("overrideSearchBar | trim is empty") }}
                    {% if not isPreview %}<lazy-load component="item-search">{% endif %}
                        <item-search>
                            {% if isPreview or children is defined and children.suggestions | trim is not empty %}
                                <template #autocomplete-suggestions>
                                    <div class="autocomplete-suggestions shadow bg-white w-100{% if isPreview %} position-relative mh-100{% endif %}"
                                            {% if isPreview %} data-builder-child-container="suggestions"{% endif %}>
                                        {{ children.suggestions | raw }}
                                    </div>
                                </template>
                            {% endif %}
                        </item-search>
                        {% if not isPreview %}</lazy-load>{% endif %}
                    {{ Twig.else() }}
                    {{ Twig.print("overrideSearchBar | raw") }}
                    {{ Twig.endif() }}
                </div>
            {% endif %}

            {% if enableCurrencySelect and not isPreview %}
                <div id="currencySelect" class="cmp cmp-currency-select collapse">
                    <div class="container-max">
                        <div class="row py-3">
                            <div class="currency-list col-12">
                                <div class="list-title">
                                    <strong>{{ Twig.print('trans("Ceres::Template.headerCurrency")') }}</strong>
                                    <hr>
                                </div>
                                <ul class="row text-center text-sm-left">
                                    {{ Twig.set("activeCurrency", Twig.call("services.checkout.getCurrencyData")) }}
                                    {{ Twig.for("currency", Twig.call("services.checkout.getCurrencyList")) }}
                                    {{ Twig.if("currency.name in activeCurrencies or \"all\" in activeCurrencies or currency.name == activeCurrency.name") }}
                                    <li class="col-2 px-0{{ Twig.if("currency.name == activeCurrency.name") }} active{{ Twig.endif() }}">
                                        <a class="nav-link" data-testing="{{ Twig.print("currency.name") }}" href="{{ Twig.print("queryString({currency: currency.name})") }}" rel="nofollow">
                                            {{ Twig.if("currencyFormatSelect == 'all'") }}
                                            {{ Twig.print("currency.name") }} <br class="d-block d-sm-none" />({{ Twig.print("currency.symbol") }})
                                            {{ Twig.else() }}
                                            {{ Twig.print("currency[currencyFormatSelect]") }}
                                            {{ Twig.endif }}
                                        </a>
                                    </li>
                                    {{ Twig.endif() }}
                                    {{ Twig.endfor() }}
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            {% endif %}

            {% if enableLanguageSelect or enableShippingCountrySelect %}
                <div id="countrySettings" class="cmp cmp-country-settings collapse">
                    <div class="container-max">
                        <div class="row py-3">
                            {% if enableLanguageSelect and not isPreview %}
                                <div class="col-12 {% if enableShippingCountrySelect %}col-lg-6{% else %}col-lg-12{% endif %}">
                                    {{ Twig.do("cacheslot languageSelect") }}
                                    <div class="language-settings">
                                        <div class="list-title">
                                            <strong>{{ Twig.print('trans("Ceres::Template.headerSelectLanguage")') }}</strong>
                                            <hr>
                                        </div>
                                        {{ Twig.set("languageList", Twig.call("services.webstoreConfigurationRepository.getActiveLanguageList")) }}
                                        {{ Twig.set("languageUrls", Twig.call("services.url.getLanguageURLs")) }}
                                        <ul class="row">
                                            {{ Twig.for("language", "languageList") }}
                                            {{ Twig.set("languageISO", "services.localizationRepository.getLanguageCode(language)") }}
                                            <li class="col-6 col-sm-4 px-0{{ Twig.if("lang == language") }} active{{ Twig.endif() }}">
                                                {{ Twig.set("url", "'/'") }}
                                                {{ Twig.if("languageUrls[languageISO] is defined") }}
                                                {{ Twig.set("url", "languageUrls[languageISO] ~ queryString") }}
                                                {{ Twig.elseif("language != defaultLanguage") }}
                                                {{ Twig.set("url", "'/' ~ language ~ urls.trailingSlashSuffix") }}
                                                {{ Twig.endif() }}
                                                <a class="nav-link" href="{{ Twig.print("url") }}"
                                                   data-testing="lang-select-{{ Twig.print("language") }}" data-update-url>
                                                    <i class="flag-icon flag-icon-{{ Twig.print("language") }}"></i>
                                                    {{ Twig.print('trans("Ceres::Template.header" ~ language | capitalize)') }}
                                                </a>
                                            </li>
                                            {{ Twig.endfor() }}
                                        </ul>
                                    </div>
                                    {{ Twig.do("endcacheslot") }}
                                </div>
                            {% endif %}
                            {% if enableShippingCountrySelect %}
                                <div class="col-12 {% if enableLanguageSelect %}col-lg-6{% else %}col-lg-12{% endif %}">
                                    <div class="shipping-settings">
                                        <div class="list-title">
                                            <strong>{{ Twig.print('trans("Ceres::Template.headerSelectShippingCountry")') }}</strong>
                                            <hr>
                                        </div>
                                        <intersect>
                                            <shipping-country-select :disable-input="{{ Twig.print(Twig.call('services.template.isCheckout') ~ ' | json_encode') }}"></shipping-country-select>
                                            <template #loading>
                                                <div class="row" style="height:1px;"></div>
                                            </template>
                                        </intersect>
                                    </div>
                                </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            {% endif %}
        </div>
    </div>
</div>

<nav class="navbar header-fw p-0 border-bottom{% if customClass | length > 0 %} {{ customClass }}{% endif %}{% if navigationStyle == 'megaMenu' %} megamenu{% else %} normalmenu{%endif%}">
    <div class="container-max d-block{% if spacingClasses | length > 0 %} {{ spacingClasses }}{% endif %}"
            {% if inlineSpacings | length > 0 %} style="{{ inlineSpacings }}"{% endif %}>
        <div class="row mx-0 position-relative d-flex">
            <div class="brand-wrapper px-lg-3 d-flex flex-fill">
                {% if companyLogoUrl | trim | length > 0 %}
                    <a class="navbar-brand py-2" href="{{ Twig.print('urls.home') }}">
                        <picture>
                            <source srcset="{{ companyLogoUrl }}"{% if companyLogoUrl matches '/.?(\\.webp)(?:$|\\?)/' %} type="image/webp"{% endif %}>
                            <img
                                    class="img-fluid"
                                    src="{{ fallbackImagePath }}"
                                    alt="{{ Twig.print('trans("Ceres::Template.headerCompanyName")') }}"
                            />
                        </picture>
                    </a>
                {% endif %}

                <button v-open-mobile-navigation class="navbar-toggler d-lg-none p-3" type="button">
                    &#9776;
                </button>
            </div>

            <div class="main-navbar-collapsable d-none d-lg-block">
                <ul class="mainmenu p-0 m-0 d-flex">
                    {{ Twig.print(Twig.call("Tree.get_nav_bar", [Twig.var("categories"), "", megaMenuLevels, megaMenuMaxItems])) }}
                </ul>
            </div>

        </div>
    </div>
</nav>

    {{ Twig.do("cacheslot breadcrumbs") }}

    {% if not isPreview %}
        {% if not showOnHomepage %}
            {{ Twig.if("not services.template.isCurrentTemplate('tpl.home') and not services.template.isCurrentTemplate('tpl.home.category')") }}
        {% endif %}

        {% if not showOnMyAccount %}
            {{ Twig.if("not services.template.isCurrentTemplate('tpl.my-account')") }}
        {% endif %}

        {% if not showOnCheckout %}
            {{ Twig.if("not services.template.isCurrentTemplate('tpl.checkout')") }}
        {% endif %}

        {% if not showOnContentCategory %}
            {{ Twig.if("not services.template.isCurrentTemplate('tpl.category.content')") }}
        {% endif %}

        {% if not showOnLegalPages %}
            {{ Twig.if("not urls.isLegalPage()") }}
        {% endif %}
    {% endif %}
    <div class="breadcrumbs header-fw{% if customClass | length > 0 %} {{ customClass }}{% endif %}">
        <nav class="small d-none d-md-block px-0" data-component="breadcrumbs" data-renderer="twig">
            {{ Twig.set('crumbs', '[]') }}
            <ul class="breadcrumb container-max px-3 py-2 my-0 mx-auto">
                <li class="breadcrumb-item">
                    <a href="{{ Twig.print('urls.home') }}">
                        <i class="fa fa-home" aria-hidden="true"></i>
                        {{ Twig.set("breadcrumbHome", "trans('Ceres::Template.headerBreadcrumbHome')") }}
                        <span class="breadcrumb-home">{{ Twig.print("breadcrumbHome") }}</span>
                        {{ Twig.set('crumb', '
                        [
                            {
                                "@type": "ListItem",
                                "position": 1,
                                "item":
                                {
                                    "@id": urls.home,
                                    "name": "Home"
                                }
                            }
                        ]')
                        }}
                        {{ Twig.set('crumbs', 'crumbs | merge(crumb)') }}
                    </a>
                </li>
                {{ Twig.if("categoryBreadcrumbs is not empty") }}
                {{ Twig.set("break", "false") }}
                {{ Twig.set("catLevel", 2) }}
                {{ Twig.for("category", "categoryBreadcrumbs[:categoryBreadcrumbs | length - 1]", "not break") }}
                {{ Twig.if("category.details[0]") }}
                <li class="breadcrumb-item">
                    <a href="{{ Twig.print(Twig.call("services.category.getURLById", [Twig.var("category.id")])) }}">
                        {{ Twig.print("category.details[0].name") }}
                    </a>
                    {{ Twig.set('crumb', '
                                [
                                    {
                                        "@type": "ListItem",
                                        "position": catLevel,
                                        "item":
                                        {
                                            "@id": services.category.getURLById(category.id),
                                            "name": category.details[0].name
                                        }
                                    }
                                ]')
                    }}
                    {{ Twig.set('crumbs', 'crumbs | merge(crumb)') }}
                    {{ Twig.do("set catLevel = catLevel + 1") }}
                </li>
                {{ Twig.else() }}
                {{ Twig.set("break", "true") }}
                {{ Twig.endif() }}
                {{ Twig.endfor() }}

                {{ Twig.set("lastCategory", "categoryBreadcrumbs | last") }}
                {{ Twig.if("lastCategory.details is defined") }}
                <li class="breadcrumb-item active">
                    {{ Twig.set('crumb', '
                                            [
                                                {
                                                    "@type": "ListItem",
                                                    "position": catLevel,
                                                    "item":
                                                    {
                                                        "@id": services.category.getURLById(lastCategory.id),
                                                        "name": lastCategory.details[0].name
                                                    }
                                                }
                                            ]')
                    }}
                    {{ Twig.set('crumbs', 'crumbs | merge(crumb)') }}
                    <span>{{ Twig.print("lastCategory.details[0].name") }}</span>
                </li>
                {{ Twig.elseif("item.documents[0].data is defined") }}
                <li class="breadcrumb-item active">
                    {{ Twig.set('crumb', '
                                [
                                    {
                                        "@type": "ListItem",
                                        "position": catLevel,
                                        "item":
                                        {
                                            "@id": requestedVariationUrl,
                                            "name": item.documents[0].data | itemName
                                        }
                                    }
                                ]')
                    }}
                    {{ Twig.set('crumbs', 'crumbs | merge(crumb)') }}
                    <span>{{ Twig.print("item.documents[0].data | itemName") }}</span>
                </li>
                {{ Twig.endif() }}
                {{ Twig.endif() }}
            </ul>
            <script2 type="application/ld+json">
                {
                "@context":"http://schema.org/",
                "@type":"BreadcrumbList",
                "itemListElement": {{ Twig.print('crumbs | json_encode | raw') }}
                }
            </script2>
        </nav>
    </div>

    {% if not isPreview %}
        {% if not showOnHomepage %}
            {{ Twig.endif() }}
        {% endif %}

        {% if not showOnMyAccount %}
            {{ Twig.endif() }}
        {% endif %}

        {% if not showOnCheckout %}
            {{ Twig.endif() }}
        {% endif %}

        {% if not showOnContentCategory %}
            {{ Twig.endif() }}
        {% endif %}

        {% if not showOnLegalPages %}
            {{ Twig.endif() }}
        {% endif %}
    {% endif %}
    {{ Twig.do("endcacheslot") }}

</div>


