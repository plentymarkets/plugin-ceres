{{ component( "Ceres::Basket.Components.AddToBasket" ) }}
{{ component( "Ceres::ItemList.Components.CategoryImageCarousel") }}
{{ component( "Ceres::ItemList.Components.ItemStoreSpecial" ) }}

{% import "Ceres::Basket.Macros.AddToBasket" as AddToBasket %}

{% if enableCarousel is not defined %}
    {% if config("Ceres.item.enable_image_carousel") == "true" %}
        {% set enableCarousel = "true" %}
    {% else %}
        {% set enableCarousel = "false" %}
    {% endif %}
{% endif %}

<script type="x/template" id="vue-category-item">
    <article class="cmp cmp-product-thumb cmp-product-thumb--grid">
        <div class="thumb-inner">

            {{ AddToBasket.printVueComponent( "item", true, false, { ":has-price": "item | hasItemDefaultPrice" } ) }}

            <div class="thumb-background"></div>
            
            <div class="thumb-image">
                <div class="square-container">
                    <div class="square-inner main-image">
                        <slot name="item-image">
                            <category-image-carousel template="#vue-category-image-carousel"
                                                    :image-urls-data="item.images | itemImages(imageUrlAccessor)"
                                                    :alt-text="item | itemName"
                                                    :title-text="item | itemName"
                                                    :item-url="item | itemURL"
                                                    :enable-carousel="{{ enableCarousel }}"
                                                    :disable-carousel-on-mobile="disableCarouselOnMobile"
                                                    ref="categoryImageCarousel">
                            </category-image-carousel>
                        </slot>
                    </div>
                </div>
            </div>

            <!-- STORE SPECIALS -->
            <slot name="store-special">
                <item-store-special v-if="storeSpecial || item.variation.bundleType == 'bundle'"
                                    :store-special="storeSpecial"
                                    :recommended-retail-price="item.prices.rrp"
                                    :variation-retail-price="item.prices.default"
                                    :decimal-count="decimalCount"
                                    :bundle-type="item.variation.bundleType"></item-store-special>
            </slot>
            <!-- ./STORE SPECIALS -->

            <!-- ITEM DETAILS -->
            <slot name="item-details">
                <div class="thumb-content">
                    <a :href="item | itemURL" class="thumb-title small">
                        ${ item | itemName }<!--
                        --><span v-for="attribute in item.groupedAttributes">${ "Ceres::Template.itemGroupedAttribute" | translate(attribute) }</span>
                    </a>
                    <div class="thumb-meta">
                        <slot name="BeforePrices"></slot>

                        <div class="prices">
                            <div v-if="item.prices.rrp && item.prices.rrp.price.value > 0 && item.prices.rrp.price.value > item.prices.default.unitPrice.value" class="price-view-port">
                                <del class="crossprice" v-if="item.prices.specialOffer">
                                    ${ item.prices.default.unitPrice.formatted | itemCrossPrice(true) }
                                </del>
                                <del class="crossprice" v-else>
                                    ${ item.prices.rrp.unitPrice.formatted | itemCrossPrice }
                                </del>
                            </div>

                            <div class="price">
                                ${ item.prices.default.unitPrice.formatted | specialOffer(item.prices, "unitPrice", "formatted") } *
                            </div>
                        </div>
                    </div>

                    <slot name="AfterPrices"></slot>

                    <div class="category-unit-price" v-if="!(item.unit.unitOfMeasurement === 'C62' && item.unit.content === 1)">
                        <span>${ item.unit.content }</span>
                        <span>${ item.unit.names.name }</span>
                        <span v-if="item.variation.mayShowUnitPrice">| ${ item.prices.default.basePrice }</span>
                    </div>

                    {{ AddToBasket.printVueComponent( "item", false, false, { ":has-price": "item | hasItemDefaultPrice" } ) }}

                    <span class="vat small text-muted">
                        * <span v-if="showNetPrices">{{ trans("Ceres::Template.itemExclVAT") }}</span>
                        <span v-else>{{ trans("Ceres::Template.itemInclVAT") }}</span>
                        {{ trans("Ceres::Template.itemExclusive") }}
                        <a {% if ceresConfig.global.shippingCostsCategoryId > 0 %} data-toggle="modal" href="#shippingscosts"{% endif %} title="{{ trans("Ceres::Template.itemShippingCosts") }}">{{ trans("Ceres::Template.itemShippingCosts") }}</a>
                    </span>
                </div>
            </slot>
            <!-- ./ITEM DETAILS  -->
        </div>
    </article>
</script>
