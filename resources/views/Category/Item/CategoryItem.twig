{% extends getPartial('page-design') %}
{% import "Ceres::Category.Macros.CategoryTree" as Tree %}
{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}

{% set itemSort             = request.get("sorting") | default(config('Ceres.sort.defaultSorting')) %}
{% set orderBy              = itemSort[0] %}

{% set rowsPerPage = config('Ceres.pagination.rowsPerPage') | split(', ') %}
{% set columnsPerPage = config('Ceres.pagination.columnsPerPage') %}
{% set itemsPerPage = rowsPerPage[0] * columnsPerPage %}

{% if request.get("items") %}
    {% set itemsPerPage = request.get("items") %}
{% endif %}

{% set page = request.get("page") | default(1) %}

{% set paginatedResult      = services.itemLoader.loadForTemplate('Ceres::ItemList.ItemListView', itemLoaderPresets.categoryList, {'categoryId':category.id, 'page':page, 'items':itemsPerPage, 'facets': facetParams, 'sorting': itemSort}) %}

{% set pageMax = (paginatedResult.total / itemsPerPage) | round %}
{% set query  = { 'items' : itemsPerPage, 'sorting' : itemSort } %}

{% set itemList             = paginatedResult.documents %}
{% set paginationType       = config("Ceres.pagination.position") %}

{% set lang         = services.sessionStorage.getLang() %}

{% set showHeaderNavBar = config("Ceres.header.show_navbars") %}

{% set loadingAnimationType = config("Ceres.item.loading_animation_type") %}
{% set showCategoryImage = config('Ceres.item.show_category_image') == "true" %}
{% set showCategoryDescription = config('Ceres.item.show_category_description') == "true" %}

{% block PageBody %}

    {{ component( "Ceres::ItemList.Components.Filter.ItemFilterList") }}
    {{ component( "Ceres::ItemList.Components.Filter.ItemFilterTagList") }}
    {{ component( "Ceres::ItemList.Components.ItemList") }}
    {{ component( "Ceres::ItemList.Components.CategoryImageCarousel") }}
    {{ component( "Ceres::ItemList.Components.ItemListSorting") }}
    {{ component( "Ceres::ItemList.Components.ItemsPerPage") }}
    {{ component( "Ceres::ItemList.Components.Pagination") }}

    {% if showCategoryImage %}
        {% include "Ceres::Category.Item.Partials.CategoryParallaxImage" with { 'category': category } %}
    {% endif %}

    <div class="categoriegrid page-content container-max">
        {% if not showCategoryImage %}
            <div class="row m-t-1">
                <div class="col-xs-12">
                    <h1 class="h2 category-title">{{ category.details.first.name }}</h1>
                    {% if showCategoryDescription %}
                        <div id="category-description-container" class="category-description m-b-1">{{ category.details[0].description | raw }}</div>
                    {% endif %}
                </div>
            </div>
        {% endif %}

        <div class="list-controls m-b-3">
            <div class="list-controls-inner">
                <div class="row">
                    <div class="col-xs-12">
                        <div class="list-wrapper">
                            <item-list-sorting template="#vue-item-list-sorting" :sort-data="{{ config("Ceres.sort.data") | split(', ') | json_encode() }}"></item-list-sorting>
                            <items-per-page
                                template="#vue-items-per-page"
                                :columns-per-page="{{ config("Ceres.pagination.columnsPerPage") | json_encode() }}"
                                :rows-per-page="{{ config("Ceres.pagination.rowsPerPage") | split(', ') | json_encode() }}"></items-per-page>
                            <item-filter-list :facet-data="{{ paginatedResult.facets | json_encode }}"></item-filter-list>
                        </div>
                    </div>
                </div>
            </div>

            {# TAGS #}
            <item-filter-tag-list></item-filter-tag-list>
        </div>

        <div class="row">

            {% if showHeaderNavBar == "side" or showHeaderNavBar == "both" %}
                <div class="col-xs-3 hidden-md-down">
                    <div class="sidebar-categories">
                        <div class="category-title">{{ trans("Ceres::Template.generalCategories") }}</div>
                        {{ include('Ceres::PageDesign.Partials.Header.SideNavigation.twig') }}
                    </div>

                    {{ LayoutContainer.show("Ceres::CategoryItem.SideNavBarBottom") }}
                </div>

            {% endif %}

            <div class="col-xs-12 col-lg-{% if showHeaderNavBar == "side" or showHeaderNavBar == "both" %}9{% else %}12{% endif %}">

                <div id="twig-rendered-item-list" class="item-list-frame{% if loadingAnimationType == "blur" %} blur-effect{% endif %}">

                    {% if loadingAnimationType != "blur" %}
                        {% include "Ceres::ItemList.Partials.LoadingAnimation" %}
                    {% endif %}

                    <ul class="product-list row grid" v-is-loading-watcher="$store.state.itemList.isLoading">
                        {% for item in itemList %}
                            <li class="col-xs-12 col-sm-6 col-md-4 col-lg-{% if showHeaderNavBar == "side" or showHeaderNavBar == "both" %}4{% else %}3{% endif %}">
                                {% include "Ceres::Category.Item.Partials.CategoryListItem" with { 'item': item } %}
                            </li>
                        {% endfor %}
                    </ul>
                </div>

                <div id="vue-rendered-item-list" style="display:none">
                    <item-list template="#vue-item-list" :total-items-data="{{ paginatedResult.total }}" :category-id="{{ category.id }}"></item-list>
                </div>

            </div>
        </div>
        <div class="list-controls m-b-3 row">
            <div class="col-xs-12">
                <pagination template="#vue-pagination"></pagination>

                <noscript>
                    {% include "Ceres::Category.Item.Partials.Pagination" %}
                </noscript>

            </div>
        </div>
    </div>

{% endblock %}

{% block PartialHead %}
    <script type="application/ld+json">{"@context": "http://schema.org","@type": "WebSite","url": "{{ services.webstoreConfig.getWebstoreConfig().domainSsl }}","potentialAction":{"@type": "SearchAction","target": "{{ services.webstoreConfig.getWebstoreConfig().domainSsl }}/search?query={search_term}","query-input": "required name=search_term"}}</script>

    {% if page-1 > 0 %}
        <link rel=“prev“ href=“{{ services.webstoreConfig.getWebstoreConfig().domainSsl }}?{{ query | merge({'page' : page-1 }) | url_encode }}“ />
    {% endif %}

    {% if page+1 <= pageMax %}
        <link rel=“next“ href=“{{ services.webstoreConfig.getWebstoreConfig().domainSsl }}?{{ query | merge({'page' : page+1 }) | url_encode }}“ />
    {% endif %}

    <title>{{ category.details.first.name }} | {{ config("Ceres.header.company_name") }}</title>

    <meta name="description" content="{{ category.details[0].metaDescription }}">
    <meta name="keywords" content="{{ category.details[0].metaKeywords }}">

    {% set metaRobots = category.details[0].metaRobots %}
    {% set formattedMetaRobots = metaRobots|replace({'_': ', '}) %}

    <meta name="robots" content="{{ formattedMetaRobots }}">
{% endblock %}
