{{ component( "Ceres::Customer.Components.AddressSelect.CreateUpdateAddress") }}
{{ component( "Ceres::Customer.Components.AddressSelect.AddressHeader") }}


<script type="x/template" id="vue-address-select">
    <div>
        <div class="cmp cmp-address-list mb-4">
            <div class="dropdown items">
                <div
                    class="component-loading"
                    :id="'addressMultiSelect' + _uid"
                    v-bind:class="{'dropdown-toggle card': !isAddressListEmpty && !(addressType === '2' && addressList.length === 1), 'items items-empty': isAddressListEmpty && (addressType === '2' && addressList.length === 1), 'isLoading disabled': isBasketLoading || isCheckoutReadonly}"
                    @click="onDropdownClicked($event)"
                    data-toggle="dropdown"
                    aria-haspopup="true"
                    aria-expanded="false"
                    data-boundary="window"
                    data-flip="false">

                    <div class="item-inner" :class="{'error': showError}">
                        <span v-if="selectedAddress && selectedAddress.id == -99">
                            <p class="text-muted small font-italic pt-3 m-0" :class="paddingClasses" :style="paddingInlineStyles">{{ trans("Ceres::Template.addressSameAsInvoice") }}</p>
                        </span>
                        <span v-else class="item-content">
                            <div v-if="!isAddressListEmpty && selectedAddress">
                                <address-header :address="selectedAddress" :class="paddingClasses" :style="paddingInlineStyles"></address-header>
                            </div>
                            <p v-if="!isAddressListEmpty && !selectedAddress" class="text-muted small font-italic pt-3">{{ trans("Ceres::Template.addressPleaseSelect") }}</p>
                            <p v-if="isAddressListEmpty" class="text-muted small font-italic pt-3">{{ trans("Ceres::Template.addressNoAddress") }}</p>
                        </span>
                    </div>
                </div>

                <div class="add-item">
                    <button v-tooltip data-toggle="tooltip" data-placement="top" title="{{ trans("Ceres::Template.addressAddAddress") }}" class="btn btn-primary btn-appearance btn-medium btn-only-icon-xs-down" v-if="isAddAddressEnabled" @click.prevent="showAddModal()" :disabled="isBasketLoading || isCheckoutReadonly">
                        <span>{{ trans("Ceres::Template.addressAddAddress") }}</span>
                        <i class="fa fa-plus-square" aria-hidden="true"></i>
                    </button>
                </div>

                <div class="dropdown-menu" :aria-labelledby="'addressMultiSelect' + _uid" v-if="!isAddressListEmpty && !(addressType === '2' && addressList.length === 1)">
                    <ul>
                        <li class="item" v-for="(address, index) in addressList">
                            <input
                                type="radio"
                                :name="'shippingAddress' + _uid"
                                :id="'addressSelectItem' + _uid + address.id"
                                :value="address.id"
                                :checked="selectedAddress && selectedAddress.id === address.id"
                                @change="onAddressChanged(address)">
                            <label :for="'addressSelectItem' + _uid + address.id" class="item-inner">
                            <span v-if="address.id == -99">
                                <p class="text-muted small font-italic pt-3">{{ trans("Ceres::Template.addressSameAsInvoice") }}</p>
                            </span>
                                <span v-else class="item-content small">
                                <address-header :address="address" :class="paddingClasses" :style="paddingInlineStyles"></address-header>
                            </span>
                                <!---->
                                <div class="item-controls" v-if="address.id != -99">
                                    <span class="item-edit">
                                        <button v-tooltip data-toggle="tooltip" data-placement="top" title="{{ trans("Ceres::Template.addressEdit") }}" class="btn btn-primary btn-appearance" @click.prevent="showEditModal(address)">
                                            <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                                        </button>
                                    </span>
                                    <span class="item-remove">
                                        <button v-tooltip data-toggle="tooltip" data-placement="top" title="{{ trans("Ceres::Template.addressDelete") }}" class="btn btn-danger" @click.prevent="showDeleteModal(address)">
                                            <i class="fa fa-times" aria-hidden="true"></i>
                                        </button>
                                    </span>
                                </div>
                            </label>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <div ref="addressModal">
            <div class="modal fade" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">${headline}</h4>
                            <button type="button" class="close" @click="closeAddressModal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>

                        <div class="modal-body">
                            <fieldset>
                                <create-update-address
                                    template="#vue-create-update-address"
                                    :address-data="addressToEdit"
                                    :address-modal="addressModal"
                                    :modal-type="modalType"
                                    :address-type="addressType"
                                    @input="setAddressToEditField($event)"
                                    :optional-address-fields="optionalAddressFields"
                                    :required-address-fields="requiredAddressFields"
                                    :default-salutation="defaultSalutation">
                                </create-update-address>
                            </fieldset>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div ref="deleteModal">
            <div class="modal fade" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">${headline}</h4>
                            <button type="button" class="close" @click="closeDeleteModal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>

                        <div class="modal-body">
                            <fieldset>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="modal-address">
                                            <strong v-if="addressToDelete.name1 && addressToDelete.name1.length > 0">${addressToDelete.name1}</strong>
                                            <strong v-if="!addressToDelete.name1 || addressToDelete.name1.length == 0">${addressToDelete | optionType(11)} ${addressToDelete.name2} ${addressToDelete.name3}</strong>
                                            <span v-else>${selectedAddress | optionType(11)} ${addressToDelete.name2} ${addressToDelete.name3}</span>
                                            <span>${addressToDelete.name4}</span>
                                            <span>${addressToDelete.address1} ${addressToDelete.address2}</span>
                                            <span>
                                                <template v-if="addressToDelete.address1 === 'PACKSTATION' || addressToDelete.address1 === 'POSTFILIALE'">
                                                    {{ trans("Ceres::Template.addressPostNummer") }}
                                                    ${addressToDelete | optionType(6)}
                                                </template> 
                                                ${ addressToDelete.address3 }
                                            </span>
                                            <span>${addressToDelete.postalCode} ${addressToDelete.town}</span>
                                            <span>${getCountryName(addressToDelete.countryId)}</span>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-medium mr-2 btn-outline-primary" @click="closeDeleteModal">
                                <span>{{ trans("Ceres::Template.addressCancel") }}</span>
                                <i class="fa fa-times" aria-hidden="true"></i>
                            </button>
                            <button type="button" class="btn btn-primary btn-appearance btn-medium" :disabled="deleteModalWaiting" @click="deleteAddress">
                                <span>{{ trans("Ceres::Template.addressDelete") }}</span>
                                <i v-waiting-animation="deleteModalWaiting" class="fa fa-trash" aria-hidden="true"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>
