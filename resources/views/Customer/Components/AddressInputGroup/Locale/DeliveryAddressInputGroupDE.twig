{{ component( "Ceres::Customer.Components.SalutationSelect" ) }}

{% set addressFields = config("Ceres.delivery_address.show") | split(', ') %}
{% set addressFieldsRequired = config("Ceres.delivery_address.require") | split(', ') %}

<div class="col-12">
    <div class="row">
        <div v-if="isInOptionalFields('de', 'delivery_address.salutation')" class="col-12 col-sm-4">
            <div class="input-unit" v-validate="isInRequiredFields('de', 'delivery_address.salutation')">
                <salutation-select :address-type="addressType" :address-data="value" :enabled-address-fields="optionalAddressFields" @input="emitInputEvent($event.field, $event.value)"></salutation-select>
                <label :for="'txtSalutation' + _uid">
                    ${ transformTranslation("Ceres::Template.addressSalutation", "de", "delivery_address.salutation") }
                </label>
            </div>
        </div>
    </div>
</div>

<div class="col-12">
    <div class="row">
        <div class="col-12 col-sm-6"
            v-if="isInOptionalFields('de', 'delivery_address.salutation') && value.gender === 'company' || isInOptionalFields('de', 'delivery_address.name1') && !isInOptionalFields('de', 'delivery_address.salutation')">
            <div class="input-unit" data-validate="text" data-model="name1">
                <input type="text" name="company" :id="'txtCompany' + _uid" :value="value.name1" @input="emitInputEvent('name1', $event.target.value)" data-autofocus>
                <label :for="'txtCompany' + _uid">{{ trans("Ceres::Template.addressCompany") }}*</label>
            </div>
        </div>
        <div
            class="col-12 col-sm-6"
            v-if="(isInOptionalFields('de', 'delivery_address.salutation') && value.gender === 'company') || isInOptionalFields('de', 'delivery_address.vatNumber')">
            <div
                class="input-unit"
                data-model="vatNumber"
                v-validate:text="isInRequiredFields('de', 'delivery_address.vatNumber')">
                <input type="text" name="vatNumber" :id="'txtVatNumber' + _uid" :value="value.vatNumber" @input="emitInputEvent('vatNumber', $event.target.value)" data-autofocus>
                <label :for="'txtVatNumber' + _uid">
                    ${ transformTranslation("Ceres::Template.addressVatNumber", "de", "delivery_address.vatNumber") }
                </label>
            </div>
        </div>
    </div>
</div>

<div class="col-12">
    <div class="row">
        <div v-if="isInOptionalFields('de', 'delivery_address.title')" class="col-12 col-sm-4">
            <div
                class="input-unit"
                data-model="title"
                v-validate:text="isInRequiredFields('de', 'delivery_address.title')">
                <input type="text" name="title" :id="'txtTitle' + _uid" :value="value.title" @input="emitInputEvent('title', $event.target.value)" data-autofocus>
                <label :for="'txtTitle' + _uid">
                    ${ transformTranslation("Ceres::Template.addressTitle", "de", "delivery_address.title") }
                </label>
            </div>
        </div>

        <template v-if="areNameFieldsShown('de', 'delivery_address')">
            <div class="col-12 col-sm-4">
                <div class="input-unit" data-model="name2" v-validate:text="areNameFieldsRequired('de', 'delivery_address')">
                    <input type="text" name="firstName" :id="'txtFirstName' + _uid" :value="value.name2" @input="emitInputEvent('name2', $event.target.value)" data-autofocus>
                    <label :for="'txtFirstName' + _uid">{{ trans("Ceres::Template.addressFirstName") }}<template v-if="areNameFieldsRequired('de', 'delivery_address')">*</template></label>
                </div>
            </div>

            <div class="col-12 col-sm-4">
                <div class="input-unit" data-model="name3" v-validate:text="areNameFieldsRequired('de', 'delivery_address')">
                    <input type="text" name="lastName" :id="'txtLastName' + _uid" :value="value.name3" @input="emitInputEvent('name3', $event.target.value)">
                    <label :for="'txtLastName' + _uid">{{ trans("Ceres::Template.addressLastName") }}<template v-if="areNameFieldsRequired('de', 'delivery_address')">*</template></label>
                </div>
            </div>
        </template>

        <div v-else class="col-xs-12 col-sm-8">
            <div
                class="input-unit"
                data-model="contactPerson"
                v-validate:text="isInRequiredFields('de', 'delivery_address.contactPerson')">
                <input type="text" name="lastName" :id="'txtContactPerson' + _uid" :value="value.contactPerson" @input="emitInputEvent('contactPerson', $event.target.value)">
                <label :for="'txtContactPerson' + _uid">
                    ${ transformTranslation("Ceres::Template.addressContactPerson", "de", "delivery_address.contactPerson") }
                </label>
            </div>
        </div>

        <div v-if="isInOptionalFields('de', 'delivery_address.name4')" class="col-12 col-sm-4">
            <div
                class="input-unit"
                data-model="name4"
                v-validate:text="isInRequiredFields('de', 'delivery_address.name4')">
                <input type="text" name="decorateName" :id="'txtAdditionalName' + _uid" :value="value.name4" @input="emitInputEvent('name4', $event.target.value)">
                <label :for="'txtAdditionalName' + _uid">
                    ${ transformTranslation("Ceres::Template.addressAdditionalName", "de", "delivery_address.name4") }
                </label>
            </div>
        </div>

        <div v-if="isInOptionalFields('de', 'delivery_address.phoneNumber')" class="col-12 col-sm-4">
            <div
                class="input-unit"
                data-model="telephone"
                v-validate:text="isInRequiredFields('de', 'delivery_address.phoneNumber')">
                <input type="text" name="telephone" :id="'txtTelephone' + _uid" :value="value.telephone" @input="emitInputEvent('telephone', $event.target.value)">
                <label :for="'txtTelephone' + _uid">
                    ${ transformTranslation("Ceres::Template.addressTelephone", "de", "delivery_address.phoneNumber") }
                </label>
            </div>
        </div>
    </div>
</div>

<div class="col-12" v-if="isParcelOrOfficeAvailable">
    <div class="row">
        <div class="col-12">
            <input type="checkbox" name="togglePickup" :checked="value.showPickupStation" @change="togglePickupStation($event.target.checked)" :id="'showPickup' + _uid">
            <label :for="'showPickup' + _uid">{{ trans("Ceres::Template.addressToPickupStation") }}</label>
        </div>
    </div>
</div>

<div class="col-12">
    <div class="row">
        <div class="col-12 col-sm-8">
            <div class="input-unit" data-validate="text" data-model="address1">
                <input type="text" name="street" autocomplete="address-line1" :id="'txtStreet' + _uid" :value="value.address1" @input="emitInputEvent('address1', $event.target.value)">
                <label :for="'txtStreet' + _uid">{{ trans("Ceres::Template.addressStreet") }}*</label>
            </div>
        </div>

        <div class="col-12 col-sm-4">
            <div class="input-unit" data-validate="text" data-model="address2">
                <input type="text" name="housenumber" autocomplete="address-line2" :id="'txtNumber' + _uid" :value="value.address2" @input="emitInputEvent('address2', $event.target.value)">
                <label :for="'txtNumber' + _uid">{{ trans("Ceres::Template.addressNumber") }}*</label>
            </div>
        </div>
    </div>
</div>

<div class="col-12">
    <div class="row">
        <div v-if="isInOptionalFields('de', 'delivery_address.address3')" class="col-12 col-sm-6">
            <div
                class="input-unit"
                data-model="address3"
                v-validate:text="isInRequiredFields('de', 'delivery_address.address3')">
                <input type="text" name="decorateAddress" :id="'decorateAddress0' + _uid"
                        :value="value.address3" @input="emitInputEvent('address3', $event.target.value)">
                <label :for="'decorateAddress0' + _uid">
                    ${ transformTranslation("Ceres::Template.addressAdditionalAddress1", "de", "delivery_address.address3") }
                </label>
            </div>
        </div>

        <div v-if="isInOptionalFields('de', 'delivery_address.address4')" class="col-12 col-sm-6">
            <div
                class="input-unit"
                data-model="address4"
                v-validate:text="isInRequiredFields('de', 'delivery_address.address4')">
                <input type="text" name="decorateAddress" :id="'decorateAddress1' + _uid"
                        :value="value.address4" @input="emitInputEvent('address4', $event.target.value)">
                <label :for="'decorateAddress1' + _uid">
                    ${ transformTranslation("Ceres::Template.addressAdditionalAddress2", "de", "delivery_address.address4") }
                </label>
            </div>
        </div>
    </div>
</div>

<div class="col-12 col-sm-4">
    <div class="input-unit" data-validate="text" data-model="postalCode">
        <input type="text" name="zip" :id="'txtZip' + _uid" :value="value.postalCode" @input="emitInputEvent('postalCode', $event.target.value)">
        <label :for="'txtZip' + _uid">{{ trans("Ceres::Template.addressZip") }}*</label>
    </div>
</div>

<div class="col-12 col-sm-4">
    <div class="input-unit" data-validate="text" data-model="town">
        <input type="text" name="town" :id="'txtPlace' + _uid" :value="value.town" @input="emitInputEvent('town', $event.target.value)">
        <label :for="'txtPlace' + _uid">{{ trans("Ceres::Template.addressPlace") }}*</label>
    </div>
</div>

{{ LayoutContainer.show("Ceres::Checkout.CustomAddressField") }}