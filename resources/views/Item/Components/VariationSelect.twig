<script type="x/template" id="vue-variation-select">
    <div>
        <div v-if="attributes.length || (Object.keys(possibleUnits).length > 1 && isContentVisible)" class="row">
            <div class="col-12 variation-select" v-for="attribute in attributes">
                <!-- dropdown -->
                <div class="input-unit" ref="attributesContaner" v-if="attribute.type === 'dropdown'">
                    <select class="custom-select" @change="selectAttribute(attribute.attributeId, $event.target.value)">
                        <option :value="null" v-if="hasEmptyOption || selectedAttributes[attribute.attributeId] === null" :selected="selectedAttributes[attribute.attributeId] === null">{{ trans("Ceres::Template.singleItemPleaseSelect") }}</option>
                        <option
                            v-for="value in attribute.values"
                            :value="value.attributeValueId"
                            :selected="value.attributeValueId === selectedAttributes[attribute.attributeId]">
                            <template v-if="isAttributeSelectionValid(attribute.attributeId, value.attributeValueId)">
                                ${ value.name }
                            </template>
                            <template v-else>
                                {{ trans("Ceres::Template.singleItemInvalidAttribute", { "name": "${ value.name }" }) }}
                            </template>
                        </option>
                    </select>
                    <label v-tooltip="isTextCut(attribute.name)" data-toggle="tooltip" data-placement="top" :title="attribute.name">${ attribute.name }</label>
                </div>
                <!-- /dropdown -->

                <!-- box and image -->
                <div v-else-if="attribute.type === 'box' || attribute.type === 'image'">
                    <span class="text-muted">${ attribute.name }:</span> <b>${ getSelectedAttributeValueName(attribute) }</b>
                    <div class="v-s-boxes py-3" :class="{ 'images': attribute.type === 'image' }">
                        <div class="v-s-box bg-white empty-option"
                            v-if="hasEmptyOption"
                            @click="selectAttribute(attribute.attributeId, null)"
                            :class="{ 'active': selectedAttributes[attribute.attributeId] === null, 'invalid': !isAttributeSelectionValid(attribute.attributeId, null) }">
                            <span class="mx-3">{{ trans("Ceres::Template.singleItemPleaseSelect") }}</span>
                        </div>

                        <div class="v-s-box bg-white"
                            v-for="value in attribute.values"
                            @click="selectAttribute(attribute.attributeId, value.attributeValueId)"
                            :class="{ 'active': value.attributeValueId === selectedAttributes[attribute.attributeId], 'invalid': !isAttributeSelectionValid(attribute.attributeId, value.attributeValueId) }"
                            v-tooltip="!isAttributeSelectionValid(attribute.attributeId, value.attributeValueId)" data-html="true" data-toggle="tooltip" data-placement="top" :data-original-title="getInvalidOptionTooltip(attribute.attributeId, value.attributeValueId)">
                            <span class="mx-3" v-if="attribute.type === 'box'">${ value.name }</span>
                            <img v-ie-objectfit-polyfill="'contain'" class="p-1" v-else :src="value.imageUrl" :alt="value.name">
                        </div>
                    </div>
                </div>
                <!-- /box and image -->
            </div>

            <!-- units -->
            <div class="col-12 variation-select" v-if="Object.keys(possibleUnits).length > 1 && isContentVisible">
                <div class="input-unit">
                    <select class="custom-select" @change="selectUnit($event.target.value)">
                        <option
                            v-for="(unit, unitId) in possibleUnits"
                            :value="unitId"
                            :selected="parseInt(unitId) === selectedUnit">
                            <template v-if="isUnitSelectionValid(unitId)">
                                ${ unit }
                            </template>
                            <template v-else>
                                {{ trans("Ceres::Template.singleItemInvalidAttribute", { "name": "${ unit }" }) }}
                            </template>
                        </option>
                    </select>
                    <label>{{ trans("Ceres::Template.singleItemContent") }}</label>
                </div>
            </div>
            <!-- /units -->
        
        </div>

        <div v-else>
            <slot></slot>
        </div>
    </div>
</script>
