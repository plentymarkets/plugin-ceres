"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[16],{10959:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ FormAttachment; }\n});\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.trim.js\nvar es_string_trim = __webpack_require__(73210);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/form/FormAttachment.vue?vue&type=template&id=3b9c8071&\n\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("label", {\n    directives: [{\n      name: "tooltip",\n      rawName: "v-tooltip"\n    }],\n    ref: "inputUnit",\n    staticClass: "input-unit file-input",\n    attrs: {\n      "data-toggle": "tooltip",\n      title: _vm.selectedFiles\n    }\n  }, [_c("label", {\n    attrs: {\n      for: _vm.formFieldId\n    }\n  }, [_vm._v("\\n        " + _vm._s(_vm.label)), _vm.isRequired ? _c("span", [_vm._v("*")]) : _vm._e()]), _vm._v(" "), _c("span", {\n    staticClass: "input-unit-preview",\n    class: {\n      disabled: !!_vm.selectedFiles\n    },\n    attrs: {\n      "data-testing": "form-attachment-file-name"\n    }\n  }, [_vm._v("\\n        " + _vm._s(_vm.selectedFiles) + "\\n    ")]), _vm._v(" "), !_vm.selectedFiles ? _c("span", {\n    staticClass: "input-unit-btn"\n  }, [_c("i", {\n    staticClass: "fa fa-ellipsis-h"\n  })]) : _c("span", {\n    staticClass: "input-unit-btn",\n    attrs: {\n      "data-testing": "remove-attached-file"\n    },\n    on: {\n      click: function click($event) {\n        $event.preventDefault();\n        return _vm.clearSelectedFiles();\n      }\n    }\n  }, [_c("i", {\n    staticClass: "fa fa-times"\n  })]), _vm._v(" "), _c("input", {\n    ref: "fileInput",\n    attrs: {\n      type: "file",\n      multiple: _vm.allowMultiple,\n      name: _vm.formFieldId,\n      id: _vm.formFieldId,\n      disabled: _vm.allowedFileExtensions.trim().length === 0 || !!_vm.selectedFiles,\n      accept: _vm.allowedFileExtensions,\n      "data-testing": "form-attachment-input"\n    },\n    on: {\n      change: _vm.collectFiles\n    }\n  })]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/form/FormAttachment.vue?vue&type=template&id=3b9c8071&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.join.js\nvar es_array_join = __webpack_require__(69600);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js\nvar es_array_map = __webpack_require__(21249);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js\nvar es_array_from = __webpack_require__(91038);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js\nvar es_string_iterator = __webpack_require__(78783);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js\nvar es_function_name = __webpack_require__(68309);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/form/FormAttachment.vue?vue&type=script&lang=js&\n\n\n\n\n\n/* harmony default export */ var FormAttachmentvue_type_script_lang_js_ = ({\n  name: "form-attachment",\n  data: function data() {\n    return {\n      selectedFiles: ""\n    };\n  },\n  props: {\n    allowMultiple: Boolean,\n    allowedFileExtensions: String,\n    isRequired: Boolean,\n    formFieldId: String,\n    label: String\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.$nextTick(function () {\n      if (_this.isRequired) {\n        _this.$refs.inputUnit.setAttribute("data-validate", "file");\n      }\n    });\n  },\n  methods: {\n    collectFiles: function collectFiles(event) {\n      var fileList = event.target.files;\n      this.selectedFiles = Array.from(fileList).map(function (file) {\n        return file.name;\n      }).join(", ");\n      this.$emit(\'files-changed\', fileList);\n    },\n    clearSelectedFiles: function clearSelectedFiles() {\n      this.selectedFiles = null;\n      this.$refs.fileInput.value = "";\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/form/FormAttachment.vue?vue&type=script&lang=js&\n /* harmony default export */ var form_FormAttachmentvue_type_script_lang_js_ = (FormAttachmentvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(51900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/form/FormAttachment.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  form_FormAttachmentvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var FormAttachment = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10959\n')}}]);