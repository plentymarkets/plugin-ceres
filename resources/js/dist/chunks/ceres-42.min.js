"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[42],{51272:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ TagList; }\n});\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js\nvar es_function_name = __webpack_require__(68309);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/TagList.vue?vue&type=template&id=300d77b0&\n\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _vm.tags && _vm.tags.length > 0 ? _c("div", {\n    staticClass: "pt-1 pb-1"\n  }, [_vm.isTagRouteEnabled ? _vm._l(_vm.tags, function (tag) {\n    return _c("a", {\n      key: tag.id,\n      staticClass: "badge mr-1",\n      class: [_vm.tagAppearance, _vm.marginClasses, _vm.getTextColorClass(tag.color)],\n      style: [_vm.getStyles(tag), _vm.marginInlineStyles],\n      attrs: {\n        href: _vm.getTagLink(tag)\n      }\n    }, [_c("span", [_vm._v(_vm._s(tag.names.name))])]);\n  }) : _vm._l(_vm.tags, function (tag) {\n    return _c("span", {\n      key: tag.id,\n      staticClass: "badge mr-1",\n      class: [_vm.tagAppearance, _vm.marginClasses, _vm.getTextColorClass(tag.color)],\n      style: [_vm.getStyles(tag), _vm.marginInlineStyles]\n    }, [_c("span", [_vm._v(_vm._s(tag.names.name))])]);\n  })], 2) : _vm._e();\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/TagList.vue?vue&type=template&id=300d77b0&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(26699);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js\nvar es_string_includes = __webpack_require__(32023);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js\nvar es_array_filter = __webpack_require__(57327);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__(41539);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.parse-int.js\nvar es_parse_int = __webpack_require__(91058);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js\nvar es_regexp_exec = __webpack_require__(74916);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js\nvar es_string_replace = __webpack_require__(15306);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/TagList.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var TagListvue_type_script_lang_js_ = ({\n  name: "tag-list",\n  props: {\n    tagAppearance: {\n      type: String,\n      default: ""\n    },\n    marginClasses: {\n      type: String,\n      default: ""\n    },\n    marginInlineStyles: {\n      type: String,\n      default: ""\n    },\n    enabledRoutes: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  inject: {\n    itemId: {\n      default: null\n    }\n  },\n  computed: {\n    isTagRouteEnabled: function isTagRouteEnabled() {\n      return this.enabledRoutes.includes("all") || this.enabledRoutes.includes("tags");\n    },\n    tags: function tags() {\n      var currentVariation = this.$store.getters["".concat(this.itemId, "/currentItemVariation")];\n      return currentVariation && currentVariation.tags ? currentVariation.tags.filter(function (tag) {\n        return tag.names.name;\n      }) : [];\n    }\n  },\n  methods: {\n    getTextColorClass: function getTextColorClass(bgColor) {\n      if (!bgColor) return "badge-primary";\n      var color = bgColor.charAt(0) === "#" ? bgColor.substring(1, 7) : bgColor;\n      var red = parseInt(color.substring(0, 2), 16);\n      var green = parseInt(color.substring(2, 4), 16);\n      var blue = parseInt(color.substring(4, 6), 16);\n      var result = red * 0.299 + green * 0.587 + blue * 0.114;\n      return result > 186 ? "text-dark" : "text-light";\n    },\n    getStyles: function getStyles(tag) {\n      if (tag.color) {\n        return {\n          backgroundColor: tag.color\n        };\n      }\n      return {};\n    },\n    getTagLink: function getTagLink(tag) {\n      var url = "/" + encodeURIComponent(tag.names.name.toLowerCase().replace(/\\s+/g, \'_\')) + "_t" + tag.id;\n      if (App.defaultLanguage != App.language) {\n        url = "/" + App.language + url;\n      }\n      return url;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/TagList.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_TagListvue_type_script_lang_js_ = (TagListvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(51900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/TagList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  item_TagListvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var TagList = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///51272\n')}}]);