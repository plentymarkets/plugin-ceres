"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[39],{34829:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ SetPrice; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/SetPrice.vue?vue&type=template&id=1e780e4e&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", {\n    staticClass: "has-crossprice"\n  }, [_vm.showCrossPrice && _vm.isSet && this.currentVariation.item.rebate > 0 ? _c("div", {\n    staticClass: "crossprice"\n  }, [_c("del", {\n    staticClass: "text-muted small text-appearance"\n  }, [_vm._v("\\n            " + _vm._s(_vm._f("itemCrossPrice")(_vm._f("currency")(_vm.setNoRebatePrice, _vm.currentVariation.prices.set.currency))) + "\\n        ")])]) : _vm._e(), _vm._v(" "), _c("span", {\n    staticClass: "price h1"\n  }, [_c("span", [!_vm.isVariationSelected || _vm.isSetLoading ? [_vm._v("\\n                " + _vm._s(_vm.$translate("Ceres::Template." + _vm.dynamicTranslationKey, {\n    price: _vm.$options.filters.currency(_vm.dynamicPrice, _vm.currentVariation.prices.set.currency)\n  })) + "\\n            ")] : [_vm._v("\\n                " + _vm._s(_vm._f("currency")(_vm.dynamicPrice, _vm.currentVariation.prices.set.currency)) + "\\n            ")]], 2), _vm._v(" "), _c("sup", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.singleItemFootnote1")))])])]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/SetPrice.vue?vue&type=template&id=1e780e4e&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/SetPrice.vue?vue&type=script&lang=js&\n/* harmony default export */ var SetPricevue_type_script_lang_js_ = ({\n  name: "set-price",\n  props: {\n    showCrossPrice: {\n      type: Boolean,\n      default: true\n    }\n  },\n  inject: {\n    itemId: {\n      default: null\n    }\n  },\n  computed: {\n    currentVariation: function currentVariation() {\n      return this.$store.getters["".concat(this.itemId, "/currentItemVariation")];\n    },\n    variationTotalPrice: function variationTotalPrice() {\n      return this.$store.getters["".concat(this.itemId, "/variationTotalPrice")];\n    },\n    setNoRebatePrice: function setNoRebatePrice() {\n      if (this.isSet) {\n        if (this.isSetLoading) {\n          return this.variationTotalPrice / (100 - this.currentVariation.item.rebate) * 100;\n        } else {\n          return this.variationTotalPrice;\n        }\n      }\n      return null;\n    },\n    variationSetRebatePrice: function variationSetRebatePrice() {\n      if (this.isSetLoading) {\n        return this.variationTotalPrice;\n      } else {\n        return this.variationTotalPrice * (1 - this.currentVariation.item.rebate / 100);\n      }\n    },\n    isVariationSelected: function isVariationSelected() {\n      if (this.isSet) {\n        return this.$store.getters["itemSetAllVariationSelected"];\n      } else {\n        return this.$store.state.items[this.itemId].variationSelect.isVariationSelected;\n      }\n    },\n    isSet: function isSet() {\n      return this.currentVariation.item.itemType === "set" || App.isShopBuilder && this.currentVariation.item.itemType !== undefined;\n    },\n    isSetLoading: function isSetLoading() {\n      return this.$store.state.items.isSetLoading;\n    },\n    dynamicPrice: function dynamicPrice() {\n      return this.isSet ? this.variationSetRebatePrice : this.variationTotalPrice;\n    },\n    dynamicTranslationKey: function dynamicTranslationKey() {\n      return this.isSet ? "dynamicSetPrice" : "dynamicSetComponentPrice";\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/SetPrice.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_SetPricevue_type_script_lang_js_ = (SetPricevue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(51900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/SetPrice.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  item_SetPricevue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var SetPrice = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///34829\n')}}]);