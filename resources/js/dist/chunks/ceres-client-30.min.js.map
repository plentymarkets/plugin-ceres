{"version":3,"sources":["webpack:///./resources/js/src/app/components/item/BKAvailability.vue?d0c9","webpack:///./node_modules/feiertagejs/build/feiertage.js","webpack:///resources/js/src/app/components/item/BKAvailability.vue","webpack:///./resources/js/src/app/components/item/BKAvailability.vue?8fc6","webpack:///./resources/js/src/app/components/item/BKAvailability.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","class","row","short","liveShippingInfo","staticClass","bkIcon","domProps","innerHTML","_s","avDisplayHoliday","_v","_e","attrs","id","tabindex","role","_m","_withStripped","allRegions","currentLanguage","translations","de","NEUJAHRSTAG","HEILIGEDREIKOENIGE","KARFREITAG","OSTERSONNTAG","OSTERMONTAG","TAG_DER_ARBEIT","CHRISTIHIMMELFAHRT","PFINGSTSONNTAG","PFINGSTMONTAG","FRONLEICHNAM","MARIAHIMMELFAHRT","DEUTSCHEEINHEIT","REFORMATIONSTAG","ALLERHEILIGEN","BUBETAG","ERSTERWEIHNACHTSFEIERTAG","ZWEITERWEIHNACHTSFEIERTAG","WELTKINDERTAG","WELTFRAUENTAG","AUGSBURGER_FRIEDENSFEST","isHoliday","date","region","checkRegion","year","getFullYear","internalDate","toUtcTimestamp","getHolidaysOfYear","map","holiday","getHolidaysAsUtcTimestamps","indexOf","Error","toString","easterDate","C","Math","floor","N","K","I","J","L","M","D","Date","getEasterDate","karfreitag","addDays","getTime","ostermontag","christiHimmelfahrt","pfingstsonntag","pfingstmontag","holidays","getCommonHolidays","newHoliday","feiertageObjects","validRegions","includes","push","makeDate","addHeiligeDreiKoenige","addEasterAndPfingsten","fronleichnam","addFronleichnam","addMariaeHimmelfahrt","addReformationstag","addAllerheiligen","bussbettag","jahr","weihnachten","wochenTagOffset","getDay","tageVorWeihnachten","bbtag","getBussBettag","getUTCFullYear","getUTCMonth","getUTCDate","addBussUndBetttag","addWeltkindertag","addWeltfrauenTag","addRegionalHolidays","sort","a","b","days","changedDate","setDate","getDate","naturalMonth","day","name","regions","length","dateString","localeDateObjectToDateString","lang","undefined","otherDate","normalizedDate","getTimezoneOffset","setUTCHours","toISOString","slice","setHours","component","type","options","__file"],"mappings":"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","file":"chunks/ceres-client-30.min.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { class: { row: !_vm.short } }, [\n    _c(\n      \"div\",\n      {\n        class: {\n          \"col-12 d-flex align-items-center\": !_vm.short,\n          liveShippingInfo: _vm.short\n        }\n      },\n      [\n        _c(\"span\", {\n          staticClass: \"availabilityText sofortLieferbar\",\n          class: { bkIcon: !_vm.short },\n          domProps: { innerHTML: _vm._s(_vm.avDisplayHoliday) }\n        })\n      ]\n    ),\n    _vm._v(\" \"),\n    !_vm.short\n      ? _c(\n          \"div\",\n          {\n            staticClass: \"modal fade\",\n            attrs: {\n              id: \"freightInfo\",\n              tabindex: \"-1\",\n              role: \"dialog\",\n              \"aria-labelledby\": \"freightInfoToggle\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._m(0)]\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      { staticClass: \"modal-dialog\", attrs: { role: \"document\" } },\n      [\n        _c(\"div\", { staticClass: \"modal-content\" }, [\n          _c(\"div\", { staticClass: \"modal-body d-flex flex-column\" }, [\n            _c(\"h3\", { staticClass: \"mb-2\" }, [\n              _vm._v(\"Lieferung per Spedition\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", [\n              _vm._v(\n                \"Das Produkt ist auf Lager und wird umgehend für den Versand vorbereitet. \\n                        Die Spedition wird sich in den nächsten Tagen mit Ihnen in Verbindung setzen,\\n                        um einen Liefertermin zu vereinbaren.\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-bkm btn-sm ml-auto mt-2\",\n                attrs: { type: \"button\", \"data-dismiss\": \"modal\" }\n              },\n              [_vm._v(\"Schließen\")]\n            )\n          ])\n        ])\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","const germanTranslations = {\n    NEUJAHRSTAG: 'Neujahrstag',\n    HEILIGEDREIKOENIGE: 'Heilige Drei Könige',\n    KARFREITAG: 'Karfreitag',\n    OSTERSONNTAG: 'Ostersonntag',\n    OSTERMONTAG: 'Ostermontag',\n    TAG_DER_ARBEIT: 'Tag der Arbeit',\n    CHRISTIHIMMELFAHRT: 'Christi Himmelfahrt',\n    PFINGSTSONNTAG: 'Pfingstsonntag',\n    PFINGSTMONTAG: 'Pfingstmontag',\n    FRONLEICHNAM: 'Fronleichnam',\n    MARIAHIMMELFAHRT: 'Mariä Himmelfahrt',\n    DEUTSCHEEINHEIT: 'Tag der Deutschen Einheit',\n    REFORMATIONSTAG: 'Reformationstag',\n    ALLERHEILIGEN: 'Allerheiligen',\n    BUBETAG: 'Buß- und Bettag',\n    ERSTERWEIHNACHTSFEIERTAG: '1. Weihnachtstag',\n    ZWEITERWEIHNACHTSFEIERTAG: '2. Weihnachtstag',\n    WELTKINDERTAG: 'Weltkindertag',\n    WELTFRAUENTAG: 'Weltfrauentag',\n    AUGSBURGER_FRIEDENSFEST: 'Augsburger Friedensfest',\n};\n\nconst allHolidays = [\n    'NEUJAHRSTAG',\n    'HEILIGEDREIKOENIGE',\n    'KARFREITAG',\n    'OSTERSONNTAG',\n    'OSTERMONTAG',\n    'TAG_DER_ARBEIT',\n    'CHRISTIHIMMELFAHRT',\n    'MARIAHIMMELFAHRT',\n    'PFINGSTSONNTAG',\n    'PFINGSTMONTAG',\n    'FRONLEICHNAM',\n    'DEUTSCHEEINHEIT',\n    'REFORMATIONSTAG',\n    'ALLERHEILIGEN',\n    'BUBETAG',\n    'ERSTERWEIHNACHTSFEIERTAG',\n    'ZWEITERWEIHNACHTSFEIERTAG',\n    'WELTKINDERTAG',\n    'WELTFRAUENTAG',\n    'AUGSBURGER_FRIEDENSFEST',\n];\n\nconst allRegions = [\n    'BW',\n    'BY',\n    'BE',\n    'BB',\n    'HB',\n    'HE',\n    'HH',\n    'MV',\n    'NI',\n    'NW',\n    'RP',\n    'SL',\n    'SN',\n    'ST',\n    'SH',\n    'TH',\n    'BUND',\n    'AUGSBURG',\n    'ALL',\n];\n\n/*!\n * feiertage.js\n * @repository https://github.com/sfakir/feiertagejs\n * @docs https://github.com/sfakir/feiertagejs/blob/master/docs.md\n *\n * Copyright 2015-2021 Simon Fakir\n * Released under the MIT license\n */\n// translations\nconst defaultLanguage = 'de';\nlet currentLanguage = defaultLanguage;\nconst translations = {\n    de: germanTranslations,\n};\n/**\n * adds a translation for the holidays (e.g. english).\n * This also allows to override the German names.\n * Hint: Interpolates German for missing translations\n * @param {string} isoCode of the new language\n * @param {TranslationTable} newTranslation  map of {HolidayType} to translation stringg\n */\nfunction addTranslation(isoCode, newTranslation) {\n    const code = isoCode.toLowerCase();\n    const defaultTranslation = translations[defaultLanguage];\n    let missingFields = false;\n    // fill new Translation with default Language\n    for (const holiday of allHolidays) {\n        if (!newTranslation[holiday]) {\n            missingFields = true;\n            newTranslation[holiday] = defaultTranslation[holiday];\n        }\n    }\n    if (missingFields) {\n        console.warn('[feiertagejs] addTranslation: you did not add all holidays in your translation! Took German as fallback');\n    }\n    translations[code] = newTranslation;\n}\n/**\n * Set a language to default language\n * @param {string} isoCode\n */\nfunction setLanguage(isoCode) {\n    const code = isoCode.toLowerCase();\n    if (!translations[code]) {\n        throw new TypeError(`[feiertagejs] tried to set language to ${code} but the translation is missing. Please use addTranslation(isoCode,object) first`);\n    }\n    currentLanguage = isoCode;\n}\n/**\n * Get currently set language\n * @returns {string}\n */\nfunction getLanguage() {\n    return currentLanguage;\n}\n// holidays api\n/**\n * Checks if a specific date is sunday or holiday.\n * @param date\n * @param region\n * @returns {boolean}\n */\nfunction isSunOrHoliday(date, region) {\n    checkRegion(region);\n    return date.getDay() === 0 || isHoliday(date, region);\n}\n/**\n * Check is specific date is holiday.\n * @param date\n * @param {Region} region two character {@link Region} code\n * @returns {boolean}\n */\nfunction isHoliday(date, region) {\n    checkRegion(region);\n    const year = date.getFullYear();\n    const internalDate = toUtcTimestamp(date);\n    const holidays = getHolidaysAsUtcTimestamps(year, region);\n    return holidays.indexOf(internalDate) !== -1;\n}\nfunction getHolidayByDate(date, region = 'ALL') {\n    checkRegion(region);\n    const holidays = getHolidaysOfYear(date.getFullYear(), region);\n    return holidays.find((holiday) => holiday.equals(date));\n}\n// additional runtime checks\n/**\n * Checks if the given region is a valid {@link Region}.\n *\n * @param region {@link Region} to check\n * @throws {Error}\n * @private\n */\nfunction checkRegion(region) {\n    if (region === null || region === undefined) {\n        throw new Error(`Region must not be undefined or null`);\n    }\n    if (allRegions.indexOf(region) === -1) {\n        throw new Error(`Invalid region: ${region}! Must be one of ${allRegions.toString()}`);\n    }\n}\n/**\n * Checks if the given holidayName is a valid {@link HolidayType}.\n * @param holidayName {@link HolidayType} to check\n * @throws {Error}\n * @private\n */\nfunction checkHolidayType(holidayName) {\n    if (holidayName === null || holidayName === undefined) {\n        throw new TypeError('holidayName must not be null or undefined');\n    }\n    if (allHolidays.indexOf(holidayName) === -1) {\n        throw new Error(`feiertage.js: invalid holiday type \"${holidayName}\"! Must be one of ${allHolidays.toString()}`);\n    }\n}\nfunction isSpecificHoliday(date, holidayName, region = 'ALL') {\n    checkRegion(region);\n    checkHolidayType(holidayName);\n    const holidays = getHolidaysOfYear(date.getFullYear(), region);\n    const foundHoliday = holidays.find((holiday) => holiday.equals(date));\n    if (!foundHoliday) {\n        return false;\n    }\n    return foundHoliday.name === holidayName;\n}\n/**\n * Returns all holidays of a year in a {@link Region}.\n * @param year\n * @param region\n * @returns {Array.<Holiday>}\n */\nfunction getHolidays(year, region) {\n    let y;\n    if (typeof year === 'string') {\n        y = parseInt(year, 10);\n    }\n    else {\n        y = year;\n    }\n    checkRegion(region);\n    return getHolidaysOfYear(y, region);\n}\n/**\n *\n * @param {number} year\n * @param region\n * @returns {number[]}\n * @private\n */\nfunction getHolidaysAsUtcTimestamps(year, region) {\n    const holidays = getHolidaysOfYear(year, region);\n    return holidays.map((holiday) => toUtcTimestamp(holiday.date));\n}\n/**\n *\n * @param {number} year\n * @param region\n * @returns {{objects: Array.<Holiday>, integers}}\n * @private\n */\nfunction getHolidaysOfYear(year, region) {\n    const easterDate = getEasterDate(year);\n    const karfreitag = addDays(new Date(easterDate.getTime()), -2);\n    const ostermontag = addDays(new Date(easterDate.getTime()), 1);\n    const christiHimmelfahrt = addDays(new Date(easterDate.getTime()), 39);\n    const pfingstsonntag = addDays(new Date(easterDate.getTime()), 49);\n    const pfingstmontag = addDays(new Date(easterDate.getTime()), 50);\n    const holidays = [\n        ...getCommonHolidays(year),\n        newHoliday('KARFREITAG', karfreitag, ['ALL']),\n        newHoliday('OSTERMONTAG', ostermontag, ['ALL']),\n        newHoliday('CHRISTIHIMMELFAHRT', christiHimmelfahrt, ['ALL']),\n        newHoliday('PFINGSTMONTAG', pfingstmontag, ['ALL']),\n    ];\n    addHeiligeDreiKoenige(year, region, holidays);\n    addEasterAndPfingsten(year, region, easterDate, pfingstsonntag, holidays);\n    addFronleichnam(region, easterDate, holidays);\n    addMariaeHimmelfahrt(year, region, holidays);\n    addReformationstag(year, region, holidays);\n    addAllerheiligen(year, region, holidays);\n    addBussUndBetttag(year, region, holidays);\n    addWeltkindertag(year, region, holidays);\n    addWeltfrauenTag(year, region, holidays);\n    addRegionalHolidays(year, region, holidays);\n    return holidays.sort((a, b) => a.date.getTime() - b.date.getTime());\n}\nfunction getCommonHolidays(year) {\n    return [\n        newHoliday('NEUJAHRSTAG', makeDate(year, 1, 1), ['ALL']),\n        newHoliday('TAG_DER_ARBEIT', makeDate(year, 5, 1), ['ALL']),\n        newHoliday('DEUTSCHEEINHEIT', makeDate(year, 10, 3), ['ALL']),\n        newHoliday('ERSTERWEIHNACHTSFEIERTAG', makeDate(year, 12, 25), ['ALL']),\n        newHoliday('ZWEITERWEIHNACHTSFEIERTAG', makeDate(year, 12, 26), ['ALL']),\n    ];\n}\nfunction addRegionalHolidays(year, region, feiertageObjects) {\n    if (region === 'AUGSBURG') {\n        feiertageObjects.push(newHoliday('AUGSBURGER_FRIEDENSFEST', makeDate(year, 8, 8), ['ALL']));\n    }\n}\nfunction addHeiligeDreiKoenige(year, region, feiertageObjects) {\n    const validRegions = ['BW', 'BY', 'AUGSBURG', 'ST'];\n    if (validRegions.includes(region) || region === 'ALL') {\n        feiertageObjects.push(newHoliday('HEILIGEDREIKOENIGE', makeDate(year, 1, 6), validRegions));\n    }\n}\nfunction addEasterAndPfingsten(year, region, easterDate, pfingstsonntag, feiertageObjects) {\n    const validRegions = ['BB'];\n    if (validRegions.includes(region) || region === 'ALL') {\n        feiertageObjects.push(newHoliday('OSTERSONNTAG', easterDate, validRegions), newHoliday('PFINGSTSONNTAG', pfingstsonntag, validRegions));\n    }\n}\nfunction addFronleichnam(region, easterDate, holidays) {\n    const validRegions = ['BW', 'BY', 'AUGSBURG', 'HE', 'NW', 'RP', 'SL'];\n    if (validRegions.includes(region) || region === 'ALL') {\n        const fronleichnam = addDays(new Date(easterDate.getTime()), 60);\n        holidays.push(newHoliday('FRONLEICHNAM', fronleichnam, validRegions));\n    }\n}\nfunction addMariaeHimmelfahrt(year, region, holidays) {\n    const validRegions = ['SL', 'BY', 'AUGSBURG'];\n    if (validRegions.includes(region) || region === 'ALL') {\n        holidays.push(newHoliday('MARIAHIMMELFAHRT', makeDate(year, 8, 15), validRegions));\n    }\n}\nfunction addReformationstag(year, region, holidays) {\n    const validRegions = [\n        'NI',\n        'BB',\n        'MV',\n        'SN',\n        'ST',\n        'TH',\n        'HB',\n        'HH',\n        'NI',\n        'SH',\n    ];\n    if (year === 2017 || validRegions.includes(region) || region === 'ALL') {\n        holidays.push(newHoliday('REFORMATIONSTAG', makeDate(year, 10, 31), validRegions));\n    }\n}\nfunction addAllerheiligen(year, region, holidays) {\n    const validRegions = ['BW', 'BY', 'NW', 'RP', 'SL', 'AUGSBURG'];\n    if (validRegions.includes(region) || region === 'ALL') {\n        holidays.push(newHoliday('ALLERHEILIGEN', makeDate(year, 11, 1), validRegions));\n    }\n}\nfunction addBussUndBetttag(year, region, holidays) {\n    const validRegions = ['SN'];\n    if (region === 'SN' || region === 'ALL') {\n        // @todo write test\n        const bussbettag = getBussBettag(year);\n        holidays.push(newHoliday('BUBETAG', makeDate(bussbettag.getUTCFullYear(), bussbettag.getUTCMonth() + 1, bussbettag.getUTCDate()), validRegions));\n    }\n}\nfunction addWeltkindertag(year, region, holidays) {\n    if (year >= 2019 && (region === 'TH' || region === 'ALL')) {\n        holidays.push(newHoliday('WELTKINDERTAG', makeDate(year, 9, 20), ['ALL']));\n    }\n}\nfunction addWeltfrauenTag(year, region, feiertageObjects) {\n    if (year <= 2018) {\n        return;\n    }\n    if (region === 'BE' || region === 'ALL') {\n        // in Berlin ist der Weltfrauentag ein Feiertag seit 2018\n        feiertageObjects.push(newHoliday('WELTFRAUENTAG', makeDate(year, 3, 8), ['ALL']));\n    }\n    if (region === 'MV' && year >= 2023) {\n        // in MV wird der Weltfrauentag erst ab 2023 eingeführt\n        feiertageObjects.push(newHoliday('WELTFRAUENTAG', makeDate(year, 3, 8), ['ALL']));\n    }\n}\n/**\n * Calculates the Easter date of a given year.\n * @param year {number}\n * @returns {Date} Easter date\n * @private\n */\nfunction getEasterDate(year) {\n    const C = Math.floor(year / 100);\n    // tslint:disable:binary-expression-operand-order\n    // tslint generates false positives in the following blocks\n    const N = year - 19 * Math.floor(year / 19);\n    const K = Math.floor((C - 17) / 25);\n    let I = C - Math.floor(C / 4) - Math.floor((C - K) / 3) + 19 * N + 15;\n    I -= 30 * Math.floor(I / 30);\n    I -=\n        Math.floor(I / 28) *\n            (1 -\n                Math.floor(I / 28) *\n                    Math.floor(29 / (I + 1)) *\n                    Math.floor((21 - N) / 11));\n    let J = year + Math.floor(year / 4) + I + 2 - C + Math.floor(C / 4);\n    J -= 7 * Math.floor(J / 7);\n    const L = I - J;\n    const M = 3 + Math.floor((L + 40) / 44);\n    const D = L + 28 - 31 * Math.floor(M / 4);\n    // tslint:enable:binary-expression-operand-order\n    return new Date(year, M - 1, D);\n}\n/**\n * Computes the \"Buss- und Bettag\"'s date.\n * @param jahr {number}\n * @returns {Date} the year's \"Buss- und Bettag\" date\n * @private\n */\nfunction getBussBettag(jahr) {\n    const weihnachten = new Date(jahr, 11, 25, 12, 0, 0);\n    const ersterAdventOffset = 32;\n    let wochenTagOffset = weihnachten.getDay() % 7;\n    if (wochenTagOffset === 0) {\n        wochenTagOffset = 7;\n    }\n    const tageVorWeihnachten = wochenTagOffset + ersterAdventOffset;\n    let bbtag = new Date(weihnachten.getTime());\n    bbtag = addDays(bbtag, -tageVorWeihnachten);\n    return bbtag;\n}\n/**\n * Adds {@code days} days to the given {@link Date}.\n * @param date\n * @param days\n * @returns {Date}\n * @private\n */\nfunction addDays(date, days) {\n    const changedDate = new Date(date);\n    changedDate.setDate(date.getDate() + days);\n    return changedDate;\n}\n/**\n * Creates a new {@link Date}.\n * @param year\n * @param naturalMonth month (1-12)\n * @param day\n * @returns {Date}\n * @private\n */\nfunction makeDate(year, naturalMonth, day) {\n    return new Date(year, naturalMonth - 1, day);\n}\n/**\n *\n * @param name\n * @param date\n * @returns {Holiday}\n * @private\n */\nfunction newHoliday(name, date, regions) {\n    if (regions.length === 1 && regions[0] === 'ALL') {\n        regions = allRegions;\n    }\n    return {\n        name,\n        date,\n        dateString: localeDateObjectToDateString(date),\n        regions,\n        trans(lang = currentLanguage) {\n            throw new Error('Method deprecated. Please replace trans() with translate(). This method will be removed in the next major release.');\n        },\n        translate(lang = currentLanguage) {\n            return lang === undefined || lang === null\n                ? undefined\n                : translations[lang][this.name];\n        },\n        getNormalizedDate() {\n            return toUtcTimestamp(this.date);\n        },\n        equals(otherDate) {\n            const dateString = localeDateObjectToDateString(otherDate);\n            return this.dateString === dateString;\n        },\n    };\n}\n/**\n *\n * @param date\n * @returns {string}\n * @private\n */\nfunction localeDateObjectToDateString(date) {\n    const normalizedDate = new Date(date.getTime() - date.getTimezoneOffset() * 60 * 1000);\n    normalizedDate.setUTCHours(0, 0, 0, 0);\n    return normalizedDate.toISOString().slice(0, 10);\n}\n/**\n * Returns the UTC timestamp of the given date with hours, minutes, seconds, and milliseconds set to zero.\n * @param date\n * @returns {number} UTC timestamp\n */\nfunction toUtcTimestamp(date) {\n    const internalDate = new Date(date);\n    internalDate.setHours(0, 0, 0, 0);\n    return internalDate.getTime();\n}\n\nexport { addTranslation, getHolidayByDate, getHolidays, getLanguage, isHoliday, isSpecificHoliday, isSunOrHoliday, setLanguage };\n//# sourceMappingURL=feiertage.js.map\n","<template>\n    <div :class=\"{'row': !short}\">\n        <div\n            :class=\"{ 'col-12 d-flex align-items-center': !short, 'liveShippingInfo': short }\">\n            <span class=\"availabilityText sofortLieferbar\" :class=\"{'bkIcon': !short}\" v-html=\"avDisplayHoliday\"></span>\n        </div>\n\n        <!-- Modal -->\n        <div v-if=\"!short\" class=\"modal fade\" id=\"freightInfo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"freightInfoToggle\"\n            aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-body d-flex flex-column\">\n                        <h3 class=\"mb-2\">Lieferung per Spedition</h3>\n                        <p>Das Produkt ist auf Lager und wird umgehend für den Versand vorbereitet. \n                            Die Spedition wird sich in den nächsten Tagen mit Ihnen in Verbindung setzen,\n                            um einen Liefertermin zu vereinbaren.</p>\n                        <button type=\"button\" class=\"btn btn-bkm btn-sm ml-auto mt-2\"\n                            data-dismiss=\"modal\">Schließen</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { isHoliday } from 'feiertagejs';\n\nexport default {\n    name: \"biokinder-availability\",\n\n    data() {\n      return {\n        txt1to3Days: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxt1to3Days\"),\n        txt3to5Days: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxt3to5Days\"),\n        txt5to8Days: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxt5to8Days\"),\n        txt1to2Weeks: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxt1to2Weeks\"),\n        txt2to4Weeks: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxt2to4Weeks\"),\n        txt4to6Weeks: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxt4to6Weeks\"),\n        txt6to8Weeks: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxt6to8Weeks\"),\n        txt8to10Weeks: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxt8to10Weeks\"),\n        txtDefaultDelivery: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxtDefaultDelivery\"),\n        txtShipsToday: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxtShipsToday\"),\n        txtChristmasHint: \"<span class='christmas'><i class='fa fa-gift' aria-hidden='true'></i> Pünktlich zu Weihnachten!</span>\",\n        txtEasterHint: \"<span class='easter'><i class='fa fa-gift' aria-hidden='true'></i> Pünktlich zu Ostern!</span>\",\n        txtShipsTomorrow: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxtShipsTomorrow\"),\n        txtShipsMondays: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxtShipsMondays\"),\n        // txtFrightShipsFriday: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxtFrightShipsFriday\"),\n        txtFrightShipsTomorow: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxtFrightShipsTomorow\"),\n        txtFrightNextFriday: this.$translate(\"biokinderDesign::Template.availabilityDisplayTxtFrightNextFriday\"),\n        isLoading: true,\n        requestLoading: false\n      }\n    },\n    props: {\n      variation: {\n        type: Object\n      },\n      avd: {\n        type: Object\n      },\n      short: {\n        type: Boolean,\n        default: false\n      }\n    },\n\n    methods: {\n      requestAvailabilityData()\n      {\n        this.isLoading = true;\n\n        // Already requested this variation\n        if (this.$store.erid.some((e) => { if (e && e.id == this.variation.id) return true; })) {\n            this.isLoading = false;\n            return;\n        }\n\n        if(this.variation.availabilityId == 1)\n        {\n            let avd = {\n                'id': variationId,\n                'd': 0\n            };\n            this.$store.erid.push(avd);\n            this.isLoading = false;\n            return;\n        }\n\n        let variationId = this.variation.id;\n\n        if(this.variation.availabilityId != 1 && !this.requestLoading)\n        {\n            this.requestLoading = true;\n            $.ajax({\n                method: 'GET',\n                context: this,\n                url: 'availabilities/' + variationId + '/',\n                success: function(intDays)\n                {\n                    let avd = {\n                        'id': variationId,\n                        'd': intDays\n                    };\n                    this.$store.erid.push(avd);\n                    this.requestLoading = false;\n                    this.isLoading = false;\n                }\n            });\n        } \n      }\n    },\n    computed: {\n        availabilityDisplay() {\n            // availability != 1\n            if(this.isLoading)\n                return \"...\";\n\n            if (this.variation.availability.id > 1) {\n\n                var tage = this.$store.erid.find((e) => { if (e && e.id == this.variation.id) return e; }).d;\n\n                // days not set properly\n                if (999 == tage || null == tage || 0 == tage || 5 != this.variation.availability.id)\n                    return this.variation.availability.names.name;\n\n                switch (!0) {\n                    case tage < 3:\n                        return this.txt1to3Days;\n                    case tage < 6:\n                        return this.txt3to5Days;\n                    case tage < 11:\n                        return this.txt5to8Days;\n                    case tage < 14:\n                        return this.txt1to2Weeks;\n                    case tage < 28:\n                        return this.txt2to4Weeks;\n                    case tage < 42:\n                        return this.txt4to6Weeks;\n                    case tage < 56:\n                    case tage < 70:\n                        return this.txt6to8Weeks;\n                    default:\n                        return this.txtDefaultDelivery\n                }\n            }\n\n            // availability = 1\n\n\n            // if (this.avd.isSped) {\n                \n            //     // today is friday before 10 and no holiday, ships today!\n            //     if(currentWeekDay == 5 && !isHoliday(dateTodayNow, \"HE\") && dateTodayNow.getHours() < 10)\n            //          return this.txtShipsToday;\n            //    \n\n            //     \n            //     if (isHoliday(dateTodayNow, \"HE\"))\n            //         return this.variation.availability.names.name;\n\n            //     if(dateTodayNow.getHours() < 16)\n            //         return this.txtShipsToday; \n                \n            //     var nextFriday = new Date(this.avd.time.now * 1000);\n            //     var add = 0;\n            //     if (dateTodayNow.getDay() == 5)\n            //         var add = 7;\n                \n            //      nextFriday.setDate(dateTodayNow.getDate() + ((5 + 7 - dateTodayNow.getDay()) % 7) + add);\n        \n            //     // today is friday after 10, or not friday or friday + holiday \n            //     // next friday is (also) a holiday \n            //     // lost -> show default value\n            //     if (isHoliday(nextFriday, \"HE\"))\n            //         return this.variation.availability.names.name;\n                \n            //     // we now know, next friday is not a holiday\n            //     // we also know, it's thursday\n            //     // so we will ship tomorrow\n            //     if(currentWeekDay == 4)\n            //         return this.txtFrightShipsTomorow;\n\n            //     // today is not friday or its friday and too late \n            //     // it is also not thursday\n            //     // next friday, shipping is possible. so output that.\n            //     return this.txtFrightNextFriday;\n            // }\n\n            // product is available\n            // product is not freight\n            // check for holiday on monday\n            // check for holidays\n            let dateTodayNow = new Date(1000 * this.avd.time.now);\n            let dateTomorrow = new Date(1000 * this.avd.time.now + 86400000);\n            let currentWeekDay = new Date(1000 * this.avd.time.now).getDay();\n\n            var daysUntilMonday = 8 - currentWeekDay % 7; // 8 - 5 % 7 = 3 --> friday + 3 days =) monday\n            var timestampMonday = 1000 * this.avd.time.now + 86400000 * daysUntilMonday;\n            let dateMonday = new Date(timestampMonday);\n            let mondayIsHoliday = isHoliday(dateMonday, \"HE\"); // <<--\n\n            if (this.avd.time.now < this.avd.time.until && currentWeekDay > 0 && currentWeekDay <= 5 && !isHoliday(dateTodayNow, \"HE\")) // mo - fr, 0 - ~14h\n                return this.txtShipsToday;\n\n            if (this.avd.time.now > this.avd.time.until && currentWeekDay > 0 && currentWeekDay <= 4 && !isHoliday(dateTomorrow, \"HE\")) // mo - do, 14 - 0\n                return this.txtShipsTomorrow;\n\n            // Friday afternoon, saturday, sunday 00:00 - 23:59 -> ships on monday\n            if ([5, 6, 0].includes(currentWeekDay) && !mondayIsHoliday)\n                return this.txtShipsMondays;\n\n            // if we forgot any case, default\n            console.info(\"BKAvailability\", \"default\");\n            return this.variation.availability.names.name;\n        },\n        avDisplayHoliday()\n        {\n            // Not available today, show default message\n            if (this.txtShipsToday != this.availabilityDisplay && \n                this.txtShipsTomorrow != this.availabilityDisplay && \n                this.txtShipsMondays != this.availabilityDisplay) {\n                return this.availabilityDisplay;\n            }\n            // let dateTodayNow = new Date(1000 * this.avd.time.now);\n            // const currentDayOfYear = Math.floor((dateTodayNow - new Date(dateTodayNow.getFullYear(), 0, 0)) / (1000 * 60 * 60 * 24));\n            // \n            // Easter\n            // if (dateTodayNow.getFullYear() == 2024 && currentDayOfYear < 87)\n                // return \"<span>\" + this.availabilityDisplay + \"</span>\" + this.txtEasterHint;\n\n            // INFO Button for Freight-Goods to explain \"Ships today\" via Modal\n            if (this.avd.isSped && !this.short) {\n                let infoHint = '<svg data-toggle=\"modal\" data-target=\"#freightInfo\" viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"css-i6dzq1\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line></svg>';\n                return \"<span>\" + this.availabilityDisplay + \"</span>\" + infoHint;\n            }\n\n            return this.availabilityDisplay;\n        }\n    },\n    mounted() {\n        this.$nextTick(() => {\n            if (this.$store.erid === undefined)\n                this.$store.erid = [];\n            this.requestAvailabilityData()\n        });\n    },\n    watch: {\n      variation: function()\n      {\n          this.requestAvailabilityData()\n      }\n    }\n}\n</script>\n","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BKAvailability.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BKAvailability.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BKAvailability.vue?vue&type=template&id=b40fd004&\"\nimport script from \"./BKAvailability.vue?vue&type=script&lang=js&\"\nexport * from \"./BKAvailability.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/schweser/GitHub/plentyDevTool/17831/40/Ceres/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('b40fd004')) {\n      api.createRecord('b40fd004', component.options)\n    } else {\n      api.reload('b40fd004', component.options)\n    }\n    module.hot.accept(\"./BKAvailability.vue?vue&type=template&id=b40fd004&\", function () {\n      api.rerender('b40fd004', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/item/BKAvailability.vue\"\nexport default component.exports"],"sourceRoot":""}