{"version":3,"file":"chunks/ceres-49.min.js","mappings":"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","sources":["webpack://Ceres/./resources/js/src/app/components/customer/ResetPasswordForm.vue","webpack://Ceres/./resources/js/src/app/components/customer/ResetPasswordForm.vue?03f6","webpack://Ceres/resources/js/src/app/components/customer/ResetPasswordForm.vue","webpack://Ceres/./resources/js/src/app/components/customer/ResetPasswordForm.vue?f008"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      ref: \"resetPasswordForm\",\n      staticClass: \"w-100 clearfix\",\n      attrs: { method: \"post\" },\n    },\n    [\n      _c(\n        \"div\",\n        {\n          staticClass: \"input-feedback-container\",\n          attrs: { \"data-validate\": \"password\" },\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"input-unit\" },\n            [\n              _c(\"popper\", {\n                ref: \"passwordHint\",\n                attrs: { trigger: \"focus\", placement: \"bottom\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"handle\",\n                    fn: function () {\n                      return [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.passwordFirst,\n                              expression: \"passwordFirst\",\n                            },\n                          ],\n                          attrs: {\n                            type: \"password\",\n                            name: \"password\",\n                            autocomplete: \"new-password\",\n                            id: _vm._uid + \"password_first\",\n                          },\n                          domProps: { value: _vm.passwordFirst },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.passwordFirst = $event.target.value\n                            },\n                          },\n                        }),\n                      ]\n                    },\n                    proxy: true,\n                  },\n                  {\n                    key: \"title\",\n                    fn: function () {\n                      return [\n                        _vm._v(\n                          \"\\n                    \" +\n                            _vm._s(\n                              _vm.$translate(\n                                \"Ceres::Template.resetPwPasswordHintTitle\"\n                              )\n                            ) +\n                            \"\\n                \"\n                        ),\n                      ]\n                    },\n                    proxy: true,\n                  },\n                  {\n                    key: \"content\",\n                    fn: function () {\n                      return [\n                        _c(\"ul\", { staticClass: \"pl-3\" }, [\n                          _c(\"li\", [\n                            _vm._v(\n                              _vm._s(\n                                _vm.$translate(\n                                  \"Ceres::Template.resetPwPasswordHintLength\"\n                                )\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"li\", [\n                            _vm._v(\n                              _vm._s(\n                                _vm.$translate(\n                                  \"Ceres::Template.resetPwPasswordHintDigit\"\n                                )\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"li\", [\n                            _vm._v(\n                              _vm._s(\n                                _vm.$translate(\n                                  \"Ceres::Template.resetPwPasswordHintChar\"\n                                )\n                              )\n                            ),\n                          ]),\n                        ]),\n                      ]\n                    },\n                    proxy: true,\n                  },\n                ]),\n              }),\n              _vm._v(\" \"),\n              _c(\"label\", { attrs: { for: _vm._uid + \"password_first\" } }, [\n                _vm._v(\n                  _vm._s(_vm.$translate(\"Ceres::Template.resetPwNewPassword\")) +\n                    \"*\"\n                ),\n              ]),\n            ],\n            1\n          ),\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          staticClass: \"input-feedback-container\",\n          attrs: { \"data-validate\": \"ref\" },\n        },\n        [\n          _c(\"div\", { staticClass: \"input-unit\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.passwordSecond,\n                  expression: \"passwordSecond\",\n                },\n              ],\n              attrs: {\n                type: \"password\",\n                name: \"password\",\n                autocomplete: \"new-password\",\n                id: _vm._uid + \"password_second\",\n                \"data-validate-ref\": \"#\" + _vm._uid + \"password_first\",\n              },\n              domProps: { value: _vm.passwordSecond },\n              on: {\n                input: function ($event) {\n                  if ($event.target.composing) return\n                  _vm.passwordSecond = $event.target.value\n                },\n              },\n            }),\n            _vm._v(\" \"),\n            _c(\"label\", { attrs: { for: _vm._uid + \"password_second\" } }, [\n              _vm._v(\n                _vm._s(\n                  _vm.$translate(\"Ceres::Template.resetPwRepeatPassword\")\n                ) + \"*\"\n              ),\n            ]),\n          ]),\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn btn-primary btn-appearance btn-large float-right\",\n          attrs: { disabled: _vm.isDisabled },\n          on: {\n            click: function ($event) {\n              $event.preventDefault()\n              return _vm.validatePassword.apply(null, arguments)\n            },\n          },\n        },\n        [\n          _c(\"span\", [\n            _vm._v(_vm._s(_vm.$translate(\"Ceres::Template.resetPwSave\"))),\n          ]),\n          _vm._v(\" \"),\n          _c(\"i\", {\n            staticClass: \"fa fa-floppy-o\",\n            attrs: { \"aria-hidden\": \"true\" },\n          }),\n        ]\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResetPasswordForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResetPasswordForm.vue?vue&type=script&lang=js&\"","<template>\n    <form class=\"w-100 clearfix\" method=\"post\" ref=\"resetPasswordForm\">\n        <div class=\"input-feedback-container\" data-validate=\"password\">\n            <div class=\"input-unit\">\n                <popper v-cloak trigger=\"focus\" placement=\"bottom\" ref=\"passwordHint\">\n                    <template #handle>\n                        <input type=\"password\" name=\"password\" autocomplete=\"new-password\" :id=\"_uid + 'password_first'\" v-model=\"passwordFirst\">\n                    </template>\n                    <template #title>\n                        {{ $translate(\"Ceres::Template.resetPwPasswordHintTitle\") }}\n                    </template>\n                    <template #content>\n                        <ul class=\"pl-3\">\n                            <li>{{ $translate(\"Ceres::Template.resetPwPasswordHintLength\") }}</li>\n                            <li>{{ $translate(\"Ceres::Template.resetPwPasswordHintDigit\") }}</li>\n                            <li>{{ $translate(\"Ceres::Template.resetPwPasswordHintChar\") }}</li>\n                        </ul>\n                    </template>\n                </popper>\n\n                <label :for=\"_uid + 'password_first'\">{{ $translate(\"Ceres::Template.resetPwNewPassword\") }}*</label>\n            </div>\n        </div>\n\n        <div class=\"input-feedback-container\" data-validate=\"ref\">\n            <div class=\"input-unit\">\n                <input type=\"password\" name=\"password\" autocomplete=\"new-password\" :id=\"_uid + 'password_second'\" v-model=\"passwordSecond\" :data-validate-ref=\"'#' + _uid + 'password_first'\">\n                <label :for=\"_uid + 'password_second'\">{{ $translate(\"Ceres::Template.resetPwRepeatPassword\") }}*</label>\n            </div>\n        </div>\n\n        <button @click.prevent=\"validatePassword\" class=\"btn btn-primary btn-appearance btn-large float-right\" :disabled=\"isDisabled\">\n            <span>{{ $translate(\"Ceres::Template.resetPwSave\") }}</span>\n            <i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i>\n        </button>\n    </form>\n</template>\n\n<script>\nimport ValidationService from \"../../services/ValidationService\";\nimport { navigateTo } from \"../../services/UrlService\";\nimport { isNullOrUndefined } from \"../../helper/utils\";\nimport ApiService from \"../../services/ApiService\";\nimport NotificationService from \"../../services/NotificationService\";\n\nexport default {\n\n    name: \"reset-password-form\",\n\n    props: {\n        contactId:\n        {\n            type: Number,\n            required: true\n        },\n        hash:\n        {\n            type: String,\n            required: true\n        }\n    },\n\n    data()\n    {\n        return {\n            passwordFirst: \"\",\n            passwordSecond: \"\",\n            isDisabled: false\n        };\n    },\n\n    methods: {\n\n        validatePassword()\n        {\n\n            ValidationService.validate(this.$refs.resetPasswordForm)\n                .done(() =>\n                {\n                    this.saveNewPassword();\n                })\n                .fail(invalidFields =>\n                {\n                    ValidationService.markInvalidFields(invalidFields, \"has-error\");\n                    const validation = !isNullOrUndefined(invalidFields[0]) ? invalidFields[0].dataset.validate : null;\n\n                    if (validation === \"password\")\n                    {\n                        NotificationService.error(\n                            this.$translate(\"Ceres::Template.resetPwInvalidPassword\")\n                        );\n                    }\n                    else if (validation === \"ref\")\n                    {\n                        NotificationService.error(\n                            this.$translate(\"Ceres::Template.resetPwRepeatNewPassword\")\n                        );\n                    }\n                });\n        },\n\n        saveNewPassword()\n        {\n            this.isDisabled = true;\n\n            ApiService.post(\"/rest/io/customer/password\", { password: this.passwordFirst, password2: this.passwordSecond, contactId: this.contactId, hash: this.hash })\n                .done(() =>\n                {\n\n                    navigateTo(window.location.origin);\n\n                    NotificationService.success(\n                        this.$translate(\"Ceres::Template.resetPwChangePasswordSuccessful\")\n                    ).closeAfter(3000);\n\n                })\n                .fail(() =>\n                {\n                    this.isDisabled = false;\n\n                    NotificationService.error(\n                        this.$translate(\"Ceres::Template.resetPwChangePasswordFailed\")\n                    ).closeAfter(5000);\n                });\n        }\n    }\n\n}\n</script>\n\n<style>\n\n</style>","import { render, staticRenderFns } from \"./ResetPasswordForm.vue?vue&type=template&id=e000b036&\"\nimport script from \"./ResetPasswordForm.vue?vue&type=script&lang=js&\"\nexport * from \"./ResetPasswordForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","ref","staticClass","attrs","method","trigger","placement","scopedSlots","_u","key","fn","directives","name","rawName","value","passwordFirst","expression","type","autocomplete","id","_uid","domProps","on","input","$event","target","composing","proxy","_v","_s","$translate","for","passwordSecond","disabled","isDisabled","click","preventDefault","validatePassword","apply","arguments","_withStripped","props","contactId","Number","required","hash","String","data","methods","_this","ValidationService","$refs","resetPasswordForm","done","saveNewPassword","fail","invalidFields","validation","isNullOrUndefined","dataset","validate","NotificationService","_this2","ApiService","password","password2","navigateTo","window","location","origin","closeAfter"],"sourceRoot":""}