"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[37],{29811:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ ItemImageCarousel; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/ItemImageCarousel.vue?vue&type=template&id=d4884ff0&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", {\n    attrs: {\n      itemscope: "",\n      itemtype: "http://schema.org/Thing"\n    }\n  }, [[_c("div", {\n    ref: "single",\n    staticClass: "single-carousel owl-carousel owl-theme owl-single-item mt-0"\n  }, _vm._l(_vm.singleImages, function (image) {\n    return _c("div", {\n      staticClass: "prop-1-1"\n    }, [_c("a", {\n      attrs: {\n        href: image.url,\n        "data-lightbox": "single-item-image" + _vm._uid\n      }\n    }, [_c("img", {\n      staticClass: "owl-lazy",\n      attrs: {\n        "data-src": image.url,\n        alt: _vm.getAltText(image),\n        title: _vm.getImageName(image)\n      }\n    })])]);\n  }), 0), _vm._v(" "), _vm.showThumbs ? _c("div", {\n    ref: "thumbs",\n    staticClass: "owl-thumbs owl-carousel owl-theme owl-single-item",\n    attrs: {\n      id: "thumb-carousel"\n    }\n  }, _vm._l(_vm.carouselImages, function (imagePreview, index) {\n    return _c("div", {\n      staticClass: "prop-1-1"\n    }, [_c("div", {\n      staticClass: "image-container",\n      on: {\n        click: function click($event) {\n          return _vm.goTo(index);\n        }\n      }\n    }, [_c("lazy-img", {\n      class: {\n        active: _vm.currentItem === index\n      },\n      attrs: {\n        "picture-class": "owl-thumb border-appearance",\n        "image-url": imagePreview.url,\n        alt: _vm.getAltText(imagePreview),\n        title: _vm.getImageName(imagePreview)\n      }\n    })], 1)]);\n  }), 0) : _vm._e()], _vm._v(" "), !_vm.initialized ? _c("div", {\n    staticClass: "single-carousel owl-carousel owl-loaded owl-theme owl-single-item mt-0"\n  }, [_c("div", {\n    staticClass: "prop-1-1"\n  }, [_c("img", {\n    staticClass: "owl-placeholder",\n    attrs: {\n      src: _vm.singleImages[0].url,\n      alt: _vm.getAltText(_vm.singleImages[0].url),\n      title: _vm.getImageName(_vm.singleImages[0].url)\n    }\n  })])]) : _vm._e()], 2);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/ItemImageCarousel.vue?vue&type=template&id=d4884ff0&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js\nvar es_number_constructor = __webpack_require__(9653);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js\nvar es_array_slice = __webpack_require__(47042);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.find.js\nvar es_array_find = __webpack_require__(69826);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__(41539);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js\nvar es_function_name = __webpack_require__(68309);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.promise.js\nvar es_promise = __webpack_require__(88674);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(29413);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/ItemImageCarousel.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n\n/* harmony default export */ var ItemImageCarouselvue_type_script_lang_js_ = ({\n  name: "item-image-carousel",\n  props: {\n    maxQuantity: {\n      type: Number,\n      default: 10\n    },\n    imageUrlAccessor: {\n      type: String,\n      default: "url"\n    },\n    showThumbs: {\n      type: Boolean,\n      default: true\n    },\n    showDots: {\n      type: Boolean,\n      default: true\n    },\n    animationStyle: {\n      type: String,\n      default: "standard"\n    },\n    pluginPath: {\n      type: String,\n      default: ""\n    }\n  },\n  inject: {\n    itemId: {\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      currentItem: 0,\n      initialized: false\n    };\n  },\n  computed: {\n    currentVariation: function currentVariation() {\n      return this.$store.getters["".concat(this.itemId, "/currentItemVariation")];\n    },\n    carouselImages: function carouselImages() {\n      return this.$options.filters.itemImages(this.currentVariation.images, "urlPreview").slice(0, this.maxQuantity);\n    },\n    singleImages: function singleImages() {\n      return this.$options.filters.itemImages(this.currentVariation.images, this.imageUrlAccessor).slice(0, this.maxQuantity);\n    }\n  },\n  watch: {\n    currentVariation: {\n      handler: function handler(val, oldVal) {\n        var _this = this;\n        if (val !== oldVal) {\n          setTimeout(function () {\n            _this.reInitialize();\n          }, 1);\n        }\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    this.$nextTick(function () {\n      _this2.loadLightbox().then(function () {\n        _this2.initCarousel();\n        _this2.initThumbCarousel();\n      }).catch(function (event) {\n        console.log("error while loading lightbox", event);\n      });\n    });\n  },\n  methods: {\n    getImageCount: function getImageCount() {\n      return this.carouselImages.length > this.maxQuantity ? this.maxQuantity : this.carouselImages.length;\n    },\n    reInitialize: function reInitialize() {\n      var $owl = $(this.$refs.single);\n      $owl.trigger("destroy.owl.carousel");\n      $owl.html($owl.find(".owl-stage-outer").html()).removeClass("owl-loaded");\n      $owl.find(".owl-item").remove();\n      var $thumbs = $(this.$refs.thumbs);\n      $thumbs.trigger("destroy.owl.carousel");\n      $thumbs.html($thumbs.find(".owl-stage-outer").html()).removeClass("owl-loaded");\n      $thumbs.find(".owl-item").remove();\n      this.initCarousel();\n      this.initThumbCarousel();\n    },\n    initCarousel: function initCarousel() {\n      var _this3 = this;\n      var imageCount = this.getImageCount();\n      var carouselSettings = {\n        autoHeight: true,\n        dots: this.showDots,\n        items: 1,\n        lazyLoad: true,\n        rewind: true,\n        margin: 10,\n        mouseDrag: imageCount > 1,\n        nav: imageCount > 1,\n        navClass: ["owl-single-item-nav left carousel-control", "owl-single-item-nav right carousel-control"],\n        navContainerClass: "",\n        navText: ["<i class=\\"owl-single-item-control fa fa-chevron-left\\" aria-hidden=\\"true\\"></i>", "<i class=\\"owl-single-item-control fa fa-chevron-right\\" aria-hidden=\\"true\\"></i>"],\n        smartSpeed: 350,\n        onChanged: function onChanged(event) {\n          var $thumb = $(_this3.$refs.thumbs);\n          $thumb.trigger("to.owl.carousel", [event.page.index, 350]);\n        },\n        onInitialized: function onInitialized(event) {\n          _this3.initialized = true;\n        }\n      };\n      if (this.animationStyle !== "standard") {\n        carouselSettings.animateOut = this.animationStyle;\n      }\n      $(this.$refs.single).owlCarousel(carouselSettings);\n      if (!(0,utils/* isNullOrUndefined */.le)(window.lightbox)) {\n        lightbox.option({\n          wrapAround: true,\n          albumLabel: this.$translate("Ceres::Template.singleItemLightboxImageShown")\n        });\n      }\n      $(this.$refs.single).on("changed.owl.carousel", function (event) {\n        _this3.currentItem = event.page.index;\n      });\n    },\n    initThumbCarousel: function initThumbCarousel() {\n      $(this.$refs.thumbs).owlCarousel({\n        autoHeight: true,\n        dots: false,\n        items: 5,\n        lazyLoad: true,\n        loop: false,\n        margin: 10,\n        mouseDrag: false,\n        center: false,\n        nav: true,\n        navClass: ["owl-single-item-nav left carousel-control", "owl-single-item-nav right carousel-control"],\n        navContainerClass: "",\n        navText: ["<i class=\\"owl-single-item-control fa fa-chevron-left\\" aria-hidden=\\"true\\"></i>", "<i class=\\"owl-single-item-control fa fa-chevron-right\\" aria-hidden=\\"true\\"></i>"],\n        smartSpeed: 350\n      });\n    },\n    goTo: function goTo(index) {\n      var $owl = $(this.$refs.single);\n      $owl.trigger("to.owl.carousel", [index, 350]);\n    },\n    getAltText: function getAltText(image) {\n      return image && image.alternate ? image.alternate : this.$options.filters.itemName(this.currentVariation);\n    },\n    getImageName: function getImageName(image) {\n      return image && image.name ? image.name : this.$options.filters.itemName(this.currentVariation);\n    },\n    loadLightbox: function loadLightbox() {\n      var _this4 = this;\n      return new Promise(function (resolve, reject) {\n        var script = document.querySelector("script#lightboxscript");\n        if (!(0,utils/* isNullOrUndefined */.le)(script)) {\n          resolve();\n        } else {\n          var _script = document.createElement("script");\n          _script.type = "text/javascript";\n          _script.id = "lightboxscript";\n          _script.src = "".concat(_this4.pluginPath, "/js/dist/lightbox.min.js");\n          _script.addEventListener("load", function () {\n            return resolve();\n          }, false);\n          _script.addEventListener("error", function (event) {\n            return reject(event);\n          }, false);\n          document.body.appendChild(_script);\n        }\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/ItemImageCarousel.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_ItemImageCarouselvue_type_script_lang_js_ = (ItemImageCarouselvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(51900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/ItemImageCarousel.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  item_ItemImageCarouselvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var ItemImageCarousel = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///29811\n')}}]);