"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[22],{19606:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ PrivacySettings; }\n});\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js\nvar es_symbol = __webpack_require__(82526);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js\nvar es_symbol_description = __webpack_require__(41817);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/pageDesign/PrivacySettings.vue?vue&type=template&id=1548f8b8&\n\n\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", {\n    staticClass: "privacy-settings d-flex flex-column"\n  }, [_c("div", {\n    staticClass: "privacy-settings-body overflow-auto"\n  }, _vm._l(_vm.consentGroups, function (consentGroup, index) {\n    return _c("div", {\n      staticClass: "card consent-group",\n      class: {\n        cardClass: _vm.cardClass,\n        "mb-3": index < consentGroup.length - 1\n      },\n      style: _vm.cardStyle\n    }, [_c("div", {\n      staticClass: "card-body mb-0",\n      on: {\n        click: function click($event) {\n          $event.stopPropagation();\n          return _vm.toggleConsent(consentGroup.key + ".*");\n        }\n      }\n    }, [_c("p", {\n      staticClass: "card-title h4 d-flex"\n    }, [_c("span", {\n      staticClass: "flex-fill"\n    }, [consentGroup.label.length > 0 ? [_vm._v("\\n                            " + _vm._s(consentGroup.label) + "\\n                        ")] : [_vm._v("\\n                            " + _vm._s(_vm.$translate("Ceres::Template.privacySettingsDefaultGroup")) + "\\n                        ")], _vm._v("\\n                        (" + _vm._s(consentGroup.consents.length) + ")\\n                    ")], 2), _vm._v(" "), !consentGroup.necessary ? _c("span", {\n      staticClass: "custom-control custom-switch custom-control-appearance"\n    }, [_c("input", {\n      staticClass: "custom-control-input",\n      attrs: {\n        type: "checkbox"\n      },\n      domProps: {\n        checked: _vm.isConsented(consentGroup.key + ".*")\n      }\n    }), _vm._v(" "), _c("label", {\n      staticClass: "custom-control-label"\n    })]) : _c("span", {\n      staticClass: "badge badge-primary bg-appearance"\n    }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.privacySettingsNecessary")))])]), _vm._v(" "), consentGroup.description.length > 0 ? _c("p", {\n      staticClass: "card-text"\n    }, [_vm._v(_vm._s(consentGroup.description))]) : _vm._e()]), _vm._v(" "), _c("div", {\n      staticClass: "card-body mt-0"\n    }, [_vm.expandedGroups[consentGroup.key] ? _c("div", _vm._l(consentGroup.consents, function (consent) {\n      return _c("div", {\n        staticClass: "card consent bg-light mb-3",\n        class: {\n          "border-primary border-appearance active": _vm.isConsented(consentGroup.key + "." + consent.key) || consent.necessary || consentGroup.necessary\n        }\n      }, [_c("div", {\n        staticClass: "card-body",\n        on: {\n          click: function click($event) {\n            $event.stopPropagation();\n            return _vm.toggleConsent(consentGroup.key + "." + consent.key);\n          }\n        }\n      }, [_c("p", {\n        staticClass: "d-flex mb-0 font-weight-bold"\n      }, [_c("span", {\n        staticClass: "flex-fill"\n      }, [_vm._v(_vm._s(consent.label))]), _vm._v(" "), !consentGroup.necessary && !consent.necessary ? _c("span", {\n        staticClass: "custom-control custom-switch custom-control-appearance"\n      }, [_c("input", {\n        staticClass: "custom-control-input",\n        attrs: {\n          type: "checkbox"\n        },\n        domProps: {\n          checked: _vm.isConsented(consentGroup.key + "." + consent.key)\n        }\n      }), _vm._v(" "), _c("label", {\n        staticClass: "custom-control-label"\n      })]) : _vm._e()])]), _vm._v(" "), consent.provider.length > 0 || consent.description.length > 0 || consent.policyUrl.length > 0 || consent.lifespan.length > 0 ? _c("table", {\n        staticClass: "table table-responsive-md table-sm table-striped mb-0"\n      }, [_c("tbody", [consent.provider.length > 0 ? _c("tr", [_c("td", {\n        staticClass: "pl-3"\n      }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.privacySettingsProvider")))]), _vm._v(" "), _c("td", {\n        staticClass: "pr-3"\n      }, [_vm._v(_vm._s(consent.provider))])]) : _vm._e(), _vm._v(" "), consent.description.length > 0 ? _c("tr", [_c("td", {\n        staticClass: "pl-3"\n      }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.privacySettingsDescription")))]), _vm._v(" "), _c("td", {\n        staticClass: "pr-3"\n      }, [_vm._v(_vm._s(consent.description))])]) : _vm._e(), _vm._v(" "), consent.policyUrl.length > 0 ? _c("tr", [_c("td", {\n        staticClass: "pl-3"\n      }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.privacySettingsPolicyUrl")))]), _vm._v(" "), _c("td", {\n        staticClass: "pr-3"\n      }, [_c("a", {\n        staticClass: "text-primary text-appearance",\n        attrs: {\n          href: consent.policyUrl,\n          target: "_blank"\n        }\n      }, [_vm._v(_vm._s(consent.policyUrl))])])]) : _vm._e(), _vm._v(" "), consent.lifespan.length > 0 ? _c("tr", [_c("td", {\n        staticClass: "pl-3"\n      }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.privacySettingsLifespan")))]), _vm._v(" "), _c("td", {\n        staticClass: "pr-3"\n      }, [_vm._v(_vm._s(consent.lifespan))])]) : _vm._e()])]) : _vm._e()]);\n    }), 0) : _vm._e(), _vm._v(" "), !_vm.expandedGroups[consentGroup.key] ? _c("a", {\n      staticClass: "card-link text-primary text-appearance",\n      attrs: {\n        href: "#",\n        "data-testing": "privacy-settings-show-more-information"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.setGroupVisibility(consentGroup.key, true, $event);\n        }\n      }\n    }, [_vm._v("\\n                    " + _vm._s(_vm.$translate("Ceres::Template.privacySettingsMoreInformation")) + "\\n                ")]) : _c("a", {\n      staticClass: "card-link text-primary text-appearance",\n      attrs: {\n        href: "#",\n        "data-testing": "privacy-settings-hide-more-information"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.setGroupVisibility(consentGroup.key, false, $event);\n        }\n      }\n    }, [_vm._v("\\n                    " + _vm._s(_vm.$translate("Ceres::Template.privacySettingsLessInformation")) + "\\n                ")])])]);\n  }), 0)]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/pageDesign/PrivacySettings.vue?vue&type=template&id=1548f8b8&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.to-primitive.js\nvar es_symbol_to_primitive = __webpack_require__(96649);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-primitive.js\nvar es_date_to_primitive = __webpack_require__(96078);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__(41539);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js\nvar es_number_constructor = __webpack_require__(9653);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-property.js\nvar es_object_define_property = __webpack_require__(69070);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js\nvar es_object_keys = __webpack_require__(47941);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js\nvar es_array_filter = __webpack_require__(57327);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js\nvar es_object_get_own_property_descriptor = __webpack_require__(38880);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js\nvar web_dom_collections_for_each = __webpack_require__(54747);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js\nvar es_object_get_own_property_descriptors = __webpack_require__(49337);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.define-properties.js\nvar es_object_define_properties = __webpack_require__(33321);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js\nvar es_symbol_iterator = __webpack_require__(32165);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js\nvar es_array_iterator = __webpack_require__(66992);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js\nvar es_string_iterator = __webpack_require__(78783);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js\nvar web_dom_collections_iterator = __webpack_require__(33948);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(20629);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/pageDesign/PrivacySettings.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\n/* harmony default export */ var PrivacySettingsvue_type_script_lang_js_ = ({\n  props: {\n    consentGroups: {\n      type: Object\n    },\n    cardClass: {\n      type: String\n    },\n    cardStyle: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      expandedGroups: {}\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, (0,vuex_esm/* mapMutations */.OI)(["toggleConsent"])), {}, {\n    isConsented: function isConsented(key, defaultValue) {\n      return this.$store.getters.isConsented(key, defaultValue);\n    },\n    setGroupVisibility: function setGroupVisibility(groupKey, value, event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.$set(this.expandedGroups, groupKey, value);\n    }\n  })\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/pageDesign/PrivacySettings.vue?vue&type=script&lang=js&\n /* harmony default export */ var pageDesign_PrivacySettingsvue_type_script_lang_js_ = (PrivacySettingsvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(51900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/pageDesign/PrivacySettings.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  pageDesign_PrivacySettingsvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var PrivacySettings = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QztBQUNELElBQUlrQixlQUFlLEdBQUcsRUFBRTtBQUN4QnpDLE1BQU0sQ0FBQzBDLGFBQWEsR0FBRyxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUU5UVM7QUFFcEMsNEVBQWU7RUFDZkM7SUFDQXJDO01BQ0FxQjtJQUNBO0lBQ0FqQjtNQUNBaUI7SUFDQTtJQUNBZDtNQUNBYztJQUNBO0VBQ0E7RUFFQWlCLHNCQUNBO0lBQ0E7TUFDQVg7SUFDQTtFQUNBO0VBRUFZLHlDQUVBQyxpQ0FBQUEsRUFDQSxnQkFDQTtJQUVBaEIscURBQ0E7TUFDQTtJQUNBO0lBRUFVLHdFQUNBO01BQ0FPO01BQ0FBO01BQ0E7SUFDQTtFQUFBO0FBRUEsQ0FBQyxFOztBQ2pJMk4sQ0FBQyx1RkFBZSx1Q0FBRyxFQUFDLEM7Ozs7QUNBbEo7QUFDM0I7QUFDTDs7O0FBRzlEO0FBQ0EsQ0FBc0c7QUFDdEcsZ0JBQWdCLHNDQUFVO0FBQzFCLEVBQUUsa0RBQU07QUFDUixFQUFFLE1BQU07QUFDUixFQUFFLGVBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9EQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ2VyZXMvLi9yZXNvdXJjZXMvanMvc3JjL2FwcC9jb21wb25lbnRzL3BhZ2VEZXNpZ24vUHJpdmFjeVNldHRpbmdzLnZ1ZT82ZGM1Iiwid2VicGFjazovL0NlcmVzLy4vcmVzb3VyY2VzL2pzL3NyYy9hcHAvY29tcG9uZW50cy9wYWdlRGVzaWduL1ByaXZhY3lTZXR0aW5ncy52dWU/ZjMyYSIsIndlYnBhY2s6Ly9DZXJlcy9yZXNvdXJjZXMvanMvc3JjL2FwcC9jb21wb25lbnRzL3BhZ2VEZXNpZ24vUHJpdmFjeVNldHRpbmdzLnZ1ZT83OWM3Iiwid2VicGFjazovL0NlcmVzLy4vcmVzb3VyY2VzL2pzL3NyYy9hcHAvY29tcG9uZW50cy9wYWdlRGVzaWduL1ByaXZhY3lTZXR0aW5ncy52dWU/NmQ0NSIsIndlYnBhY2s6Ly9DZXJlcy8uL3Jlc291cmNlcy9qcy9zcmMvYXBwL2NvbXBvbmVudHMvcGFnZURlc2lnbi9Qcml2YWN5U2V0dGluZ3MudnVlPzgzMDgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgdmFyIF92bSA9IHRoaXMsXG4gICAgX2MgPSBfdm0uX3NlbGYuX2NcbiAgcmV0dXJuIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwicHJpdmFjeS1zZXR0aW5ncyBkLWZsZXggZmxleC1jb2x1bW5cIiB9LCBbXG4gICAgX2MoXG4gICAgICBcImRpdlwiLFxuICAgICAgeyBzdGF0aWNDbGFzczogXCJwcml2YWN5LXNldHRpbmdzLWJvZHkgb3ZlcmZsb3ctYXV0b1wiIH0sXG4gICAgICBfdm0uX2woX3ZtLmNvbnNlbnRHcm91cHMsIGZ1bmN0aW9uIChjb25zZW50R3JvdXAsIGluZGV4KSB7XG4gICAgICAgIHJldHVybiBfYyhcbiAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImNhcmQgY29uc2VudC1ncm91cFwiLFxuICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgY2FyZENsYXNzOiBfdm0uY2FyZENsYXNzLFxuICAgICAgICAgICAgICBcIm1iLTNcIjogaW5kZXggPCBjb25zZW50R3JvdXAubGVuZ3RoIC0gMSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdHlsZTogX3ZtLmNhcmRTdHlsZSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiY2FyZC1ib2R5IG1iLTBcIixcbiAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0udG9nZ2xlQ29uc2VudChjb25zZW50R3JvdXAua2V5ICsgXCIuKlwiKVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgX2MoXCJwXCIsIHsgc3RhdGljQ2xhc3M6IFwiY2FyZC10aXRsZSBoNCBkLWZsZXhcIiB9LCBbXG4gICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJzcGFuXCIsXG4gICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZmxleC1maWxsXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnNlbnRHcm91cC5sYWJlbC5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICAgICAgICA/IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhjb25zZW50R3JvdXAubGFiZWwpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIDogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kdHJhbnNsYXRlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJDZXJlczo6VGVtcGxhdGUucHJpdmFjeVNldHRpbmdzRGVmYXVsdEdyb3VwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgIChcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhjb25zZW50R3JvdXAuY29uc2VudHMubGVuZ3RoKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwiKVxcbiAgICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAyXG4gICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICFjb25zZW50R3JvdXAubmVjZXNzYXJ5XG4gICAgICAgICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcInNwYW5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjdXN0b20tY29udHJvbCBjdXN0b20tc3dpdGNoIGN1c3RvbS1jb250cm9sLWFwcGVhcmFuY2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImN1c3RvbS1jb250cm9sLWlucHV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogXCJjaGVja2JveFwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ6IF92bS5pc0NvbnNlbnRlZChjb25zZW50R3JvdXAua2V5ICsgXCIuKlwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJsYWJlbFwiLCB7IHN0YXRpY0NsYXNzOiBcImN1c3RvbS1jb250cm9sLWxhYmVsXCIgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICA6IF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJzcGFuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImJhZGdlIGJhZGdlLXByaW1hcnkgYmctYXBwZWFyYW5jZVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHRyYW5zbGF0ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJDZXJlczo6VGVtcGxhdGUucHJpdmFjeVNldHRpbmdzTmVjZXNzYXJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgIGNvbnNlbnRHcm91cC5kZXNjcmlwdGlvbi5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICA/IF9jKFwicFwiLCB7IHN0YXRpY0NsYXNzOiBcImNhcmQtdGV4dFwiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKGNvbnNlbnRHcm91cC5kZXNjcmlwdGlvbikpLFxuICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImNhcmQtYm9keSBtdC0wXCIgfSwgW1xuICAgICAgICAgICAgICBfdm0uZXhwYW5kZWRHcm91cHNbY29uc2VudEdyb3VwLmtleV1cbiAgICAgICAgICAgICAgICA/IF9jKFxuICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICBfdm0uX2woY29uc2VudEdyb3VwLmNvbnNlbnRzLCBmdW5jdGlvbiAoY29uc2VudCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImNhcmQgY29uc2VudCBiZy1saWdodCBtYi0zXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJib3JkZXItcHJpbWFyeSBib3JkZXItYXBwZWFyYW5jZSBhY3RpdmVcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5pc0NvbnNlbnRlZChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc2VudEdyb3VwLmtleSArIFwiLlwiICsgY29uc2VudC5rZXlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNlbnQubmVjZXNzYXJ5IHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zZW50R3JvdXAubmVjZXNzYXJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJjYXJkLWJvZHlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS50b2dnbGVDb25zZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc2VudEdyb3VwLmtleSArIFwiLlwiICsgY29uc2VudC5rZXlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImQtZmxleCBtYi0wIGZvbnQtd2VpZ2h0LWJvbGRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJzcGFuXCIsIHsgc3RhdGljQ2xhc3M6IFwiZmxleC1maWxsXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhjb25zZW50LmxhYmVsKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhY29uc2VudEdyb3VwLm5lY2Vzc2FyeSAmJiAhY29uc2VudC5uZWNlc3NhcnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzcGFuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiY3VzdG9tLWNvbnRyb2wgY3VzdG9tLXN3aXRjaCBjdXN0b20tY29udHJvbC1hcHBlYXJhbmNlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiY3VzdG9tLWNvbnRyb2wtaW5wdXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogXCJjaGVja2JveFwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZDogX3ZtLmlzQ29uc2VudGVkKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc2VudEdyb3VwLmtleSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiLlwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc2VudC5rZXlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJsYWJlbFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImN1c3RvbS1jb250cm9sLWxhYmVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zZW50LnByb3ZpZGVyLmxlbmd0aCA+IDAgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc2VudC5kZXNjcmlwdGlvbi5sZW5ndGggPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNlbnQucG9saWN5VXJsLmxlbmd0aCA+IDAgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc2VudC5saWZlc3Bhbi5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ0YWJsZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRhYmxlIHRhYmxlLXJlc3BvbnNpdmUtbWQgdGFibGUtc20gdGFibGUtc3RyaXBlZCBtYi0wXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInRib2R5XCIsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNlbnQucHJvdmlkZXIubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwidHJcIiwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJ0ZFwiLCB7IHN0YXRpY0NsYXNzOiBcInBsLTNcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHRyYW5zbGF0ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJDZXJlczo6VGVtcGxhdGUucHJpdmFjeVNldHRpbmdzUHJvdmlkZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwidGRcIiwgeyBzdGF0aWNDbGFzczogXCJwci0zXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKGNvbnNlbnQucHJvdmlkZXIpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc2VudC5kZXNjcmlwdGlvbi5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoXCJ0clwiLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInRkXCIsIHsgc3RhdGljQ2xhc3M6IFwicGwtM1wiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kdHJhbnNsYXRlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkNlcmVzOjpUZW1wbGF0ZS5wcml2YWN5U2V0dGluZ3NEZXNjcmlwdGlvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJ0ZFwiLCB7IHN0YXRpY0NsYXNzOiBcInByLTNcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoY29uc2VudC5kZXNjcmlwdGlvbikpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zZW50LnBvbGljeVVybC5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoXCJ0clwiLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInRkXCIsIHsgc3RhdGljQ2xhc3M6IFwicGwtM1wiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kdHJhbnNsYXRlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkNlcmVzOjpUZW1wbGF0ZS5wcml2YWN5U2V0dGluZ3NQb2xpY3lVcmxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwidGRcIiwgeyBzdGF0aWNDbGFzczogXCJwci0zXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ0ZXh0LXByaW1hcnkgdGV4dC1hcHBlYXJhbmNlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmOiBjb25zZW50LnBvbGljeVVybCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKGNvbnNlbnQucG9saWN5VXJsKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNlbnQubGlmZXNwYW4ubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwidHJcIiwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJ0ZFwiLCB7IHN0YXRpY0NsYXNzOiBcInBsLTNcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHRyYW5zbGF0ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJDZXJlczo6VGVtcGxhdGUucHJpdmFjeVNldHRpbmdzTGlmZXNwYW5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwidGRcIiwgeyBzdGF0aWNDbGFzczogXCJwci0zXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKGNvbnNlbnQubGlmZXNwYW4pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIDBcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAhX3ZtLmV4cGFuZGVkR3JvdXBzW2NvbnNlbnRHcm91cC5rZXldXG4gICAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJhXCIsXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJjYXJkLWxpbmsgdGV4dC1wcmltYXJ5IHRleHQtYXBwZWFyYW5jZVwiLFxuICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBocmVmOiBcIiNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZGF0YS10ZXN0aW5nXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJpdmFjeS1zZXR0aW5ncy1zaG93LW1vcmUtaW5mb3JtYXRpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNldEdyb3VwVmlzaWJpbGl0eShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zZW50R3JvdXAua2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgICBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHRyYW5zbGF0ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiQ2VyZXM6OlRlbXBsYXRlLnByaXZhY3lTZXR0aW5nc01vcmVJbmZvcm1hdGlvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICApICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgOiBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJhXCIsXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJjYXJkLWxpbmsgdGV4dC1wcmltYXJ5IHRleHQtYXBwZWFyYW5jZVwiLFxuICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBocmVmOiBcIiNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZGF0YS10ZXN0aW5nXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJpdmFjeS1zZXR0aW5ncy1oaWRlLW1vcmUtaW5mb3JtYXRpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNldEdyb3VwVmlzaWJpbGl0eShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zZW50R3JvdXAua2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiR0cmFuc2xhdGUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkNlcmVzOjpUZW1wbGF0ZS5wcml2YWN5U2V0dGluZ3NMZXNzSW5mb3JtYXRpb25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgIF1cbiAgICAgICAgKVxuICAgICAgfSksXG4gICAgICAwXG4gICAgKSxcbiAgXSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC0yLnVzZSEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/cnVsZVNldFsxXS5ydWxlc1syXSEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1ByaXZhY3lTZXR0aW5ncy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MTU0OGY4YjgmXCIiLCI8dGVtcGxhdGU+XG4gICAgPGRpdiBjbGFzcz1cInByaXZhY3ktc2V0dGluZ3MgZC1mbGV4IGZsZXgtY29sdW1uXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJwcml2YWN5LXNldHRpbmdzLWJvZHkgb3ZlcmZsb3ctYXV0b1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQgY29uc2VudC1ncm91cFwiIDpjbGFzcz1cIntjYXJkQ2xhc3MsICdtYi0zJzogaW5kZXggPCBjb25zZW50R3JvdXAubGVuZ3RoIC0gMX1cIiA6c3R5bGU9XCJjYXJkU3R5bGVcIiB2LWZvcj1cIihjb25zZW50R3JvdXAsIGluZGV4KSBpbiBjb25zZW50R3JvdXBzXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keSBtYi0wXCIgQGNsaWNrLnN0b3A9XCJ0b2dnbGVDb25zZW50KGNvbnNlbnRHcm91cC5rZXkgKyAnLionKVwiPlxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNhcmQtdGl0bGUgaDQgZC1mbGV4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZsZXgtZmlsbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwiY29uc2VudEdyb3VwLmxhYmVsLmxlbmd0aCA+IDBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgY29uc2VudEdyb3VwLmxhYmVsIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyAkdHJhbnNsYXRlKFwiQ2VyZXM6OlRlbXBsYXRlLnByaXZhY3lTZXR0aW5nc0RlZmF1bHRHcm91cFwiKSB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHt7IGNvbnNlbnRHcm91cC5jb25zZW50cy5sZW5ndGggfX0pXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImN1c3RvbS1jb250cm9sIGN1c3RvbS1zd2l0Y2ggY3VzdG9tLWNvbnRyb2wtYXBwZWFyYW5jZVwiIHYtaWY9XCIhY29uc2VudEdyb3VwLm5lY2Vzc2FyeVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wtaW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmNoZWNrZWQ9XCJpc0NvbnNlbnRlZChjb25zZW50R3JvdXAua2V5ICsgJy4qJylcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wtbGFiZWxcIj48L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJiYWRnZSBiYWRnZS1wcmltYXJ5IGJnLWFwcGVhcmFuY2VcIiB2LWVsc2U+e3sgJHRyYW5zbGF0ZShcIkNlcmVzOjpUZW1wbGF0ZS5wcml2YWN5U2V0dGluZ3NOZWNlc3NhcnlcIikgfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJjYXJkLXRleHRcIiB2LWlmPVwiY29uc2VudEdyb3VwLmRlc2NyaXB0aW9uLmxlbmd0aCA+IDBcIj57eyBjb25zZW50R3JvdXAuZGVzY3JpcHRpb24gfX08L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keSBtdC0wXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj1cImV4cGFuZGVkR3JvdXBzW2NvbnNlbnRHcm91cC5rZXldXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtZm9yPVwiY29uc2VudCBpbiBjb25zZW50R3JvdXAuY29uc2VudHNcIiBjbGFzcz1cImNhcmQgY29uc2VudCBiZy1saWdodCBtYi0zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmNsYXNzPVwieydib3JkZXItcHJpbWFyeSBib3JkZXItYXBwZWFyYW5jZSBhY3RpdmUnOiBpc0NvbnNlbnRlZChjb25zZW50R3JvdXAua2V5ICsgJy4nICsgY29uc2VudC5rZXkpIHx8IGNvbnNlbnQubmVjZXNzYXJ5IHx8IGNvbnNlbnRHcm91cC5uZWNlc3Nhcnl9XCI+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ib2R5XCIgQGNsaWNrLnN0b3A9XCJ0b2dnbGVDb25zZW50KGNvbnNlbnRHcm91cC5rZXkgKyAnLicgKyBjb25zZW50LmtleSlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJkLWZsZXggbWItMCBmb250LXdlaWdodC1ib2xkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZsZXgtZmlsbFwiPnt7IGNvbnNlbnQubGFiZWwgfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPVwiIWNvbnNlbnRHcm91cC5uZWNlc3NhcnkgJiYgIWNvbnNlbnQubmVjZXNzYXJ5XCIgY2xhc3M9XCJjdXN0b20tY29udHJvbCBjdXN0b20tc3dpdGNoIGN1c3RvbS1jb250cm9sLWFwcGVhcmFuY2VcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wtaW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpjaGVja2VkPVwiaXNDb25zZW50ZWQoY29uc2VudEdyb3VwLmtleSArICcuJyArIGNvbnNlbnQua2V5KVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wtbGFiZWxcIj48L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIHYtaWY9XCJjb25zZW50LnByb3ZpZGVyLmxlbmd0aCA+IDAgfHwgY29uc2VudC5kZXNjcmlwdGlvbi5sZW5ndGggPiAwIHx8IGNvbnNlbnQucG9saWN5VXJsLmxlbmd0aCA+IDAgfHwgY29uc2VudC5saWZlc3Bhbi5sZW5ndGggPiAwXCIgY2xhc3M9XCJ0YWJsZSB0YWJsZS1yZXNwb25zaXZlLW1kIHRhYmxlLXNtIHRhYmxlLXN0cmlwZWQgbWItMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciB2LWlmPVwiY29uc2VudC5wcm92aWRlci5sZW5ndGggPiAwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJwbC0zXCI+e3sgJHRyYW5zbGF0ZShcIkNlcmVzOjpUZW1wbGF0ZS5wcml2YWN5U2V0dGluZ3NQcm92aWRlclwiKSB9fTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJwci0zXCI+e3sgY29uc2VudC5wcm92aWRlciB9fTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciB2LWlmPVwiY29uc2VudC5kZXNjcmlwdGlvbi5sZW5ndGggPiAwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJwbC0zXCI+e3sgJHRyYW5zbGF0ZShcIkNlcmVzOjpUZW1wbGF0ZS5wcml2YWN5U2V0dGluZ3NEZXNjcmlwdGlvblwiKSB9fTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJwci0zXCI+e3sgY29uc2VudC5kZXNjcmlwdGlvbiB9fTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciB2LWlmPVwiY29uc2VudC5wb2xpY3lVcmwubGVuZ3RoID4gMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwicGwtM1wiPnt7ICR0cmFuc2xhdGUoXCJDZXJlczo6VGVtcGxhdGUucHJpdmFjeVNldHRpbmdzUG9saWN5VXJsXCIpIH19PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInByLTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInRleHQtcHJpbWFyeSB0ZXh0LWFwcGVhcmFuY2VcIiA6aHJlZj1cImNvbnNlbnQucG9saWN5VXJsXCIgdGFyZ2V0PVwiX2JsYW5rXCI+e3sgY29uc2VudC5wb2xpY3lVcmwgfX08L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgdi1pZj1cImNvbnNlbnQubGlmZXNwYW4ubGVuZ3RoID4gMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwicGwtM1wiPnt7ICR0cmFuc2xhdGUoXCJDZXJlczo6VGVtcGxhdGUucHJpdmFjeVNldHRpbmdzTGlmZXNwYW5cIikgfX08L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwicHItM1wiPnt7IGNvbnNlbnQubGlmZXNwYW4gfX08L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9XCIjXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY2FyZC1saW5rIHRleHQtcHJpbWFyeSB0ZXh0LWFwcGVhcmFuY2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPVwic2V0R3JvdXBWaXNpYmlsaXR5KGNvbnNlbnRHcm91cC5rZXksIHRydWUsICRldmVudClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdi1pZj1cIiFleHBhbmRlZEdyb3Vwc1tjb25zZW50R3JvdXAua2V5XVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRlc3Rpbmc9XCJwcml2YWN5LXNldHRpbmdzLXNob3ctbW9yZS1pbmZvcm1hdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge3sgJHRyYW5zbGF0ZShcIkNlcmVzOjpUZW1wbGF0ZS5wcml2YWN5U2V0dGluZ3NNb3JlSW5mb3JtYXRpb25cIikgfX1cbiAgICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj1cIiNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjYXJkLWxpbmsgdGV4dC1wcmltYXJ5IHRleHQtYXBwZWFyYW5jZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9XCJzZXRHcm91cFZpc2liaWxpdHkoY29uc2VudEdyb3VwLmtleSwgZmFsc2UsICRldmVudClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdi1lbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRlc3Rpbmc9XCJwcml2YWN5LXNldHRpbmdzLWhpZGUtbW9yZS1pbmZvcm1hdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge3sgJHRyYW5zbGF0ZShcIkNlcmVzOjpUZW1wbGF0ZS5wcml2YWN5U2V0dGluZ3NMZXNzSW5mb3JtYXRpb25cIikgfX1cbiAgICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCB7IG1hcE11dGF0aW9ucyB9IGZyb20gXCJ2dWV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBwcm9wczoge1xuICAgICAgICBjb25zZW50R3JvdXBzOiB7XG4gICAgICAgICAgICB0eXBlOiBPYmplY3RcbiAgICAgICAgfSxcbiAgICAgICAgY2FyZENsYXNzOiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmdcbiAgICAgICAgfSxcbiAgICAgICAgY2FyZFN0eWxlOiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmdcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBkYXRhKClcbiAgICB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBleHBhbmRlZEdyb3Vwczoge31cbiAgICAgICAgfTtcbiAgICB9LFxuXG4gICAgbWV0aG9kczpcbiAgICB7XG4gICAgICAgIC4uLm1hcE11dGF0aW9ucyhbXG4gICAgICAgICAgICBcInRvZ2dsZUNvbnNlbnRcIlxuICAgICAgICBdKSxcblxuICAgICAgICBpc0NvbnNlbnRlZChrZXksIGRlZmF1bHRWYWx1ZSlcbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuaXNDb25zZW50ZWQoa2V5LCBkZWZhdWx0VmFsdWUpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNldEdyb3VwVmlzaWJpbGl0eShncm91cEtleSwgdmFsdWUsIGV2ZW50KVxuICAgICAgICB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICB0aGlzLiRzZXQodGhpcy5leHBhbmRlZEdyb3VwcywgZ3JvdXBLZXksIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbjwvc2NyaXB0PlxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC0yLnVzZSEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1ByaXZhY3lTZXR0aW5ncy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P2Nsb25lZFJ1bGVTZXQtMi51c2UhLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Qcml2YWN5U2V0dGluZ3MudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9Qcml2YWN5U2V0dGluZ3MudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTE1NDhmOGI4JlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL1ByaXZhY3lTZXR0aW5ncy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL1ByaXZhY3lTZXR0aW5ncy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJuYW1lcyI6WyJyZW5kZXIiLCJfdm0iLCJfYyIsIl9zZWxmIiwic3RhdGljQ2xhc3MiLCJfbCIsImNvbnNlbnRHcm91cHMiLCJjb25zZW50R3JvdXAiLCJpbmRleCIsImNsYXNzIiwiY2FyZENsYXNzIiwibGVuZ3RoIiwic3R5bGUiLCJjYXJkU3R5bGUiLCJvbiIsImNsaWNrIiwiJGV2ZW50Iiwic3RvcFByb3BhZ2F0aW9uIiwidG9nZ2xlQ29uc2VudCIsImtleSIsImxhYmVsIiwiX3YiLCJfcyIsIiR0cmFuc2xhdGUiLCJjb25zZW50cyIsIm5lY2Vzc2FyeSIsImF0dHJzIiwidHlwZSIsImRvbVByb3BzIiwiY2hlY2tlZCIsImlzQ29uc2VudGVkIiwiZGVzY3JpcHRpb24iLCJfZSIsImV4cGFuZGVkR3JvdXBzIiwiY29uc2VudCIsInByb3ZpZGVyIiwicG9saWN5VXJsIiwibGlmZXNwYW4iLCJocmVmIiwidGFyZ2V0Iiwic2V0R3JvdXBWaXNpYmlsaXR5Iiwic3RhdGljUmVuZGVyRm5zIiwiX3dpdGhTdHJpcHBlZCIsInByb3BzIiwiZGF0YSIsIm1ldGhvZHMiLCJtYXBNdXRhdGlvbnMiLCJldmVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19606\n')}}]);