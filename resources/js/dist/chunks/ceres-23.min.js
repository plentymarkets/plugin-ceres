"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[23],{19715:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ LastSeenItemList; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/containers/LastSeenItemList.vue?vue&type=template&id=1b1fe6f6&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", {\n    staticClass: "row"\n  }, [_c("div", {\n    directives: [{\n      name: "show",\n      rawName: "v-show",\n      value: _vm.mountedItems.length,\n      expression: "mountedItems.length"\n    }],\n    staticClass: "col-12"\n  }, [_vm._t("heading")], 2), _vm._v(" "), _c("div", {\n    staticClass: "col-12"\n  }, [_vm.mountedItems && _vm.mountedItems.length > 0 ? _c("carousel", {\n    ref: "carousel",\n    attrs: {\n      "items-per-page": _vm.itemsPerPage\n    }\n  }, [_vm._l(_vm.items, function (item) {\n    return _c("template", {\n      slot: "items"\n    }, [_c("category-item", {\n      key: item.id,\n      attrs: {\n        "item-data": item.data,\n        "decimal-count": _vm.$ceres.config.item.storeSpecial,\n        "disable-carousel-on-mobile": _vm.mountedItems.length > _vm.itemsPerPage,\n        "padding-classes": _vm.paddingClasses,\n        "padding-inline-styles": _vm.paddingInlineStyles\n      },\n      scopedSlots: _vm._u([{\n        key: "before-prices",\n        fn: function fn() {\n          return [_c("div", {\n            domProps: {\n              innerHTML: _vm._s(_vm.getContainerContentById(item.id, "beforePrices"))\n            }\n          })];\n        },\n        proxy: true\n      }, {\n        key: "after-prices",\n        fn: function fn() {\n          return [_c("div", {\n            domProps: {\n              innerHTML: _vm._s(_vm.getContainerContentById(item.id, "afterPrices"))\n            }\n          })];\n        },\n        proxy: true\n      }], null, true)\n    })], 1);\n  })], 2) : _vm._e()], 1)]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/containers/LastSeenItemList.vue?vue&type=template&id=1b1fe6f6&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js\nvar es_number_constructor = __webpack_require__(9653);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js\nvar es_array_slice = __webpack_require__(47042);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(29413);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(20629);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/containers/LastSeenItemList.vue?vue&type=script&lang=js&\n\n\n\n\n/* harmony default export */ var LastSeenItemListvue_type_script_lang_js_ = ({\n  props: {\n    itemsPerPage: {\n      type: Number,\n      default: 4\n    },\n    maxItems: {\n      type: Number,\n      default: 4\n    },\n    paddingClasses: {\n      type: String,\n      default: null\n    },\n    paddingInlineStyles: {\n      type: String,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      mountedItems: [],\n      isMounted: false\n    };\n  },\n  computed: (0,vuex_esm/* mapState */.rn)({\n    items: function items(state) {\n      return state.lastSeen.lastSeenItems.slice(0, this.maxItems);\n    },\n    containers: function containers(state) {\n      return state.lastSeen.containers;\n    }\n  }),\n  beforeMount: function beforeMount() {\n    this.$store.dispatch("getLastSeenItems");\n  },\n  mounted: function mounted() {\n    this.mountedItems = this.items;\n    this.isMounted = true;\n  },\n  watch: {\n    items: function items() {\n      if (this.isMounted) {\n        this.mountedItems = this.items;\n      }\n    }\n  },\n  methods: {\n    getContainerContentById: function getContainerContentById(variationId, containerKey) {\n      var containersById = this.containers[variationId];\n      if ((0,utils/* isDefined */.$K)(containersById)) {\n        var container = containersById[containerKey];\n        if ((0,utils/* isDefined */.$K)(container)) {\n          return container;\n        }\n      }\n      return "";\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/containers/LastSeenItemList.vue?vue&type=script&lang=js&\n /* harmony default export */ var containers_LastSeenItemListvue_type_script_lang_js_ = (LastSeenItemListvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(51900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/containers/LastSeenItemList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  containers_LastSeenItemListvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var LastSeenItemList = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///19715\n')}}]);