{"version":3,"file":"chunks/ceres-9.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEoD;AAEpD,IAAMC,IAAI,GAAG,CAAC,CAAC;AAEf,IAAI,OAAOC,QAAQ,KAAK,WAAW,EACnC;EACIA,QAAQ,CAACC,mBAAmB,GAAGF,IAAI;AACvC;AAEO,IAAMG,gBAAgB,GAAG;EAC5BC,OAAO,WAAAA,QAAA,EACP;IAAA,IAAAC,YAAA;IACI;IACA,IAAI,CAAC,IAAI,CAACC,QAAQ,CAACC,aAAa,IAAI,GAAAF,YAAA,GAAC,IAAI,CAACG,MAAM,cAAAH,YAAA,eAAXA,YAAA,CAAaI,GAAG,GACrD;MACI;IACJ;IAEA,IAAI,CAACC,IAAI,GAAG,EAAE;IAEd,IAAIC,IAAI,GAAG,IAAI;IAEf,IAAIC,QAAQ,GAAG,IAAI;IAEnB,OAAO,CAACb,iEAAiB,CAACY,IAAI,CAAC,EAC/B;MACI,IAAI,CAACZ,iEAAiB,CAACa,QAAQ,CAAC,EAChC;QACI,IAAIC,WAAW,CAACF,IAAI,CAACG,SAAS,EAAEF,QAAQ,CAAC,EACzC;UACI,IAAMG,cAAc,GAAGC,oBAAoB,CAACL,IAAI,CAACG,SAAS,EAAEF,QAAQ,CAAC;UAErE,IAAI,CAACF,IAAI,IAAIK,cAAc;QAC/B;MACJ;MAEA,IAAI,CAACL,IAAI,IAAI,GAAG;MAEhB,IAAIC,IAAI,CAACL,QAAQ,CAACC,aAAa,EAC/B;QACI,IAAI,CAACG,IAAI,IAAIC,IAAI,CAACL,QAAQ,CAACC,aAAa;MAC5C;MAEAK,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAGA,IAAI,CAACM,OAAO;IACvB;IAEA,IAAI,CAACjB,IAAI,CAAC,IAAI,CAACU,IAAI,CAAC,EACpB;MACIV,IAAI,CAAC,IAAI,CAACU,IAAI,CAAC,GAAG,CAAC;IACvB;IAEAV,IAAI,CAAC,IAAI,CAACU,IAAI,CAAC,EAAE;EACrB;AACJ,CAAC;AAED,SAASG,WAAWA,CAACK,iBAAiB,EAAEP,IAAI,EAC5C;EAAA,IAAAQ,SAAA,GAAAC,0BAAA,CACmCF,iBAAiB;IAAAG,KAAA;EAAA;IAAhD,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GACA;MAAA,IADWC,gBAAgB,GAAAJ,KAAA,CAAAK,KAAA;MAEvB,IAAID,gBAAgB,CAACnB,QAAQ,CAACC,aAAa,KAAKI,IAAI,CAACL,QAAQ,CAACC,aAAa,IAAIkB,gBAAgB,KAAKd,IAAI,EACxG;QACI,OAAO,IAAI;MACf;IACJ;EAAC,SAAAgB,GAAA;IAAAR,SAAA,CAAAS,CAAA,CAAAD,GAAA;EAAA;IAAAR,SAAA,CAAAU,CAAA;EAAA;EAED,OAAO,KAAK;AAChB;AAEA,SAASb,oBAAoBA,CAACE,iBAAiB,EAAEP,IAAI,EACrD;EACI,IAAMmB,QAAQ,GAAGZ,iBAAiB,CAACa,MAAM,CAAC,UAAAN,gBAAgB;IAAA,OAAIA,gBAAgB,CAACnB,QAAQ,CAACC,aAAa,KAAKI,IAAI,CAACL,QAAQ,CAACC,aAAa;EAAA,EAAC;EAEtI,OAAOuB,QAAQ,CAACE,OAAO,CAACrB,IAAI,CAAC;AACjC","sources":["webpack://Ceres/./resources/js/src/app/mixins/componentId.mixin.js"],"sourcesContent":["/**\n * Mixing for generating unique keys, that can be similarly created on server and clientside.\n * Collisions are possible in theory, be advised that this is an experimental mixin and may be removed in the future.\n */\n\nimport { isNullOrUndefined } from \"../helper/utils\";\n\nconst KEYS = {};\n\nif (typeof document !== \"undefined\")\n{\n    document.debug_component_ids = KEYS;\n}\n\nexport const ComponentIdMixin = {\n    created()\n    {\n        // Root elements, early exit\n        if (!this.$options._componentTag && !this.$vnode?.tag)\n        {\n            return;\n        }\n\n        this._cid = \"\";\n\n        let node = this;\n\n        let prevNode = null;\n\n        while (!isNullOrUndefined(node))\n        {\n            if (!isNullOrUndefined(prevNode))\n            {\n                if (hasSiblings(node.$children, prevNode))\n                {\n                    const occurenceIndex = getOwnOccurenceIndex(node.$children, prevNode);\n\n                    this._cid += occurenceIndex;\n                }\n            }\n\n            this._cid += \"_\";\n\n            if (node.$options._componentTag)\n            {\n                this._cid += node.$options._componentTag;\n            }\n\n            prevNode = node;\n            node = node.$parent;\n        }\n\n        if (!KEYS[this._cid])\n        {\n            KEYS[this._cid] = 0;\n        }\n\n        KEYS[this._cid]++;\n    }\n};\n\nfunction hasSiblings(potentialSiblings, node)\n{\n    for (const potentialSibling of potentialSiblings)\n    {\n        if (potentialSibling.$options._componentTag === node.$options._componentTag && potentialSibling !== node)\n        {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getOwnOccurenceIndex(potentialSiblings, node)\n{\n    const siblings = potentialSiblings.filter(potentialSibling => potentialSibling.$options._componentTag === node.$options._componentTag);\n\n    return siblings.indexOf(node);\n}\n"],"names":["isNullOrUndefined","KEYS","document","debug_component_ids","ComponentIdMixin","created","_this$$vnode","$options","_componentTag","$vnode","tag","_cid","node","prevNode","hasSiblings","$children","occurenceIndex","getOwnOccurenceIndex","$parent","potentialSiblings","_iterator","_createForOfIteratorHelper","_step","s","n","done","potentialSibling","value","err","e","f","siblings","filter","indexOf"],"sourceRoot":""}