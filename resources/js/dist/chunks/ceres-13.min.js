"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[13],{7979:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ ChangeEmailForm; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/customer/ChangeEmailForm.vue?vue&type=template&id=fdb708ce&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("form", {\n    staticClass: "clearfix",\n    attrs: {\n      method: "post"\n    },\n    on: {\n      submit: function submit($event) {\n        $event.preventDefault();\n        return _vm.submit();\n      }\n    }\n  }, [_c("div", {\n    staticClass: "input-unit mt-3"\n  }, [_c("label", {\n    staticClass: "disabled",\n    attrs: {\n      for: "new-mail" + _vm._uid\n    }\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.myAccountNewEmail")))]), _vm._v(" "), _c("input", {\n    staticClass: "form-control",\n    attrs: {\n      type: "email",\n      name: "email",\n      id: "new-mail" + _vm._uid,\n      disabled: ""\n    },\n    domProps: {\n      value: _vm.newMail\n    }\n  })]), _vm._v(" "), _c("div", {\n    staticClass: "input-unit"\n  }, [_c("label", {\n    attrs: {\n      for: "password" + _vm._uid\n    }\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.loginPassword")))]), _vm._v(" "), _c("input", {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.password,\n      expression: "password"\n    }],\n    staticClass: "form-control",\n    attrs: {\n      type: "password",\n      name: "password",\n      autocomplete: "current-password",\n      id: "password" + _vm._uid\n    },\n    domProps: {\n      value: _vm.password\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.password = $event.target.value;\n      }\n    }\n  })]), _vm._v(" "), _c("button", {\n    staticClass: "btn btn-primary btn-appearance float-right btn-medium btn-xs-max-width",\n    attrs: {\n      type: "submit",\n      disabled: _vm.isDisabled\n    }\n  }, [_c("span", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.myAccountChangeEmail")))]), _vm._v(" "), _c("icon", {\n    attrs: {\n      icon: "envelope",\n      loading: _vm.isDisabled\n    }\n  })], 1)]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/ChangeEmailForm.vue?vue&type=template&id=fdb708ce&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js\nvar es_number_constructor = __webpack_require__(9653);\n// EXTERNAL MODULE: ./resources/js/src/app/services/NotificationService.js\nvar NotificationService = __webpack_require__(41841);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ApiService.js\nvar ApiService = __webpack_require__(57653);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/customer/ChangeEmailForm.vue?vue&type=script&lang=js&\n\n\n\n/* harmony default export */ var ChangeEmailFormvue_type_script_lang_js_ = ({\n  props: {\n    contactId: {\n      type: Number,\n      required: true\n    },\n    hash: {\n      type: String,\n      required: true\n    },\n    newMail: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      password: "",\n      isDisabled: false\n    };\n  },\n  methods: {\n    /**\n     * Send the login data\n     */\n    submit: function submit() {\n      var _this = this;\n      this.isDisabled = true;\n      ApiService["default"].put("/rest/io/customer/mail/" + this.contactId, {\n        password: this.password,\n        hash: this.hash\n      }).done(function (response) {\n        NotificationService["default"].success(_this.$translate("Ceres::Template.myAccountChangeEmailSuccessful")).closeAfter(3000);\n        window.location.assign(window.location.origin);\n      }).fail(function () {\n        NotificationService["default"].error(_this.$translate("Ceres::Template.myAccountChangeEmailFailed")).closeAfter(10000);\n      }).always(function () {\n        _this.isDisabled = false;\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/ChangeEmailForm.vue?vue&type=script&lang=js&\n /* harmony default export */ var customer_ChangeEmailFormvue_type_script_lang_js_ = (ChangeEmailFormvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(51900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/ChangeEmailForm.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  customer_ChangeEmailFormvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var ChangeEmailForm = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7979\n')}}]);