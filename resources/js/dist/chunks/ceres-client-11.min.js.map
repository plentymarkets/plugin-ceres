{"version":3,"sources":["webpack:///./resources/js/src/app/mixins/buttonSizeProperty.mixin.js","webpack:///./resources/js/src/app/components/newsletter/NewsletterUnsubscribeInput.vue","webpack:///./resources/js/src/app/components/newsletter/NewsletterUnsubscribeInput.vue?a005","webpack:///resources/js/src/app/components/newsletter/NewsletterUnsubscribeInput.vue","webpack:///./resources/js/src/app/components/newsletter/NewsletterUnsubscribeInput.vue?d6a5"],"names":["BUTTON_SIZES","LEGACY_CLASS_MAP","ButtonSizePropertyMixin","props","buttonSize","type","String","default","validator","value","concat","_toConsumableArray","Object","keys","indexOf","computed","buttonSizeClass","hasOwnProperty","this","render","_vm","_c","_self","attrs","id","_uid","method","on","submit","$event","preventDefault","validateData","apply","arguments","staticClass","for","_v","_s","$translate","directives","name","rawName","email","expression","autocomplete","domProps","input","target","composing","honeypot","tabindex","class","disabled","isDisabled","click","icon","loading","_withStripped","mixins","data","methods","_this","ValidationService","validate","$","done","save","fail","invalidFields","markInvalidFields","_this2","urlParams","UrlService","getUrlParams","document","location","search","isUndefined","folderId","ApiService","del","NotificationService","success","closeAfter","resetInputs","error","always","component"],"mappings":"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","file":"chunks/ceres-client-11.min.js","sourcesContent":["const BUTTON_SIZES = [\"btn-sm\", \"btn-lg\"];\n\nconst LEGACY_CLASS_MAP = {\n    \"sm\": \"btn-sm\",\n    \"md\": \"\",\n    \"lg\": \"btn-lg\"\n};\n\nexport const ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    \"\",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      attrs: {\n        id: \"newsletter-unsubscribe-input-form_\" + _vm._uid,\n        method: \"post\",\n      },\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.validateData.apply(null, arguments)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\n            \"div\",\n            {\n              staticClass: \"input-unit mt-3\",\n              attrs: { \"data-validate\": \"mail\" },\n            },\n            [\n              _c(\"label\", { attrs: { for: \"email-input-id\" } }, [\n                _vm._v(\n                  _vm._s(_vm.$translate(\"Ceres::Template.newsletterEmail\"))\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.email,\n                    expression: \"email\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"email\",\n                  name: \"email\",\n                  autocomplete: \"email\",\n                  id: \"email-input-id\",\n                  \"data-testing\": \"unsub-nl-mail\",\n                },\n                domProps: { value: _vm.email },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.email = $event.target.value\n                  },\n                },\n              }),\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.honeypot,\n                expression: \"honeypot\",\n              },\n            ],\n            staticClass: \"honey\",\n            attrs: {\n              type: \"text\",\n              name: \"username\",\n              autocomplete: \"new-password\",\n              tabindex: \"-1\",\n            },\n            domProps: { value: _vm.honeypot },\n            on: {\n              input: function ($event) {\n                if ($event.target.composing) return\n                _vm.honeypot = $event.target.value\n              },\n            },\n          }),\n          _vm._v(\" \"),\n          _c(\"span\", { staticClass: \"input-group-btn\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass:\n                  \"btn btn-primary btn-appearance float-right btn-medium btn-xs-max-width\",\n                class: _vm.buttonSizeClass,\n                attrs: {\n                  type: \"submit\",\n                  disabled: _vm.isDisabled,\n                  \"data-testing\": \"unsub-nl-send\",\n                },\n                on: { click: _vm.validateData },\n              },\n              [\n                _c(\"icon\", {\n                  attrs: { icon: \"paper-plane-o\", loading: _vm.isDisabled },\n                }),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _vm._v(\n                    _vm._s(\n                      _vm.$translate(\n                        \"Ceres::Template.newsletterUnsubscribeButtonLabel\"\n                      )\n                    )\n                  ),\n                ]),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewsletterUnsubscribeInput.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewsletterUnsubscribeInput.vue?vue&type=script&lang=js\"","<template>\n    <form :id=\"'newsletter-unsubscribe-input-form_' + _uid\" method=\"post\" @submit.prevent=\"validateData\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"input-unit mt-3\" data-validate=\"mail\">\n                    <label for=\"email-input-id\">{{ $translate(\"Ceres::Template.newsletterEmail\") }}</label>\n                    <input type=\"email\" name=\"email\" autocomplete=\"email\" class=\"form-control\" id=\"email-input-id\" v-model=\"email\" data-testing=\"unsub-nl-mail\">\n                </div>\n\n                <input class=\"honey\" type=\"text\" name=\"username\" autocomplete=\"new-password\" tabindex=\"-1\" v-model=\"honeypot\">\n\n                <span class=\"input-group-btn\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-appearance float-right btn-medium btn-xs-max-width\" @click=\"validateData\" :disabled=\"isDisabled\" :class=\"buttonSizeClass\" data-testing=\"unsub-nl-send\">\n                        <icon icon=\"paper-plane-o\" :loading=\"isDisabled\"></icon>\n                        <span>{{ $translate(\"Ceres::Template.newsletterUnsubscribeButtonLabel\") }}</span>\n                    </button>\n                </span>\n            </div>\n        </div>\n    </form>\n</template>\n\n<script>\nimport ApiService from \"../../services/ApiService\";\nimport ValidationService from \"../../services/ValidationService\";\nimport NotificationService from \"../../services/NotificationService\";\nimport UrlService from \"../../services/UrlService\";\n\nimport { isUndefined } from \"../../helper/utils\";\nimport { ButtonSizePropertyMixin } from \"../../mixins/buttonSizeProperty.mixin\";\n\nexport default {\n\n    mixins: [ButtonSizePropertyMixin],\n\n    data()\n    {\n        return {\n            email: \"\",\n            isDisabled: false,\n            honeypot: \"\"\n        };\n    },\n\n    methods: {\n        validateData()\n        {\n            this.isDisabled = true;\n\n            ValidationService.validate($(\"#newsletter-unsubscribe-input-form_\" + this._uid))\n                .done(() =>\n                {\n                    this.save();\n                })\n                .fail(invalidFields =>\n                {\n                    ValidationService.markInvalidFields(invalidFields, \"error\");\n\n                    this.isDisabled = false;\n                });\n        },\n\n        save()\n        {\n            const urlParams = UrlService.getUrlParams(document.location.search);\n\n            if (isUndefined( urlParams.folderId ))\n            {\n                urlParams.folderId = 0;\n            }\n\n            ApiService.del(\"/rest/io/customer/newsletter/\" + this.email, { \"emailFolder\": urlParams.folderId, \"honeypot\": this.honeypot })\n                .done(() =>\n                {\n                    NotificationService.success(\n                        this.$translate(\"Ceres::Template.newsletterOptOutSuccessMessage\")\n                    ).closeAfter(3000);\n                    this.resetInputs();\n                })\n                .fail(() =>\n                {\n                    NotificationService.error(\n                        this.$translate(\"Ceres::Template.newsletterOptOutErrorMessage\")\n                    ).closeAfter(5000);\n                })\n                .always(() =>\n                {\n                    this.isDisabled = false;\n                });\n        },\n\n        resetInputs()\n        {\n            this.email = \"\";\n        }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./NewsletterUnsubscribeInput.vue?vue&type=template&id=35b98276\"\nimport script from \"./NewsletterUnsubscribeInput.vue?vue&type=script&lang=js\"\nexport * from \"./NewsletterUnsubscribeInput.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}