"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[49],{93188:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ ResetPasswordForm; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/customer/ResetPasswordForm.vue?vue&type=template&id=e000b036&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("form", {\n    ref: "resetPasswordForm",\n    staticClass: "w-100 clearfix",\n    attrs: {\n      method: "post"\n    }\n  }, [_c("div", {\n    staticClass: "input-feedback-container",\n    attrs: {\n      "data-validate": "password"\n    }\n  }, [_c("div", {\n    staticClass: "input-unit"\n  }, [_c("popper", {\n    ref: "passwordHint",\n    attrs: {\n      trigger: "focus",\n      placement: "bottom"\n    },\n    scopedSlots: _vm._u([{\n      key: "handle",\n      fn: function fn() {\n        return [_c("input", {\n          directives: [{\n            name: "model",\n            rawName: "v-model",\n            value: _vm.passwordFirst,\n            expression: "passwordFirst"\n          }],\n          attrs: {\n            type: "password",\n            name: "password",\n            autocomplete: "new-password",\n            id: _vm._uid + "password_first"\n          },\n          domProps: {\n            value: _vm.passwordFirst\n          },\n          on: {\n            input: function input($event) {\n              if ($event.target.composing) return;\n              _vm.passwordFirst = $event.target.value;\n            }\n          }\n        })];\n      },\n      proxy: true\n    }, {\n      key: "title",\n      fn: function fn() {\n        return [_vm._v("\\n                    " + _vm._s(_vm.$translate("Ceres::Template.resetPwPasswordHintTitle")) + "\\n                ")];\n      },\n      proxy: true\n    }, {\n      key: "content",\n      fn: function fn() {\n        return [_c("ul", {\n          staticClass: "pl-3"\n        }, [_c("li", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.resetPwPasswordHintLength")))]), _vm._v(" "), _c("li", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.resetPwPasswordHintDigit")))]), _vm._v(" "), _c("li", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.resetPwPasswordHintChar")))])])];\n      },\n      proxy: true\n    }])\n  }), _vm._v(" "), _c("label", {\n    attrs: {\n      for: _vm._uid + "password_first"\n    }\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.resetPwNewPassword")) + "*")])], 1)]), _vm._v(" "), _c("div", {\n    staticClass: "input-feedback-container",\n    attrs: {\n      "data-validate": "ref"\n    }\n  }, [_c("div", {\n    staticClass: "input-unit"\n  }, [_c("input", {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.passwordSecond,\n      expression: "passwordSecond"\n    }],\n    attrs: {\n      type: "password",\n      name: "password",\n      autocomplete: "new-password",\n      id: _vm._uid + "password_second",\n      "data-validate-ref": "#" + _vm._uid + "password_first"\n    },\n    domProps: {\n      value: _vm.passwordSecond\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.passwordSecond = $event.target.value;\n      }\n    }\n  }), _vm._v(" "), _c("label", {\n    attrs: {\n      for: _vm._uid + "password_second"\n    }\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.resetPwRepeatPassword")) + "*")])])]), _vm._v(" "), _c("button", {\n    staticClass: "btn btn-primary btn-appearance btn-large float-right",\n    attrs: {\n      disabled: _vm.isDisabled\n    },\n    on: {\n      click: function click($event) {\n        $event.preventDefault();\n        return _vm.validatePassword.apply(null, arguments);\n      }\n    }\n  }, [_c("span", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.resetPwSave")))]), _vm._v(" "), _c("i", {\n    staticClass: "fa fa-floppy-o",\n    attrs: {\n      "aria-hidden": "true"\n    }\n  })])]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/ResetPasswordForm.vue?vue&type=template&id=e000b036&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js\nvar es_number_constructor = __webpack_require__(9653);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ValidationService.js\nvar ValidationService = __webpack_require__(10892);\n// EXTERNAL MODULE: ./resources/js/src/app/services/UrlService.js + 1 modules\nvar UrlService = __webpack_require__(86160);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(29413);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ApiService.js\nvar ApiService = __webpack_require__(57653);\n// EXTERNAL MODULE: ./resources/js/src/app/services/NotificationService.js\nvar NotificationService = __webpack_require__(41841);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/customer/ResetPasswordForm.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n/* harmony default export */ var ResetPasswordFormvue_type_script_lang_js_ = ({\n  name: "reset-password-form",\n  props: {\n    contactId: {\n      type: Number,\n      required: true\n    },\n    hash: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      passwordFirst: "",\n      passwordSecond: "",\n      isDisabled: false\n    };\n  },\n  methods: {\n    validatePassword: function validatePassword() {\n      var _this = this;\n      ValidationService["default"].validate(this.$refs.resetPasswordForm).done(function () {\n        _this.saveNewPassword();\n      }).fail(function (invalidFields) {\n        ValidationService["default"].markInvalidFields(invalidFields, "has-error");\n        var validation = !(0,utils/* isNullOrUndefined */.le)(invalidFields[0]) ? invalidFields[0].dataset.validate : null;\n        if (validation === "password") {\n          NotificationService["default"].error(_this.$translate("Ceres::Template.resetPwInvalidPassword"));\n        } else if (validation === "ref") {\n          NotificationService["default"].error(_this.$translate("Ceres::Template.resetPwRepeatNewPassword"));\n        }\n      });\n    },\n    saveNewPassword: function saveNewPassword() {\n      var _this2 = this;\n      this.isDisabled = true;\n      ApiService["default"].post("/rest/io/customer/password", {\n        password: this.passwordFirst,\n        password2: this.passwordSecond,\n        contactId: this.contactId,\n        hash: this.hash\n      }).done(function () {\n        (0,UrlService/* navigateTo */.T8)(window.location.origin);\n        NotificationService["default"].success(_this2.$translate("Ceres::Template.resetPwChangePasswordSuccessful")).closeAfter(3000);\n      }).fail(function () {\n        _this2.isDisabled = false;\n        NotificationService["default"].error(_this2.$translate("Ceres::Template.resetPwChangePasswordFailed")).closeAfter(5000);\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/ResetPasswordForm.vue?vue&type=script&lang=js&\n /* harmony default export */ var customer_ResetPasswordFormvue_type_script_lang_js_ = (ResetPasswordFormvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(51900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/ResetPasswordForm.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  customer_ResetPasswordFormvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var ResetPasswordForm = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///93188\n')}}]);