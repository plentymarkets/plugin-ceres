"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[10],{25314:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ButtonSizePropertyMixin; }\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82772);\n/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(92222);\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47941);\n/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82526);\n/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(41817);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(41539);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(32165);\n/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(66992);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(78783);\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(33948);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(91038);\n/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(47042);\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(68309);\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(74916);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_13__);\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar BUTTON_SIZES = ["btn-sm", "btn-lg"];\nvar LEGACY_CLASS_MAP = {\n  "sm": "btn-sm",\n  "md": "",\n  "lg": "btn-lg"\n};\nvar ButtonSizePropertyMixin = {\n  props: {\n    buttonSize: {\n      type: [String, null],\n      default: null,\n      validator: function validator(value) {\n        return [""].concat(BUTTON_SIZES, _toConsumableArray(Object.keys(LEGACY_CLASS_MAP))).indexOf(value) !== -1;\n      }\n    }\n  },\n  computed: {\n    buttonSizeClass: function buttonSizeClass() {\n      if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize)) {\n        return LEGACY_CLASS_MAP[this.buttonSize];\n      }\n      return this.buttonSize;\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUzMTQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTUEsWUFBWSxHQUFHLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQztBQUV6QyxJQUFNQyxnQkFBZ0IsR0FBRztFQUNyQixJQUFJLEVBQUUsUUFBUTtFQUNkLElBQUksRUFBRSxFQUFFO0VBQ1IsSUFBSSxFQUFFO0FBQ1YsQ0FBQztBQUVNLElBQU1DLHVCQUF1QixHQUNwQztFQUNJQyxLQUFLLEVBQUU7SUFDSEMsVUFBVSxFQUNWO01BQ0lDLElBQUksRUFBRSxDQUFDQyxNQUFNLEVBQUUsSUFBSSxDQUFDO01BQ3BCQyxPQUFPLEVBQUUsSUFBSTtNQUNiQyxTQUFTLEVBQUUsbUJBQUFDLEtBQUssRUFDaEI7UUFDSSxPQUFPLENBQ0gsRUFBRSxTQUNDVCxZQUFZLHFCQUNaVSxNQUFNLENBQUNDLElBQUksQ0FBQ1YsZ0JBQWdCLENBQUMsR0FDbENXLE9BQU8sQ0FBQ0gsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO01BQzNCO0lBQ0o7RUFDSixDQUFDO0VBRURJLFFBQVEsRUFBRTtJQUNOQyxlQUFlLDZCQUNmO01BQ0ksSUFBSWIsZ0JBQWdCLENBQUNjLGNBQWMsQ0FBQyxJQUFJLENBQUNYLFVBQVUsQ0FBQyxFQUNwRDtRQUNJLE9BQU9ILGdCQUFnQixDQUFDLElBQUksQ0FBQ0csVUFBVSxDQUFDO01BQzVDO01BRUEsT0FBTyxJQUFJLENBQUNBLFVBQVU7SUFDMUI7RUFDSjtBQUNKLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DZXJlcy8uL3Jlc291cmNlcy9qcy9zcmMvYXBwL21peGlucy9idXR0b25TaXplUHJvcGVydHkubWl4aW4uanM/YzJkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBCVVRUT05fU0laRVMgPSBbXCJidG4tc21cIiwgXCJidG4tbGdcIl07XG5cbmNvbnN0IExFR0FDWV9DTEFTU19NQVAgPSB7XG4gICAgXCJzbVwiOiBcImJ0bi1zbVwiLFxuICAgIFwibWRcIjogXCJcIixcbiAgICBcImxnXCI6IFwiYnRuLWxnXCJcbn07XG5cbmV4cG9ydCBjb25zdCBCdXR0b25TaXplUHJvcGVydHlNaXhpbiA9XG57XG4gICAgcHJvcHM6IHtcbiAgICAgICAgYnV0dG9uU2l6ZTpcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogW1N0cmluZywgbnVsbF0sXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgdmFsaWRhdG9yOiB2YWx1ZSA9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgIFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIC4uLkJVVFRPTl9TSVpFUyxcbiAgICAgICAgICAgICAgICAgICAgLi4uT2JqZWN0LmtleXMoTEVHQUNZX0NMQVNTX01BUClcbiAgICAgICAgICAgICAgICBdLmluZGV4T2YodmFsdWUpICE9PSAtMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBjb21wdXRlZDoge1xuICAgICAgICBidXR0b25TaXplQ2xhc3MoKVxuICAgICAgICB7XG4gICAgICAgICAgICBpZiAoTEVHQUNZX0NMQVNTX01BUC5oYXNPd25Qcm9wZXJ0eSh0aGlzLmJ1dHRvblNpemUpKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJldHVybiBMRUdBQ1lfQ0xBU1NfTUFQW3RoaXMuYnV0dG9uU2l6ZV07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzLmJ1dHRvblNpemU7XG4gICAgICAgIH1cbiAgICB9XG59O1xuIl0sIm5hbWVzIjpbIkJVVFRPTl9TSVpFUyIsIkxFR0FDWV9DTEFTU19NQVAiLCJCdXR0b25TaXplUHJvcGVydHlNaXhpbiIsInByb3BzIiwiYnV0dG9uU2l6ZSIsInR5cGUiLCJTdHJpbmciLCJkZWZhdWx0IiwidmFsaWRhdG9yIiwidmFsdWUiLCJPYmplY3QiLCJrZXlzIiwiaW5kZXhPZiIsImNvbXB1dGVkIiwiYnV0dG9uU2l6ZUNsYXNzIiwiaGFzT3duUHJvcGVydHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25314\n')},2379:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ NewsletterInput; }\n});\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js\nvar es_array_concat = __webpack_require__(92222);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js\nvar es_array_slice = __webpack_require__(47042);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/newsletter/NewsletterInput.vue?vue&type=template&id=161e5506&\n\n\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("form", {\n    ref: "newsletterForm",\n    attrs: {\n      id: "newsletter-input-form_" + _vm._uid,\n      method: "post"\n    },\n    on: {\n      submit: function submit($event) {\n        $event.preventDefault();\n        return _vm.validateData.apply(null, arguments);\n      }\n    }\n  }, [_c("div", {\n    staticClass: "row"\n  }, [_vm.showNameInputs ? _c("div", {\n    staticClass: "col-6"\n  }, [_c("div", {\n    staticClass: "input-unit",\n    attrs: {\n      "data-validate": "!regex"\n    }\n  }, [_c("label", {\n    attrs: {\n      for: "first-name-input_" + _vm._uid\n    }\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.newsletterFirstName")))]), _vm._v(" "), _c("input", {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.firstName,\n      expression: "firstName"\n    }],\n    attrs: {\n      type: "text",\n      "data-validate-ref": "/[.:\\\\/\\\\d]/g",\n      id: "first-name-input_" + _vm._uid,\n      "data-testing": "nl-first-name"\n    },\n    domProps: {\n      value: _vm.firstName\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.firstName = $event.target.value;\n      }\n    }\n  })])]) : _vm._e(), _vm._v(" "), _vm.showNameInputs ? _c("div", {\n    staticClass: "col-6 pl-0"\n  }, [_c("div", {\n    staticClass: "input-unit",\n    attrs: {\n      "data-validate": "!regex"\n    }\n  }, [_c("label", {\n    attrs: {\n      for: "last-name-input_" + _vm._uid\n    }\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.newsletterLastName")))]), _vm._v(" "), _c("input", {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.lastName,\n      expression: "lastName"\n    }],\n    attrs: {\n      type: "text",\n      "data-validate-ref": "/[.:\\\\/\\\\d]/g",\n      id: "last-name-input_" + _vm._uid,\n      "data-testing": "nl-last-name"\n    },\n    domProps: {\n      value: _vm.lastName\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.lastName = $event.target.value;\n      }\n    }\n  })])]) : _vm._e(), _vm._v(" "), _c("div", {\n    staticClass: "col-12"\n  }, [_c("div", {\n    staticClass: "input-group"\n  }, [_c("div", {\n    staticClass: "input-unit",\n    attrs: {\n      "data-validate": "mail"\n    }\n  }, [_c("label", {\n    attrs: {\n      for: "email-input-id_" + _vm._uid\n    }\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.newsletterEmail")) + " " + _vm._s(_vm.$translate("Ceres::Template.newsletterIsRequiredFootnote")))]), _vm._v(" "), _c("input", {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.email,\n      expression: "email"\n    }],\n    attrs: {\n      type: "email",\n      autocomplete: "email",\n      id: "email-input-id_" + _vm._uid,\n      "data-testing": "nl-mail"\n    },\n    domProps: {\n      value: _vm.email\n    },\n    on: {\n      focus: function focus($event) {\n        _vm.loadRecaptcha = true;\n      },\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.email = $event.target.value;\n      }\n    }\n  })]), _vm._v(" "), _c("input", {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.honeypot,\n      expression: "honeypot"\n    }],\n    staticClass: "honey",\n    attrs: {\n      autocomplete: "none",\n      type: "text",\n      name: "username",\n      tabindex: "-1"\n    },\n    domProps: {\n      value: _vm.honeypot\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.honeypot = $event.target.value;\n      }\n    }\n  })])]), _vm._v(" "), _vm.showPrivacyPolicyCheckbox ? _c("div", {\n    staticClass: "col-12"\n  }, [_c("div", {\n    staticClass: "form-check small",\n    attrs: {\n      "data-validate": ""\n    }\n  }, [_c("input", {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.privacyPolicyValue,\n      expression: "privacyPolicyValue"\n    }],\n    staticClass: "form-check-input",\n    attrs: {\n      type: "checkbox",\n      id: "privacy-policy-accept-id_" + _vm._uid,\n      name: "privacy-policy-accept",\n      "data-testing": "nl-policy"\n    },\n    domProps: {\n      checked: Array.isArray(_vm.privacyPolicyValue) ? _vm._i(_vm.privacyPolicyValue, null) > -1 : _vm.privacyPolicyValue\n    },\n    on: {\n      change: function change($event) {\n        var $$a = _vm.privacyPolicyValue,\n          $$el = $event.target,\n          $$c = $$el.checked ? true : false;\n        if (Array.isArray($$a)) {\n          var $$v = null,\n            $$i = _vm._i($$a, $$v);\n          if ($$el.checked) {\n            $$i < 0 && (_vm.privacyPolicyValue = $$a.concat([$$v]));\n          } else {\n            $$i > -1 && (_vm.privacyPolicyValue = $$a.slice(0, $$i).concat($$a.slice($$i + 1)));\n          }\n        } else {\n          _vm.privacyPolicyValue = $$c;\n        }\n      }\n    }\n  }), _vm._v(" "), _c("label", {\n    staticClass: "form-check-label",\n    attrs: {\n      for: "privacy-policy-accept-id_" + _vm._uid\n    },\n    domProps: {\n      innerHTML: _vm._s(_vm.privacyPolicyText)\n    }\n  })])]) : _vm._e(), _vm._v(" "), _c("div", {\n    staticClass: "col-12 mt-3"\n  }, [_c("div", {\n    staticClass: "input-group-btn"\n  }, [_c("button", {\n    staticClass: "btn btn-block btn-primary btn-appearance",\n    class: _vm.buttonSizeClass,\n    attrs: {\n      type: "button",\n      disabled: _vm.isDisabled,\n      "data-testing": "nl-send"\n    },\n    on: {\n      click: _vm.validateData\n    }\n  }, [_c("icon", {\n    attrs: {\n      icon: "paper-plane-o",\n      loading: _vm.isDisabled\n    }\n  }), _vm._v("\\n                    " + _vm._s(_vm.$translate("Ceres::Template.newsletterSubscribeButtonLabel")) + "\\n                ")], 1)])]), _vm._v(" "), _c("div", {\n    staticClass: "col-12 text-right small mt-2"\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.newsletterIsRequiredFootnote")) + " " + _vm._s(_vm.$translate("Ceres::Template.newsletterIsRequired")))])]), _vm._v(" "), !!_vm.$ceres.config.global.googleRecaptchaApiKey && _vm.loadRecaptcha ? _c("recaptcha") : _vm._e()], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/newsletter/NewsletterInput.vue?vue&type=template&id=161e5506&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js\nvar es_number_constructor = __webpack_require__(9653);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__(41539);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js\nvar web_dom_collections_for_each = __webpack_require__(54747);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js\nvar es_array_map = __webpack_require__(21249);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js\nvar es_array_filter = __webpack_require__(57327);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js\nvar es_function_name = __webpack_require__(68309);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ApiService.js\nvar ApiService = __webpack_require__(57653);\n// EXTERNAL MODULE: ./resources/js/src/app/services/NotificationService.js\nvar NotificationService = __webpack_require__(41841);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ValidationService.js\nvar ValidationService = __webpack_require__(10892);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/executeReCaptcha.js\nvar executeReCaptcha = __webpack_require__(56264);\n// EXTERNAL MODULE: ./resources/js/src/app/mixins/buttonSizeProperty.mixin.js\nvar buttonSizeProperty_mixin = __webpack_require__(25314);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/newsletter/NewsletterInput.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var NewsletterInputvue_type_script_lang_js_ = ({\n  mixins: [buttonSizeProperty_mixin/* ButtonSizePropertyMixin */.Z],\n  props: {\n    showNameInputs: {\n      type: Boolean,\n      default: false\n    },\n    showPrivacyPolicyCheckbox: {\n      type: Boolean,\n      default: true\n    },\n    emailFolder: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      firstName: "",\n      lastName: "",\n      email: "",\n      isDisabled: false,\n      privacyPolicyValue: false,\n      honeypot: "",\n      loadRecaptcha: false\n    };\n  },\n  computed: {\n    privacyPolicyText: function privacyPolicyText() {\n      var link = "<a href=\\"" + App.urls.privacyPolicy + "\\" target=\\"_blank\\"><span class=\\"text-primary text-appearance\\">" + this.$translate("Ceres::Template.checkoutPrivacyPolicy", {\n        "hyphen": "&shy;"\n      }) + "</span></a>";\n      return this.$translate("Ceres::Template.newsletterAcceptPrivacyPolicy", {\n        "policy": link\n      }) + this.$translate("Ceres::Template.newsletterIsRequiredFootnote");\n    }\n  },\n  methods: {\n    validateData: function validateData() {\n      var _this = this;\n      this.isDisabled = true;\n      ValidationService["default"].validate($("#newsletter-input-form_" + this._uid)).done(function () {\n        _this.save();\n      }).fail(function (invalidFields) {\n        ValidationService["default"].markInvalidFields(invalidFields, "error");\n        invalidFields.filter(function (field) {\n          return field.dataset.validate !== null;\n        }).map(function (field) {\n          return {\n            type: field.dataset.validate,\n            name: field.innerText\n          };\n        }).forEach(function (field) {\n          if (field.type === \'!regex\') {\n            NotificationService["default"].error(_this.$translate("Ceres::Template.newsletterNotAllowedCharacters", {\n              name: field.name\n            }));\n          }\n        });\n        _this.isDisabled = false;\n      });\n    },\n    save: function save() {\n      var _this2 = this;\n      var recaptchaEl = this.$el.querySelector("[data-recaptcha]");\n      if (App.config.global.googleRecaptchaApiKey && (!window.grecaptcha || !recaptchaEl)) {\n        NotificationService["default"].error(this.$translate("Ceres::Template.newsletterAcceptRecaptchaCookie"));\n        this.isDisabled = false;\n        return;\n      }\n      (0,executeReCaptcha/* executeReCaptcha */.j)(this.$el).then(function (recaptchaToken) {\n        ApiService["default"].post("/rest/io/customer/newsletter", {\n          email: _this2.email,\n          firstName: _this2.firstName,\n          lastName: _this2.lastName,\n          emailFolder: _this2.emailFolder,\n          honeypot: _this2.honeypot,\n          recaptcha: recaptchaToken\n        }).done(function (data) {\n          if (!!data.containsHoneypot) {\n            NotificationService["default"].warn(_this2.$translate("Ceres::Template.newsletterHoneypotWarning"));\n          } else {\n            NotificationService["default"].success(_this2.$translate("Ceres::Template.newsletterSuccessMessage")).closeAfter(3000);\n          }\n          _this2.resetInputs();\n        }).fail(function () {\n          NotificationService["default"].error(_this2.$translate("Ceres::Template.newsletterErrorMessage")).closeAfter(5000);\n        }).always(function () {\n          _this2.isDisabled = false;\n          _this2.resetRecaptcha();\n        });\n      });\n    },\n    resetInputs: function resetInputs() {\n      this.firstName = "";\n      this.lastName = "";\n      this.email = "";\n      this.privacyPolicyValue = false;\n    },\n    resetRecaptcha: function resetRecaptcha() {\n      if (App.config.global.googleRecaptchaVersion === 2 && window.grecaptcha) {\n        var recaptchaId = this.$el.querySelector("[data-recaptcha]");\n        window.grecaptcha.reset(recaptchaId);\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/newsletter/NewsletterInput.vue?vue&type=script&lang=js&\n /* harmony default export */ var newsletter_NewsletterInputvue_type_script_lang_js_ = (NewsletterInputvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(51900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/newsletter/NewsletterInput.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  newsletter_NewsletterInputvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var NewsletterInput = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2379\n')}}]);